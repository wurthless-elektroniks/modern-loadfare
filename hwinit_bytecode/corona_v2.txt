0000: store_word 0xe0000000, 0xd0008010
0008: store_half 2, 0xd0008004
000c: %r12_0 = load_half -7
0010: sync
0014: store_word 0, 0xe0020000
001c: %r10_0 = *(0xe0020000)
0024: sync
0028: store_word 0xc0000000, 0xe0020004
0034: %r10_0 = *(0xe0020004)
003c: sync
0040: store_word 0x00000018, 0xe1020004
0048: %r12_0 = *(0xe1020004)
004c: sync
0050: store_word 0xe4000000, 0xd0010010
0058: store_half 2, 0xd0010004
005c: %r12_0 = load_half -7
0060: sync
0064: store_word 0x04000000, 0xe40001a4
006c: %r12_0 = *(0xe40001a4)
0070: sync
0074: %r10_0 = *(0xd0000048)
0078: %r10_0 = and %r10_0, 0xfffffff8
0080: %r10_0 = or %r10_0, 7
0084: store_word %r10_0, 0xd0000048
0088: %r10_0 = *(0xe4000248)
008c: %r10_0 = and %r10_0, 0xfe7fffff
0094: store_word %r10_0, 0xe4000248
0098: %r12_0 = *(0xe400028c)
009c: %r10_0 = and %r10_0, 0xfe7fffff
00a4: store_word %r10_0, 0xe400028c
00a8: store_word_0_100 0, MC0_CNTL
00ac: store_word 0, 0xe40002a4
00b0: %r12_0 = *(0xe40002a4)
00b4: sync
00b8: store_word 0x00020100, 0xd0000018
00c0: store_word 0xea001000, 0xd0150010
00cc: store_half 2, 0xd0150004
00d4: %r10_0 = load_half -7
00dc: sync
00e0: store_word 0x000001e6, 0xea00101c
00e8: %r10_0 = *(0xea00101c)
00f0: sync
00f4: call 0x2ebc
00f8: call 0x2ec0
00fc: store_word %r10_0, 0xe40015e0
0100: %r10_0 = *(0xe40015e8)
0104: %r10_0 = and %r10_0, -2
0108: %r10_0 = or %r10_0, 1
010c: store_word %r10_0, 0xe40015e8
0110: %r10_0 = *(0xe40015e0)
0114: store_word %r10_0, 0xe40015e0
0118: %r10_0 = *(0xe40015e8)
011c: %r10_0 = and %r10_0, -3
0120: %r10_0 = or %r10_0, 0
0124: store_word %r10_0, 0xe40015e8
0128: %r10_0 = *(0xe40015e0)
012c: store_word %r10_0, 0xe40015e0
0130: %r10_0 = *(0xe40015e8)
0134: %r10_0 = and %r10_0, 0xffffffdf
013c: %r10_0 = or %r10_0, 0
0140: store_word %r10_0, 0xe40015e8
0144: %r10_0 = *(0xe40015e0)
0148: store_word %r10_0, 0xe40015e0
014c: %r10_0 = *(0xe40015e8)
0150: %r10_0 = and %r10_0, -2
0154: %r10_0 = or %r10_0, 0
0158: store_word %r10_0, 0xe40015e8
015c: %r10_0 = *(0xe40015e0)
0160: %r10_1 = 0x00000012
0168: call 0x2ec4
016c: %r10_0 = and %r11_0, 0x000000ff
0174: store_word %r11_0, 0xe400002c
0178: %r10_0 = *(0xd0008000)
017c: %r10_0 = rotlw_by_16_then_and %r10_0, 0x0000ffff
0184: %r10_1 = rotlw_by_28_then_and %r10_0, 0x0000000f
018c: store_word %r10_0, 0xe40015e0
0190: store_word %r10_1, 0xe40015e4
0194: %r10_1 = and %r10_1, 0x0000000f
019c: %r12_0 = *(0xe40015ec)
01a0: %r10_0 = rotlw_by_24_then_and %r10_0, 0xfffffff0
01a8: %r10_0 = or %r10_0, %r10_1
01ac: %r10_0 = rotlw_by_8_then_and %r10_0, -1
01b0: store_word %r10_0, 0xe40015ec
01b4: %r10_0 = *(0xe40015e0)
01b8: %r12_0 = load_word -6
01bc: %r10_0 = load_word -5
01c0: %r10_0 = and %r11_0, 0x000000ff
01c8: store_word %r10_0, 0xe40015e0
01cc: %r10_0 = *(0xe40015f0)
01d0: %r10_0 = and %r10_0, 0xffffff00
01d8: %r10_0 = or %r10_0, 0x00000080
01e0: store_word %r10_0, 0xe40015f0
01e4: %r10_0 = *(0xe40015e0)
01e8: store_word %r10_0, 0xe40015e0
01ec: %r10_0 = *(0xe40015f0)
01f0: %r10_0 = and %r10_0, 0xffff00ff
01f8: %r10_0 = or %r10_0, 0x00008000
0200: store_word %r10_0, 0xe40015f0
0204: %r10_0 = *(0xe40015e0)
0208: store_word %r10_0, 0xe40015e0
020c: %r12_0 = *(0xe40015ec)
0210: %r10_0 = rotlw_by_24_then_and %r10_0, 0x0000000f
0218: branch_cond0 %r10_0, 4 -> 0x0224 v
021c: %r10_0 = *(0xe40015e0)
0220: jmp 0x028c v
0224: %r10_0 = *(0xe40015e0)
0228: store_word %r10_0, 0xe40015e0
022c: %r10_0 = *(0xe40015f0)
0230: %r10_0 = and %r10_0, 0xffffff00
0238: %r10_0 = or %r10_0, 0x00000070
0240: store_word %r10_0, 0xe40015f0
0244: %r10_0 = *(0xe40015e0)
0248: store_word %r10_0, 0xe40015e0
024c: %r10_0 = *(0xe40015f0)
0250: %r10_0 = and %r10_0, 0xffff00ff
0258: %r10_0 = or %r10_0, 0x00003800
0260: store_word %r10_0, 0xe40015f0
0264: %r10_0 = *(0xe40015e0)
0268: store_word %r10_0, 0xe40015e0
026c: %r12_0 = *(0xe40015ec)
0270: %r10_0 = rotlw_by_24_then_and %r10_0, 0x0000000f
0278: branch_cond0 %r10_0, 5 -> 0x0284 v
027c: %r10_0 = *(0xe40015e0)
0280: jmp 0x028c v
0284: %r10_0 = *(0xe40015e0)
0288: jmp 0x0288 ^
028c: store_word 0x20000000, 0xe1020000
0294: store_word 0x20000000, 0xe1040000
029c: store_word 0, 0xe4002800
02a0: store_word 0x08000000, 0xe4002804
02a8: %r12_0 = load_word 0
02ac: %r13_1 = rotlw_by_28_then_and %r13_1, 7
02b0: branch_cond0 %r13_1, 0 -> 0x02cc v
02b4: %r10_0 = 0x0a058b78
02bc: %r11_1 = 0x00300208
02c4: %r12_0 = 0x03ff3202
02cc: branch_cond0 %r13_1, 1 -> 0x02e8 v
02d0: %r10_0 = 0x0a058cf4
02d8: %r11_1 = 0x00300200
02e0: %r12_0 = 0x03ff3202
02e8: branch_cond0 %r13_1, 2 -> 0x0304 v
02ec: %r10_0 = 0x0a0588f4
02f4: %r11_1 = 0x00300200
02fc: %r12_0 = 0x03ff3202
0304: branch_cond0 %r13_1, 3 -> 0x0320 v
0308: %r10_0 = 0x0a058fec
0310: %r11_1 = 0x00300200
0318: %r12_0 = 0x03ff3202
0320: branch_cond0 %r13_1, 4 -> 0x033c v
0324: %r10_0 = 0x0a058bec
032c: %r11_1 = 0x00300200
0334: %r12_0 = 0x03ff3202
033c: branch_cond0 %r13_1, 5 -> 0x0358 v
0340: %r10_0 = 0x0a058dd8
0348: %r11_1 = 0x00300200
0350: %r12_0 = 0x03ff3202
0358: branch_cond0 %r13_1, 6 -> 0x0374 v
035c: %r10_0 = 0x0a0589d8
0364: %r11_1 = 0x00300200
036c: %r12_0 = 0x03ff3202
0374: branch_cond0 %r13_1, 7 -> 0x0390 v
0378: %r10_0 = 0x0a058fb4
0380: %r11_1 = 0x00300200
0388: %r12_0 = 0x03ff3202
0390: %r10_0 = 0xe4000210
0398: %r10_1 = 0xe4000248
03a0: call 0x3414
03a4: %r13_1 = 0
03a8: branch_cond0 %r13_1, 0 -> 0x03c4 v
03ac: %r10_0 = 0x0a058aec
03b4: %r11_1 = 0x00300388
03bc: %r12_0 = 0x03ff3202
03c4: %r10_0 = 0xe4000284
03cc: %r10_1 = 0xe400028c
03d4: call 0x3414
03d8: call 0x4064
03dc: %r13_1 = 0
03e0: branch_cond0 %r13_1, 0 -> 0x03fc v
03e4: %r10_0 = 0x0a058b78
03ec: %r11_1 = 0x00300388
03f4: %r12_0 = 0x03ff3202
03fc: %r10_0 = 0xe4000244
0404: %r10_1 = 0xe4000218
040c: call 0x3414
0410: store_word 0, 0xe40001a8
0414: %r10_0 = 0x00000343
041c: store_word_0_100 %r10_0, MC0_PAD_IF_CNTL
0420: %r10_0 = 0
0424: store_word_0_100 %r10_0, MC0_PAD_IF_CNTL_2
0428: %r10_0 = 0
042c: store_word %r10_0, 0xe40015e0
0430: %r12_0 = *(0xe40015ec)
0434: %r10_0 = rotlw_by_24_then_and %r10_0, 0x0000000f
043c: beq %r10_0, 5 -> 0x0448 v
0440: %r10_0 = *(0xe40015e0)
0444: jmp 0x0454 v
0448: %r10_0 = *(0xe40015e0)
044c: %r10_0 = 0x04040404
0454: store_word_0_100 %r10_0, MC0_DLL_MASTER_ADJ_0
0458: store_word_0_100 %r10_0, MC0_DLL_MASTER_ADJ_1
045c: call 0x402c
0460: %r10_0 = 0x000088aa
0468: %r10_1 = 0x21001312
0470: %r10_0 = 0x00002210
0478: store_word %r10_0, 0xe40015e0
047c: %r12_0 = *(0xe40015ec)
0480: %r10_0 = rotlw_by_24_then_and %r10_0, 0x0000000f
0488: beq %r10_0, 5 -> 0x0494 v
048c: %r10_0 = *(0xe40015e0)
0490: jmp 0x04b0 v
0494: %r10_0 = *(0xe40015e0)
0498: %r10_0 = 0x000210aa
04a0: %r10_1 = 0x13455544
04a8: %r10_0 = 0x24644542
04b0: store_word_0_100 %r10_0, MC0_TERM_CNTL
04b4: store_word %r10_1, MC0_WR_STR_DLY
04b8: store_word %r11_0, MC1_WR_STR_DLY
04bc: store_word_0_100 1, MC0_PAD_CAL_CNTL
04c0: store_word_0_100 0x00000028, MC0_PAD_CAL_CNTL
04c8: call 0x4064
04cc: store_word 0, 0xe40002a4
04d0: store_word_0_100 0, MC0_CNTL
04d4: store_word_0_100 0, MC0_POINTER
04d8: store_word_0_100 0x001c0000, MC0_DRAM_CMD
04e0: store_word_0_100 2, MC0_CNTL
04e4: %r10_0 = *(MC1_CNTL)
04e8: sync
04ec: delay -7
04f0: %r10_0 = 1
04f4: store_word %r10_0, 0xe40002a4
04f8: %r12_0 = *(0xe40002a4)
04fc: sync
0500: delay -7
0504: store_word_0_100 0, MC0_POINTER
0508: store_word_0_100 0x423c0000, MC0_DRAM_CMD
0510: store_word_0_100 0x0a280100, MC0_DRAM_CMD
0518: store_word_0_100 0x06200221, MC0_DRAM_CMD
0520: store_word_0_100 0x0620808d, MC0_DRAM_CMD
0528: store_word_0_100 0x06200772, MC0_DRAM_CMD
0530: store_word_0_100 2, MC0_CNTL
0534: %r10_0 = *(MC1_CNTL)
0538: sync
053c: delay -7
0540: store_word_0_100 0, MC0_POINTER
0544: store_word_0_100 0x0a280100, MC0_DRAM_CMD
054c: store_word_0_100 0x2f240000, MC0_DRAM_CMD
0554: store_word_0_100 0x2f240000, MC0_DRAM_CMD
055c: store_word_0_100 0x0620c48d, MC0_DRAM_CMD
0564: store_word_0_100 2, MC0_CNTL
0568: %r10_0 = *(MC1_CNTL)
056c: sync
0570: %r12_0 = load_word -3
0574: %r12_0 = load_word -2
0578: store_word_0_100 0, MC0_POINTER
057c: store_word_0_100 0x0620c08d, MC0_DRAM_CMD
0584: store_word_0_100 2, MC0_CNTL
0588: store_word_0_100 0, MC0_POINTER
058c: store_word_0_100 0x0620a48d, MC0_DRAM_CMD
0594: store_word_0_100 2, MC0_CNTL
0598: %r10_0 = *(MC1_CNTL)
059c: sync
05a0: %r12_0 = load_word -1
05a4: %r12_0 = load_word 0
05a8: store_word_0_100 0, MC0_POINTER
05ac: store_word_0_100 0x0620a08d, MC0_DRAM_CMD
05b4: store_word_0_100 2, MC0_CNTL
05b8: %r10_1 = rotlw_by_0_then_and %r12_0, 0x000000ff
05c0: %r10_0 = %r10_1
05c4: call 0x3264
05c8: %r10_1 = rotlw_by_16_then_and %r12_0, 0x000000ff
05d0: call 0x3264
05d4: %r10_1 = rotlw_by_0_then_and %r12_1, 0x000000ff
05dc: call 0x3264
05e0: %r10_1 = rotlw_by_16_then_and %r12_1, 0x000000ff
05e8: call 0x3264
05ec: store_word %r10_0, 0xe40015e0
05f0: %r10_0 = *(0xe40015e8)
05f4: %r10_0 = and %r10_0, 0xffffffef
05fc: %r10_0 = or %r10_0, 0
0600: store_word %r10_0, 0xe40015e8
0604: %r10_0 = *(0xe40015e0)
0608: %r10_1 = rotlw_by_24_then_and %r13_0, 0x000000ff
0610: branch_cond0 %r10_1, 0x000000ff -> 0x0640 v
0618: store_word %r10_0, 0xe40015e0
061c: %r10_0 = *(0xe40015e8)
0620: %r10_0 = and %r10_0, 0xffffffef
0628: %r10_0 = or %r10_0, 0x00000010
0630: store_word %r10_0, 0xe40015e8
0634: %r10_0 = *(0xe40015e0)
0638: %r10_0 = 0x000000ff
0640: %r10_1 = rotlw_by_24_then_and %r13_0, 0x000000ff
0648: call 0x3264
064c: %r10_1 = rotlw_by_8_then_and %r13_0, 0x000000ff
0654: call 0x3264
0658: %r10_1 = rotlw_by_24_then_and %r13_1, 0x000000ff
0660: call 0x3264
0664: %r10_1 = rotlw_by_8_then_and %r13_1, 0x000000ff
066c: call 0x3264
0670: branch_cond0 %r11_1, 0 -> 0x08c8 v
0674: %r10_1 = rotlw_by_28_then_and %r12_0, 0x0000000f
067c: store_word %r10_0, 0xe40015e0
0680: store_word %r10_1, 0xe40015e4
0684: %r10_1 = and %r10_1, 0x0000000f
068c: %r12_0 = *(0xe40015ec)
0690: %r10_0 = rotlw_by_28_then_and %r10_0, 0xfffffff0
0698: %r10_0 = or %r10_0, %r10_1
069c: %r10_0 = rotlw_by_4_then_and %r10_0, -1
06a0: store_word %r10_0, 0xe40015ec
06a4: %r10_0 = *(0xe40015e0)
06a8: %r12_0 = load_word -6
06ac: %r10_1 = and %r12_0, 0x0000000f
06b4: store_word %r10_0, 0xe40015e0
06b8: %r10_0 = *(0xe40015e8)
06bc: %r10_0 = and %r10_0, 0xfffffff7
06c4: %r10_0 = or %r10_0, 0x00000008
06cc: store_word %r10_0, 0xe40015e8
06d0: %r10_0 = *(0xe40015e0)
06d4: branch_cond0 %r10_1, 1 -> 0x0774 v
06d8: store_word %r10_0, 0xe40015e0
06dc: %r12_0 = *(0xe40015ec)
06e0: %r10_0 = and %r10_0, 0xfffffff0
06e8: %r10_0 = or %r10_0, 1
06ec: store_word %r10_0, 0xe40015ec
06f0: %r10_0 = *(0xe40015e0)
06f4: store_word %r10_0, 0xe40015e0
06f8: %r12_0 = *(0xe40015ec)
06fc: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
0704: branch_cond0 %r10_0, 1 -> 0x0710 v
0708: %r10_0 = *(0xe40015e0)
070c: jmp 0x08d8 v
0710: %r10_0 = *(0xe40015e0)
0714: store_word %r10_0, 0xe40015e0
0718: %r12_0 = *(0xe40015ec)
071c: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
0724: branch_cond0 %r10_0, 2 -> 0x0730 v
0728: %r10_0 = *(0xe40015e0)
072c: jmp 0x08d8 v
0730: %r10_0 = *(0xe40015e0)
0734: store_word %r10_0, 0xe40015e0
0738: %r12_0 = *(0xe40015ec)
073c: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
0744: branch_cond0 %r10_0, 4 -> 0x0750 v
0748: %r10_0 = *(0xe40015e0)
074c: jmp 0x08d8 v
0750: %r10_0 = *(0xe40015e0)
0754: store_word %r10_0, 0xe40015e0
0758: %r10_0 = *(0xe40015e8)
075c: %r10_0 = and %r10_0, 0xfffffff7
0764: %r10_0 = or %r10_0, 0
0768: store_word %r10_0, 0xe40015e8
076c: %r10_0 = *(0xe40015e0)
0770: jmp 0x08c8 v
0774: branch_cond0 %r10_1, 2 -> 0x07b8 v
0778: store_word %r10_0, 0xe40015e0
077c: %r12_0 = *(0xe40015ec)
0780: %r10_0 = and %r10_0, 0xfffffff0
0788: %r10_0 = or %r10_0, 2
078c: store_word %r10_0, 0xe40015ec
0790: %r10_0 = *(0xe40015e0)
0794: store_word %r10_0, 0xe40015e0
0798: %r12_0 = *(0xe40015ec)
079c: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
07a4: branch_cond0 %r10_0, 5 -> 0x07b0 v
07a8: %r10_0 = *(0xe40015e0)
07ac: jmp 0x08d8 v
07b0: %r10_0 = *(0xe40015e0)
07b4: jmp 0x08c8 v
07b8: branch_cond0 %r10_1, 6 -> 0x0858 v
07bc: store_word %r10_0, 0xe40015e0
07c0: %r12_0 = *(0xe40015ec)
07c4: %r10_0 = and %r10_0, 0xfffffff0
07cc: %r10_0 = or %r10_0, 6
07d0: store_word %r10_0, 0xe40015ec
07d4: %r10_0 = *(0xe40015e0)
07d8: store_word %r10_0, 0xe40015e0
07dc: %r12_0 = *(0xe40015ec)
07e0: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
07e8: branch_cond0 %r10_0, 4 -> 0x07f4 v
07ec: %r10_0 = *(0xe40015e0)
07f0: jmp 0x08d8 v
07f4: %r10_0 = *(0xe40015e0)
07f8: store_word %r10_0, 0xe40015e0
07fc: %r10_0 = *(0xe40015e8)
0800: %r10_0 = and %r10_0, 0xfffffff7
0808: %r10_0 = or %r10_0, 0
080c: store_word %r10_0, 0xe40015e8
0810: %r10_0 = *(0xe40015e0)
0814: store_word %r10_0, 0xe40015e0
0818: %r12_0 = *(0xe40015ec)
081c: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
0824: branch_cond0 %r10_0, 1 -> 0x0830 v
0828: %r10_0 = *(0xe40015e0)
082c: jmp 0x08d8 v
0830: %r10_0 = *(0xe40015e0)
0834: store_word %r10_0, 0xe40015e0
0838: %r12_0 = *(0xe40015ec)
083c: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
0844: branch_cond0 %r10_0, 2 -> 0x0850 v
0848: %r10_0 = *(0xe40015e0)
084c: jmp 0x08d8 v
0850: %r10_0 = *(0xe40015e0)
0854: jmp 0x08c8 v
0858: branch_cond0 %r10_1, 0x00000008 -> 0x08c8 v
0860: store_word %r10_0, 0xe40015e0
0864: %r12_0 = *(0xe40015ec)
0868: %r10_0 = and %r10_0, 0xfffffff0
0870: %r10_0 = or %r10_0, 0x00000008
0878: store_word %r10_0, 0xe40015ec
087c: %r10_0 = *(0xe40015e0)
0880: store_word %r10_0, 0xe40015e0
0884: %r12_0 = *(0xe40015ec)
0888: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
0890: branch_cond0 %r10_0, 0 -> 0x089c v
0894: %r10_0 = *(0xe40015e0)
0898: jmp 0x08d8 v
089c: %r10_0 = *(0xe40015e0)
08a0: store_word %r10_0, 0xe40015e0
08a4: %r12_0 = *(0xe40015ec)
08a8: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
08b0: branch_cond0 %r10_0, 0x00000008 -> 0x08c0 v
08b8: %r10_0 = *(0xe40015e0)
08bc: jmp 0x08d8 v
08c0: %r10_0 = *(0xe40015e0)
08c4: jmp 0x08c8 v
08c8: store_word 0x0010109a, 0xe4000024
08d0: call 0x31cc
08d4: jmp 0x08d8 v
08d8: store_word %r10_0, 0xe40015e0
08dc: %r10_0 = *(0xe40015e8)
08e0: %r10_0 = and %r10_0, -5
08e4: %r10_0 = or %r10_0, 0
08e8: store_word %r10_0, 0xe40015e8
08ec: %r10_0 = *(0xe40015e0)
08f0: store_word %r10_0, 0xe40015e0
08f4: %r10_0 = *(0xe40015e8)
08f8: %r10_0 = rotlw_by_29_then_and %r10_0, 1
08fc: branch_cond0 %r10_0, 1 -> 0x0908 v
0900: %r10_0 = *(0xe40015e0)
0904: jmp 0x0940 v
0908: %r10_0 = *(0xe40015e0)
090c: store_word %r10_0, 0xe40015e0
0910: %r10_0 = *(0xe40015e8)
0914: %r10_0 = rotlw_by_28_then_and %r10_0, 1
0918: branch_cond0 %r10_0, 0 -> 0x0924 v
091c: %r10_0 = *(0xe40015e0)
0920: jmp 0x0940 v
0924: %r10_0 = *(0xe40015e0)
0928: store_word %r10_0, 0xe40015e0
092c: %r10_0 = *(0xe40015e8)
0930: %r10_0 = and %r10_0, -5
0934: %r10_0 = or %r10_0, 4
0938: store_word %r10_0, 0xe40015e8
093c: %r10_0 = *(0xe40015e0)
0940: %r12_0 = load_word -4
0944: %r11_1 = and %r11_1, 0xffffffe7
094c: store_word %r11_1, 0xe40002a4
0950: %r10_0 = 0x10000000
0958: store_word %r10_0, 0xe40015e0
095c: %r10_0 = *(0xe40015e8)
0960: %r10_0 = rotlw_by_28_then_and %r10_0, 1
0964: branch_cond0 %r10_0, 1 -> 0x0970 v
0968: %r10_0 = *(0xe40015e0)
096c: jmp 0x0978 v
0970: %r10_0 = *(0xe40015e0)
0974: %r10_0 = rotlw_by_1_then_and %r11_0, -2
0978: store_word %r10_0, 0xe40015e0
097c: %r10_0 = *(0xe40015e8)
0980: %r10_0 = rotlw_by_29_then_and %r10_0, 1
0984: branch_cond0 %r10_0, 0 -> 0x0990 v
0988: %r10_0 = *(0xe40015e0)
098c: jmp 0x0998 v
0990: %r10_0 = *(0xe40015e0)
0994: %r10_0 = rotlw_by_1_then_and %r11_0, -2
0998: store_word %r11_0, 0xe1020000
099c: store_word %r11_0, 0xe1040000
09a0: %r12_0 = load_word -6
09a4: %r10_1 = and %r10_1, -2
09a8: store_word %r10_1, 0xe40002a4
09ac: store_word_0_100 0, MC0_POINTER
09b0: store_word_0_100 0x001c0000, MC0_DRAM_CMD
09b8: store_word_0_100 2, MC0_CNTL
09bc: %r10_0 = *(MC1_CNTL)
09c0: sync
09c4: delay -7
09c8: %r10_1 = or %r10_1, 1
09cc: store_word %r10_1, 0xe40002a4
09d0: %r12_0 = *(0xe40002a4)
09d4: sync
09d8: delay -7
09dc: call 0x24f0
09e0: store_word_0_100 %r10_1, MC0_TERM_CNTL
09e4: %r10_1 = 0x040e3202
09ec: store_word %r10_0, 0xe40015e0
09f0: %r10_0 = *(0xe40015e8)
09f4: %r10_0 = rotlw_by_30_then_and %r10_0, 1
09f8: branch_cond0 %r10_0, 1 -> 0x0a04 v
09fc: %r10_0 = *(0xe40015e0)
0a00: jmp 0x0a54 v
0a04: %r10_0 = *(0xe40015e0)
0a08: %r10_1 = or %r10_1, 1
0a0c: store_word %r10_0, 0xe40015e0
0a10: %r10_0 = *(0xe40015e8)
0a14: %r10_0 = rotlw_by_29_then_and %r10_0, 1
0a18: branch_cond0 %r10_0, 0 -> 0x0a24 v
0a1c: %r10_0 = *(0xe40015e0)
0a20: jmp 0x0a54 v
0a24: %r10_0 = *(0xe40015e0)
0a28: store_word %r10_0, 0xe40015e0
0a2c: %r10_0 = *(0xe40015e8)
0a30: %r10_0 = rotlw_by_28_then_and %r10_0, 1
0a34: branch_cond0 %r10_0, 1 -> 0x0a40 v
0a38: %r10_0 = *(0xe40015e0)
0a3c: jmp 0x0a54 v
0a40: %r10_0 = *(0xe40015e0)
0a44: %r10_1 = or %r10_1, 0x08000080
0a4c: %r10_1 = and %r10_1, 0xfbffffff
0a54: store_word_0_100 %r10_1, MC0_DRAM_CONFIG
0a58: store_word_0_100 0x00000080, MC0_BSB_SNOOPED_TIMER_CNTL
0a60: store_word_0_100 0x00348084, MC0_TUNING_0
0a68: store_word_0_100 0x0000007a, MC0_TUNING_1
0a70: store_word_0_100 0x00106514, MC0_RD_BUFFER_CNTL_0
0a78: store_word_0_100 0x00210414, MC0_RD_BUFFER_CNTL_1
0a80: store_word_0_100 0x01283446, MC0_TIMING_CNTL_0
0a88: store_word_0_100 0x03620991, MC0_TIMING_CNTL_1
0a90: store_word_0_100 0x0c958107, MC0_TIMING_CNTL_2
0a98: store_word_0_100 0x00000018, MC0_WR_DATA_DLY_0
0aa0: delay -7
0aa4: store_word 0x00000100, 0xe40000f0
0aac: delay -7
0ab0: store_word 0, 0xe40000f0
0ab4: delay -7
0ab8: store_word_0_100 0x00000030, MC0_INTERRUPT_MASK
0ac0: store_word_0_100 0, MC0_POINTER
0ac4: store_word_0_100 0x423c0000, MC0_DRAM_CMD
0acc: store_word_0_100 0x0a280100, MC0_DRAM_CMD
0ad4: store_word_0_100 0x06200221, MC0_DRAM_CMD
0adc: call 0x27e8
0ae0: store_word_0_100 %r10_1, MC0_DRAM_CMD
0ae4: store_word_0_100 0x06200772, MC0_DRAM_CMD
0aec: call 0x2d38
0af0: beq %r10_1, 0 -> 0x0af8 v
0af4: store_word_0_100 %r10_1, MC0_DRAM_CMD
0af8: store_word_0_100 2, MC0_CNTL
0afc: %r10_0 = *(MC1_CNTL)
0b00: sync
0b04: delay -7
0b08: store_word_0_100 0, MC0_POINTER
0b0c: store_word_0_100 0x0a280100, MC0_DRAM_CMD
0b14: store_word_0_100 0x2f240000, MC0_DRAM_CMD
0b1c: store_word_0_100 0x2f240000, MC0_DRAM_CMD
0b24: store_word_0_100 0x003c0000, MC0_DRAM_CMD
0b2c: store_word_0_100 2, MC0_CNTL
0b30: store_word_0_100 0x00001000, MC0_CNTL
0b38: store_word_0_100 0x00000605, MC0_CNTL
0b40: %r10_0 = *(MC1_CNTL)
0b44: sync
0b48: delay -7
0b4c: store_word %r12_0, 4
0b50: store_word %r12_1, 0x00000008
0b54: store_word %r13_0, 0x0000000c
0b58: store_word %r13_1, 0x00000010
0b5c: store_word -1, 0xe4000208
0b60: %r10_0 = *(0xe4000208)
0b64: %r10_0 = rotlw_by_4_then_and %r10_0, 0x0000000f
0b6c: beq %r10_0, 0x0000000f -> 0x0b80 v
0b74: store_word 0x0016169a, 0xe4000024
0b7c: call 0x31cc
0b80: call 0x364c
0b84: beq %r11_0, 0 -> 0x0b94 v
0b88: store_word 0x0011119a, 0xe4000024
0b90: call 0x31cc
0b94: call 0x40b8
0b98: %r12_0 = load_word 0
0b9c: %r13_1 = and %r13_1, 0x0000000f
0ba4: branch_cond0 %r13_1, 0x0000000c -> 0x0bc4 v
0bac: %r10_0 = 0x0a058ae8
0bb4: %r11_1 = 0x00300388
0bbc: %r12_0 = 0x04113202
0bc4: branch_cond0 %r13_1, 0x0000000d -> 0x0be4 v
0bcc: %r10_0 = 0x0a058dd0
0bd4: %r11_1 = 0x00300388
0bdc: %r12_0 = 0x04113202
0be4: branch_cond0 %r13_1, 0x0000000e -> 0x0c04 v
0bec: %r10_0 = 0x0a0589d0
0bf4: %r11_1 = 0x00300388
0bfc: %r12_0 = 0x04123202
0c04: branch_cond0 %r13_1, 0x0000000f -> 0x0c24 v
0c0c: %r10_0 = 0x0a058fa4
0c14: %r11_1 = 0x00300388
0c1c: %r12_0 = 0x04123202
0c24: branch_cond0 %r13_1, 0 -> 0x0c40 v
0c28: %r10_0 = 0x0a058ba4
0c30: %r11_1 = 0x00300388
0c38: %r12_0 = 0x04123202
0c40: branch_cond0 %r13_1, 1 -> 0x0c5c v
0c44: %r10_0 = 0x0a058d48
0c4c: %r11_1 = 0x00300388
0c54: %r12_0 = 0x04133202
0c5c: branch_cond0 %r13_1, 2 -> 0x0c78 v
0c60: %r10_0 = 0x0a058948
0c68: %r11_1 = 0x00300388
0c70: %r12_0 = 0x04133202
0c78: branch_cond0 %r13_1, 3 -> 0x0c94 v
0c7c: %r10_0 = 0x0a058e94
0c84: %r11_1 = 0x00300388
0c8c: %r12_0 = 0x04133202
0c94: branch_cond0 %r13_1, 4 -> 0x0cb0 v
0c98: %r10_0 = 0x0a058a94
0ca0: %r11_1 = 0x00300388
0ca8: %r12_0 = 0x04143202
0cb0: branch_cond0 %r13_1, 5 -> 0x0ccc v
0cb4: %r10_0 = 0x0a058d2c
0cbc: %r11_1 = 0x00300388
0cc4: %r12_0 = 0x04143202
0ccc: branch_cond0 %r13_1, 6 -> 0x0ce8 v
0cd0: %r10_0 = 0x0a05892c
0cd8: %r11_1 = 0x00300388
0ce0: %r12_0 = 0x04153202
0ce8: branch_cond0 %r13_1, 7 -> 0x0d04 v
0cec: %r10_0 = 0x0a058e58
0cf4: %r11_1 = 0x00300388
0cfc: %r12_0 = 0x04153202
0d04: branch_cond0 %r13_1, 0x00000008 -> 0x0d24 v
0d0c: %r10_0 = 0x0a058a58
0d14: %r11_1 = 0x00300388
0d1c: %r12_0 = 0x04153202
0d24: branch_cond0 %r13_1, 0x00000009 -> 0x0d44 v
0d2c: %r10_0 = 0x0a058cb0
0d34: %r11_1 = 0x00300388
0d3c: %r12_0 = 0x04163202
0d44: branch_cond0 %r13_1, 0x0000000a -> 0x0d64 v
0d4c: %r10_0 = 0x0a0588b0
0d54: %r11_1 = 0x00300388
0d5c: %r12_0 = 0x04163202
0d64: branch_cond0 %r13_1, 0x0000000b -> 0x0d84 v
0d6c: %r10_0 = 0x0a058f60
0d74: %r11_1 = 0x00300388
0d7c: %r12_0 = 0x04163202
0d84: %r10_0 = 0xe4000284
0d8c: %r10_1 = 0xe400028c
0d94: call 0x3414
0d98: call 0x4064
0d9c: store_word %r10_0, 0xe40015e0
0da0: %r10_0 = *(0xe40015e8)
0da4: %r10_0 = rotlw_by_30_then_and %r10_0, 1
0da8: branch_cond0 %r10_0, 1 -> 0x0db4 v
0dac: %r10_0 = *(0xe40015e0)
0db0: jmp 0x0e04 v
0db4: %r10_0 = *(0xe40015e0)
0db8: %r12_0 = or %r12_0, 1
0dbc: store_word %r10_0, 0xe40015e0
0dc0: %r10_0 = *(0xe40015e8)
0dc4: %r10_0 = rotlw_by_29_then_and %r10_0, 1
0dc8: branch_cond0 %r10_0, 0 -> 0x0dd4 v
0dcc: %r10_0 = *(0xe40015e0)
0dd0: jmp 0x0e04 v
0dd4: %r10_0 = *(0xe40015e0)
0dd8: store_word %r10_0, 0xe40015e0
0ddc: %r10_0 = *(0xe40015e8)
0de0: %r10_0 = rotlw_by_28_then_and %r10_0, 1
0de4: branch_cond0 %r10_0, 1 -> 0x0df0 v
0de8: %r10_0 = *(0xe40015e0)
0dec: jmp 0x0e04 v
0df0: %r10_0 = *(0xe40015e0)
0df4: %r12_0 = or %r12_0, 0x08000080
0dfc: %r12_0 = and %r12_0, 0xfbffffff
0e04: store_word_0_100 %r12_0, MC0_DRAM_CONFIG
0e08: store_word_0_100 0x00000080, MC0_BSB_SNOOPED_TIMER_CNTL
0e10: store_word_0_100 0x20988088, MC0_TUNING_0
0e18: store_word_0_100 0x0000007a, MC0_TUNING_1
0e20: store_word_0_100 1, MC0_ARBITRATION_CNTL
0e24: store_word_0_100 0x00106514, MC0_RD_BUFFER_CNTL_0
0e2c: store_word_0_100 0x00210414, MC0_RD_BUFFER_CNTL_1
0e34: store_word_0_100 0x0128d87b, MC0_TIMING_CNTL_0
0e3c: store_word_0_100 0x03820edb, MC0_TIMING_CNTL_1
0e44: store_word_0_100 0x0c97914b, MC0_TIMING_CNTL_2
0e4c: store_word_0_100 0x00000025, MC0_WR_DATA_DLY_0
0e54: delay -7
0e58: store_word 0x00000100, 0xe40000f0
0e60: delay -7
0e64: store_word 0, 0xe40000f0
0e68: delay -7
0e6c: store_word_0_100 0x00000030, MC0_INTERRUPT_MASK
0e74: call 0x40d8
0e78: store_word_0_100 0, MC0_CNTL
0e7c: store_word_0_100 0, MC0_POINTER
0e80: store_word_0_100 0x0c280100, MC0_DRAM_CMD
0e88: store_word_0_100 0x2f240000, MC0_DRAM_CMD
0e90: call 0x2a40
0e94: store_word %r10_1, 0xe4000014
0e98: store_word_0_100 %r10_1, MC0_DRAM_CMD
0e9c: %r10_1 = 0x06200712
0ea4: store_word %r10_1, 0xe4000010
0ea8: store_word_0_100 %r10_1, MC0_DRAM_CMD
0eac: call 0x2d38
0eb0: beq %r10_1, 0 -> 0x0eb8 v
0eb4: store_word_0_100 %r10_1, MC0_DRAM_CMD
0eb8: store_word_0_100 0x003c0000, MC0_DRAM_CMD
0ec0: store_word_0_100 2, MC0_CNTL
0ec4: store_word_0_100 0x00001000, MC0_CNTL
0ecc: store_word_0_100 0x00000605, MC0_CNTL
0ed4: %r10_0 = *(MC1_CNTL)
0ed8: sync
0edc: delay -7
0ee0: store_word -1, 0xe4000208
0ee4: %r10_0 = *(0xe4000208)
0ee8: %r10_0 = rotlw_by_4_then_and %r10_0, 0x0000000f
0ef0: beq %r10_0, 0x0000000f -> 0x0f04 v
0ef8: store_word 0x0016169a, 0xe4000024
0f00: call 0x31cc
0f04: call 0x36fc
0f08: branch_cond0 %r13_1, -1 -> 0x2388 v
0f0c: op_1E 0, -7
0f10: store_word %r13_1, MC0_RD_STR_DLY_0
0f14: op_1E 0, -7
0f18: op_1E 1, -7
0f1c: store_word %r13_1, MC0_RD_STR_DLY_1
0f20: op_1E 1, -7
0f24: op_1E 2, -7
0f28: store_word %r13_1, MC1_RD_STR_DLY_0
0f2c: op_1E 2, -7
0f30: op_1E 3, -7
0f34: store_word %r13_1, MC1_RD_STR_DLY_1
0f38: op_1E 3, -7
0f3c: store_word %r10_0, 0xe40015e0
0f40: %r12_0 = *(0xe40015ec)
0f44: %r10_0 = rotlw_by_24_then_and %r10_0, 0x0000000f
0f4c: beq %r10_0, 4 -> 0x0f58 v
0f50: %r10_0 = *(0xe40015e0)
0f54: jmp 0x1434 v
0f58: %r10_0 = *(0xe40015e0)
0f5c: store_word %r10_0, 0xe40015e0
0f60: %r12_0 = *(0xe40015ec)
0f64: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
0f6c: beq %r10_0, 1 -> 0x0f78 v
0f70: %r10_0 = *(0xe40015e0)
0f74: jmp 0x0fe4 v
0f78: %r10_0 = *(0xe40015e0)
0f7c: store_word %r10_0, 0xe40015e0
0f80: %r12_0 = *(0xe40015ec)
0f84: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
0f8c: beq %r10_0, 1 -> 0x0f98 v
0f90: %r10_0 = *(0xe40015e0)
0f94: jmp 0x0fe4 v
0f98: %r10_0 = *(0xe40015e0)
0f9c: %r10_0 = 0
0fa0: %r11_1 = 1
0fa4: %r10_0 = MC0_RD_STR_DLY_0
0fac: %r10_1 = 0
0fb0: call 0x2d90
0fb4: %r10_0 = MC0_RD_STR_DLY_1
0fbc: %r10_1 = 0
0fc0: call 0x2d90
0fc4: %r10_0 = MC1_RD_STR_DLY_0
0fcc: %r10_1 = 0
0fd0: call 0x2d90
0fd4: %r10_0 = MC1_RD_STR_DLY_1
0fdc: %r10_1 = 2
0fe0: call 0x2d90
0fe4: store_word %r10_0, 0xe40015e0
0fe8: %r12_0 = *(0xe40015ec)
0fec: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
0ff4: beq %r10_0, 1 -> 0x1000 v
0ff8: %r10_0 = *(0xe40015e0)
0ffc: jmp 0x106c v
1000: %r10_0 = *(0xe40015e0)
1004: store_word %r10_0, 0xe40015e0
1008: %r12_0 = *(0xe40015ec)
100c: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
1014: beq %r10_0, 2 -> 0x1020 v
1018: %r10_0 = *(0xe40015e0)
101c: jmp 0x106c v
1020: %r10_0 = *(0xe40015e0)
1024: %r10_0 = 0
1028: %r11_1 = 1
102c: %r10_0 = MC0_RD_STR_DLY_0
1034: %r10_1 = 0
1038: call 0x2d90
103c: %r10_0 = MC0_RD_STR_DLY_1
1044: %r10_1 = 0
1048: call 0x2d90
104c: %r10_0 = MC1_RD_STR_DLY_0
1054: %r10_1 = 0
1058: call 0x2d90
105c: %r10_0 = MC1_RD_STR_DLY_1
1064: %r10_1 = 2
1068: call 0x2d90
106c: store_word %r10_0, 0xe40015e0
1070: %r12_0 = *(0xe40015ec)
1074: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
107c: beq %r10_0, 1 -> 0x1088 v
1080: %r10_0 = *(0xe40015e0)
1084: jmp 0x10f4 v
1088: %r10_0 = *(0xe40015e0)
108c: store_word %r10_0, 0xe40015e0
1090: %r12_0 = *(0xe40015ec)
1094: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
109c: beq %r10_0, 4 -> 0x10a8 v
10a0: %r10_0 = *(0xe40015e0)
10a4: jmp 0x10f4 v
10a8: %r10_0 = *(0xe40015e0)
10ac: %r10_0 = 0
10b0: %r11_1 = 1
10b4: %r10_0 = MC0_RD_STR_DLY_0
10bc: %r10_1 = 0
10c0: call 0x2d90
10c4: %r10_0 = MC0_RD_STR_DLY_1
10cc: %r10_1 = 0
10d0: call 0x2d90
10d4: %r10_0 = MC1_RD_STR_DLY_0
10dc: %r10_1 = 0
10e0: call 0x2d90
10e4: %r10_0 = MC1_RD_STR_DLY_1
10ec: %r10_1 = 0
10f0: call 0x2d90
10f4: store_word %r10_0, 0xe40015e0
10f8: %r12_0 = *(0xe40015ec)
10fc: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
1104: beq %r10_0, 2 -> 0x1110 v
1108: %r10_0 = *(0xe40015e0)
110c: jmp 0x117c v
1110: %r10_0 = *(0xe40015e0)
1114: store_word %r10_0, 0xe40015e0
1118: %r12_0 = *(0xe40015ec)
111c: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
1124: beq %r10_0, 5 -> 0x1130 v
1128: %r10_0 = *(0xe40015e0)
112c: jmp 0x117c v
1130: %r10_0 = *(0xe40015e0)
1134: %r10_0 = 0
1138: %r11_1 = 1
113c: %r10_0 = MC0_RD_STR_DLY_0
1144: %r10_1 = 0
1148: call 0x2d90
114c: %r10_0 = MC0_RD_STR_DLY_1
1154: %r10_1 = 0
1158: call 0x2d90
115c: %r10_0 = MC1_RD_STR_DLY_0
1164: %r10_1 = 0
1168: call 0x2d90
116c: %r10_0 = MC1_RD_STR_DLY_1
1174: %r10_1 = 0
1178: call 0x2d90
117c: store_word %r10_0, 0xe40015e0
1180: %r12_0 = *(0xe40015ec)
1184: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
118c: beq %r10_0, 6 -> 0x1198 v
1190: %r10_0 = *(0xe40015e0)
1194: jmp 0x1204 v
1198: %r10_0 = *(0xe40015e0)
119c: store_word %r10_0, 0xe40015e0
11a0: %r12_0 = *(0xe40015ec)
11a4: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
11ac: beq %r10_0, 1 -> 0x11b8 v
11b0: %r10_0 = *(0xe40015e0)
11b4: jmp 0x1204 v
11b8: %r10_0 = *(0xe40015e0)
11bc: %r10_0 = 0
11c0: %r11_1 = 1
11c4: %r10_0 = MC0_RD_STR_DLY_0
11cc: %r10_1 = 0
11d0: call 0x2d90
11d4: %r10_0 = MC0_RD_STR_DLY_1
11dc: %r10_1 = 0
11e0: call 0x2d90
11e4: %r10_0 = MC1_RD_STR_DLY_0
11ec: %r10_1 = 0
11f0: call 0x2d90
11f4: %r10_0 = MC1_RD_STR_DLY_1
11fc: %r10_1 = 0
1200: call 0x2d90
1204: store_word %r10_0, 0xe40015e0
1208: %r12_0 = *(0xe40015ec)
120c: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
1214: beq %r10_0, 6 -> 0x1220 v
1218: %r10_0 = *(0xe40015e0)
121c: jmp 0x128c v
1220: %r10_0 = *(0xe40015e0)
1224: store_word %r10_0, 0xe40015e0
1228: %r12_0 = *(0xe40015ec)
122c: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
1234: beq %r10_0, 2 -> 0x1240 v
1238: %r10_0 = *(0xe40015e0)
123c: jmp 0x128c v
1240: %r10_0 = *(0xe40015e0)
1244: %r10_0 = 0
1248: %r11_1 = 1
124c: %r10_0 = MC0_RD_STR_DLY_0
1254: %r10_1 = 0
1258: call 0x2d90
125c: %r10_0 = MC0_RD_STR_DLY_1
1264: %r10_1 = 0
1268: call 0x2d90
126c: %r10_0 = MC1_RD_STR_DLY_0
1274: %r10_1 = 0
1278: call 0x2d90
127c: %r10_0 = MC1_RD_STR_DLY_1
1284: %r10_1 = 0
1288: call 0x2d90
128c: store_word %r10_0, 0xe40015e0
1290: %r12_0 = *(0xe40015ec)
1294: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
129c: beq %r10_0, 6 -> 0x12a8 v
12a0: %r10_0 = *(0xe40015e0)
12a4: jmp 0x1314 v
12a8: %r10_0 = *(0xe40015e0)
12ac: store_word %r10_0, 0xe40015e0
12b0: %r12_0 = *(0xe40015ec)
12b4: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
12bc: beq %r10_0, 4 -> 0x12c8 v
12c0: %r10_0 = *(0xe40015e0)
12c4: jmp 0x1314 v
12c8: %r10_0 = *(0xe40015e0)
12cc: %r10_0 = 0
12d0: %r11_1 = 1
12d4: %r10_0 = MC0_RD_STR_DLY_0
12dc: %r10_1 = 0
12e0: call 0x2d90
12e4: %r10_0 = MC0_RD_STR_DLY_1
12ec: %r10_1 = 0
12f0: call 0x2d90
12f4: %r10_0 = MC1_RD_STR_DLY_0
12fc: %r10_1 = 0
1300: call 0x2d90
1304: %r10_0 = MC1_RD_STR_DLY_1
130c: %r10_1 = 0
1310: call 0x2d90
1314: store_word %r10_0, 0xe40015e0
1318: %r12_0 = *(0xe40015ec)
131c: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
1324: beq %r10_0, 0x00000008 -> 0x1334 v
132c: %r10_0 = *(0xe40015e0)
1330: jmp 0x13a0 v
1334: %r10_0 = *(0xe40015e0)
1338: store_word %r10_0, 0xe40015e0
133c: %r12_0 = *(0xe40015ec)
1340: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
1348: beq %r10_0, 0 -> 0x1354 v
134c: %r10_0 = *(0xe40015e0)
1350: jmp 0x13a0 v
1354: %r10_0 = *(0xe40015e0)
1358: %r10_0 = 0
135c: %r11_1 = 1
1360: %r10_0 = MC0_RD_STR_DLY_0
1368: %r10_1 = 0
136c: call 0x2d90
1370: %r10_0 = MC0_RD_STR_DLY_1
1378: %r10_1 = 0
137c: call 0x2d90
1380: %r10_0 = MC1_RD_STR_DLY_0
1388: %r10_1 = 0
138c: call 0x2d90
1390: %r10_0 = MC1_RD_STR_DLY_1
1398: %r10_1 = 0
139c: call 0x2d90
13a0: store_word %r10_0, 0xe40015e0
13a4: %r12_0 = *(0xe40015ec)
13a8: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
13b0: beq %r10_0, 0x00000008 -> 0x13c0 v
13b8: %r10_0 = *(0xe40015e0)
13bc: jmp 0x1430 v
13c0: %r10_0 = *(0xe40015e0)
13c4: store_word %r10_0, 0xe40015e0
13c8: %r12_0 = *(0xe40015ec)
13cc: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
13d4: beq %r10_0, 0x00000008 -> 0x13e4 v
13dc: %r10_0 = *(0xe40015e0)
13e0: jmp 0x1430 v
13e4: %r10_0 = *(0xe40015e0)
13e8: %r10_0 = 0
13ec: %r11_1 = 1
13f0: %r10_0 = MC0_RD_STR_DLY_0
13f8: %r10_1 = 0
13fc: call 0x2d90
1400: %r10_0 = MC0_RD_STR_DLY_1
1408: %r10_1 = 0
140c: call 0x2d90
1410: %r10_0 = MC1_RD_STR_DLY_0
1418: %r10_1 = 0
141c: call 0x2d90
1420: %r10_0 = MC1_RD_STR_DLY_1
1428: %r10_1 = 0
142c: call 0x2d90
1430: jmp 0x1908 v
1434: store_word %r10_0, 0xe40015e0
1438: %r12_0 = *(0xe40015ec)
143c: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
1444: beq %r10_0, 1 -> 0x1450 v
1448: %r10_0 = *(0xe40015e0)
144c: jmp 0x14bc v
1450: %r10_0 = *(0xe40015e0)
1454: store_word %r10_0, 0xe40015e0
1458: %r12_0 = *(0xe40015ec)
145c: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
1464: beq %r10_0, 1 -> 0x1470 v
1468: %r10_0 = *(0xe40015e0)
146c: jmp 0x14bc v
1470: %r10_0 = *(0xe40015e0)
1474: %r10_0 = 0
1478: %r11_1 = 1
147c: %r10_0 = MC0_RD_STR_DLY_0
1484: %r10_1 = 0
1488: call 0x2d90
148c: %r10_0 = MC0_RD_STR_DLY_1
1494: %r10_1 = 0
1498: call 0x2d90
149c: %r10_0 = MC1_RD_STR_DLY_0
14a4: %r10_1 = 0
14a8: call 0x2d90
14ac: %r10_0 = MC1_RD_STR_DLY_1
14b4: %r10_1 = 2
14b8: call 0x2d90
14bc: store_word %r10_0, 0xe40015e0
14c0: %r12_0 = *(0xe40015ec)
14c4: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
14cc: beq %r10_0, 1 -> 0x14d8 v
14d0: %r10_0 = *(0xe40015e0)
14d4: jmp 0x1544 v
14d8: %r10_0 = *(0xe40015e0)
14dc: store_word %r10_0, 0xe40015e0
14e0: %r12_0 = *(0xe40015ec)
14e4: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
14ec: beq %r10_0, 2 -> 0x14f8 v
14f0: %r10_0 = *(0xe40015e0)
14f4: jmp 0x1544 v
14f8: %r10_0 = *(0xe40015e0)
14fc: %r10_0 = 0
1500: %r11_1 = 1
1504: %r10_0 = MC0_RD_STR_DLY_0
150c: %r10_1 = 0
1510: call 0x2d90
1514: %r10_0 = MC0_RD_STR_DLY_1
151c: %r10_1 = 0
1520: call 0x2d90
1524: %r10_0 = MC1_RD_STR_DLY_0
152c: %r10_1 = 0
1530: call 0x2d90
1534: %r10_0 = MC1_RD_STR_DLY_1
153c: %r10_1 = 2
1540: call 0x2d90
1544: store_word %r10_0, 0xe40015e0
1548: %r12_0 = *(0xe40015ec)
154c: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
1554: beq %r10_0, 1 -> 0x1560 v
1558: %r10_0 = *(0xe40015e0)
155c: jmp 0x15cc v
1560: %r10_0 = *(0xe40015e0)
1564: store_word %r10_0, 0xe40015e0
1568: %r12_0 = *(0xe40015ec)
156c: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
1574: beq %r10_0, 4 -> 0x1580 v
1578: %r10_0 = *(0xe40015e0)
157c: jmp 0x15cc v
1580: %r10_0 = *(0xe40015e0)
1584: %r10_0 = 0
1588: %r11_1 = 1
158c: %r10_0 = MC0_RD_STR_DLY_0
1594: %r10_1 = 0
1598: call 0x2d90
159c: %r10_0 = MC0_RD_STR_DLY_1
15a4: %r10_1 = 0
15a8: call 0x2d90
15ac: %r10_0 = MC1_RD_STR_DLY_0
15b4: %r10_1 = 0
15b8: call 0x2d90
15bc: %r10_0 = MC1_RD_STR_DLY_1
15c4: %r10_1 = 0
15c8: call 0x2d90
15cc: store_word %r10_0, 0xe40015e0
15d0: %r12_0 = *(0xe40015ec)
15d4: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
15dc: beq %r10_0, 2 -> 0x15e8 v
15e0: %r10_0 = *(0xe40015e0)
15e4: jmp 0x1654 v
15e8: %r10_0 = *(0xe40015e0)
15ec: store_word %r10_0, 0xe40015e0
15f0: %r12_0 = *(0xe40015ec)
15f4: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
15fc: beq %r10_0, 5 -> 0x1608 v
1600: %r10_0 = *(0xe40015e0)
1604: jmp 0x1654 v
1608: %r10_0 = *(0xe40015e0)
160c: %r10_0 = 0
1610: %r11_1 = 1
1614: %r10_0 = MC0_RD_STR_DLY_0
161c: %r10_1 = 0
1620: call 0x2d90
1624: %r10_0 = MC0_RD_STR_DLY_1
162c: %r10_1 = 0
1630: call 0x2d90
1634: %r10_0 = MC1_RD_STR_DLY_0
163c: %r10_1 = 0
1640: call 0x2d90
1644: %r10_0 = MC1_RD_STR_DLY_1
164c: %r10_1 = 0
1650: call 0x2d90
1654: store_word %r10_0, 0xe40015e0
1658: %r12_0 = *(0xe40015ec)
165c: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
1664: beq %r10_0, 6 -> 0x1670 v
1668: %r10_0 = *(0xe40015e0)
166c: jmp 0x16dc v
1670: %r10_0 = *(0xe40015e0)
1674: store_word %r10_0, 0xe40015e0
1678: %r12_0 = *(0xe40015ec)
167c: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
1684: beq %r10_0, 1 -> 0x1690 v
1688: %r10_0 = *(0xe40015e0)
168c: jmp 0x16dc v
1690: %r10_0 = *(0xe40015e0)
1694: %r10_0 = 0
1698: %r11_1 = 1
169c: %r10_0 = MC0_RD_STR_DLY_0
16a4: %r10_1 = 0
16a8: call 0x2d90
16ac: %r10_0 = MC0_RD_STR_DLY_1
16b4: %r10_1 = 0
16b8: call 0x2d90
16bc: %r10_0 = MC1_RD_STR_DLY_0
16c4: %r10_1 = 0
16c8: call 0x2d90
16cc: %r10_0 = MC1_RD_STR_DLY_1
16d4: %r10_1 = 0
16d8: call 0x2d90
16dc: store_word %r10_0, 0xe40015e0
16e0: %r12_0 = *(0xe40015ec)
16e4: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
16ec: beq %r10_0, 6 -> 0x16f8 v
16f0: %r10_0 = *(0xe40015e0)
16f4: jmp 0x1764 v
16f8: %r10_0 = *(0xe40015e0)
16fc: store_word %r10_0, 0xe40015e0
1700: %r12_0 = *(0xe40015ec)
1704: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
170c: beq %r10_0, 2 -> 0x1718 v
1710: %r10_0 = *(0xe40015e0)
1714: jmp 0x1764 v
1718: %r10_0 = *(0xe40015e0)
171c: %r10_0 = 0
1720: %r11_1 = 1
1724: %r10_0 = MC0_RD_STR_DLY_0
172c: %r10_1 = 0
1730: call 0x2d90
1734: %r10_0 = MC0_RD_STR_DLY_1
173c: %r10_1 = 0
1740: call 0x2d90
1744: %r10_0 = MC1_RD_STR_DLY_0
174c: %r10_1 = 0
1750: call 0x2d90
1754: %r10_0 = MC1_RD_STR_DLY_1
175c: %r10_1 = 0
1760: call 0x2d90
1764: store_word %r10_0, 0xe40015e0
1768: %r12_0 = *(0xe40015ec)
176c: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
1774: beq %r10_0, 6 -> 0x1780 v
1778: %r10_0 = *(0xe40015e0)
177c: jmp 0x17ec v
1780: %r10_0 = *(0xe40015e0)
1784: store_word %r10_0, 0xe40015e0
1788: %r12_0 = *(0xe40015ec)
178c: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
1794: beq %r10_0, 4 -> 0x17a0 v
1798: %r10_0 = *(0xe40015e0)
179c: jmp 0x17ec v
17a0: %r10_0 = *(0xe40015e0)
17a4: %r10_0 = 0
17a8: %r11_1 = 1
17ac: %r10_0 = MC0_RD_STR_DLY_0
17b4: %r10_1 = 0
17b8: call 0x2d90
17bc: %r10_0 = MC0_RD_STR_DLY_1
17c4: %r10_1 = 0
17c8: call 0x2d90
17cc: %r10_0 = MC1_RD_STR_DLY_0
17d4: %r10_1 = 0
17d8: call 0x2d90
17dc: %r10_0 = MC1_RD_STR_DLY_1
17e4: %r10_1 = 0
17e8: call 0x2d90
17ec: store_word %r10_0, 0xe40015e0
17f0: %r12_0 = *(0xe40015ec)
17f4: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
17fc: beq %r10_0, 0x00000008 -> 0x180c v
1804: %r10_0 = *(0xe40015e0)
1808: jmp 0x1878 v
180c: %r10_0 = *(0xe40015e0)
1810: store_word %r10_0, 0xe40015e0
1814: %r12_0 = *(0xe40015ec)
1818: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
1820: beq %r10_0, 0 -> 0x182c v
1824: %r10_0 = *(0xe40015e0)
1828: jmp 0x1878 v
182c: %r10_0 = *(0xe40015e0)
1830: %r10_0 = 0
1834: %r11_1 = 1
1838: %r10_0 = MC0_RD_STR_DLY_0
1840: %r10_1 = 0
1844: call 0x2d90
1848: %r10_0 = MC0_RD_STR_DLY_1
1850: %r10_1 = 0
1854: call 0x2d90
1858: %r10_0 = MC1_RD_STR_DLY_0
1860: %r10_1 = 0
1864: call 0x2d90
1868: %r10_0 = MC1_RD_STR_DLY_1
1870: %r10_1 = 0
1874: call 0x2d90
1878: store_word %r10_0, 0xe40015e0
187c: %r12_0 = *(0xe40015ec)
1880: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
1888: beq %r10_0, 0x00000008 -> 0x1898 v
1890: %r10_0 = *(0xe40015e0)
1894: jmp 0x1908 v
1898: %r10_0 = *(0xe40015e0)
189c: store_word %r10_0, 0xe40015e0
18a0: %r12_0 = *(0xe40015ec)
18a4: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
18ac: beq %r10_0, 0x00000008 -> 0x18bc v
18b4: %r10_0 = *(0xe40015e0)
18b8: jmp 0x1908 v
18bc: %r10_0 = *(0xe40015e0)
18c0: %r10_0 = 0
18c4: %r11_1 = 1
18c8: %r10_0 = MC0_RD_STR_DLY_0
18d0: %r10_1 = 0
18d4: call 0x2d90
18d8: %r10_0 = MC0_RD_STR_DLY_1
18e0: %r10_1 = 0
18e4: call 0x2d90
18e8: %r10_0 = MC1_RD_STR_DLY_0
18f0: %r10_1 = 0
18f4: call 0x2d90
18f8: %r10_0 = MC1_RD_STR_DLY_1
1900: %r10_1 = 0
1904: call 0x2d90
1908: %r10_0 = *(MC1_RD_STR_DLY_1)
190c: sync
1910: delay -7
1914: store_word_0_100 0x00001605, MC0_CNTL
191c: store_word_0_100 0x00000605, MC0_CNTL
1924: store_word 0, 0xe4000020
1928: call 0x3b94
192c: branch_cond0 %r13_1, -1 -> 0x2388 v
1930: op_1E 0, -7
1934: store_word %r13_1, MC0_WR_STR_DLL_0
1938: op_1E 0, -7
193c: op_1E 1, -7
1940: store_word %r13_1, MC0_WR_STR_DLL_1
1944: op_1E 1, -7
1948: op_1E 2, -7
194c: store_word %r13_1, MC1_WR_STR_DLL_0
1950: op_1E 2, -7
1954: op_1E 3, -7
1958: store_word %r13_1, MC1_WR_STR_DLL_1
195c: op_1E 3, -7
1960: store_word %r10_0, 0xe40015e0
1964: %r12_0 = *(0xe40015ec)
1968: %r10_0 = rotlw_by_24_then_and %r10_0, 0x0000000f
1970: beq %r10_0, 4 -> 0x197c v
1974: %r10_0 = *(0xe40015e0)
1978: jmp 0x1e80 v
197c: %r10_0 = *(0xe40015e0)
1980: store_word %r10_0, 0xe40015e0
1984: %r12_0 = *(0xe40015ec)
1988: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
1990: beq %r10_0, 1 -> 0x199c v
1994: %r10_0 = *(0xe40015e0)
1998: jmp 0x1a14 v
199c: %r10_0 = *(0xe40015e0)
19a0: store_word %r10_0, 0xe40015e0
19a4: %r12_0 = *(0xe40015ec)
19a8: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
19b0: beq %r10_0, 1 -> 0x19bc v
19b4: %r10_0 = *(0xe40015e0)
19b8: jmp 0x1a14 v
19bc: %r10_0 = *(0xe40015e0)
19c0: %r10_0 = 0
19c4: %r11_1 = 1
19c8: %r10_0 = MC0_WR_STR_DLL_0
19d0: %r10_1 = 0
19d4: call 0x2d90
19d8: %r10_0 = MC0_WR_STR_DLL_1
19e0: %r10_1 = 0x000000fd
19e8: call 0x2d90
19ec: %r10_0 = MC1_WR_STR_DLL_0
19f4: %r10_1 = 0xfcfcfdfd
19fc: call 0x2d90
1a00: %r10_0 = MC1_WR_STR_DLL_1
1a08: %r10_1 = 0x00fdfcfc
1a10: call 0x2d90
1a14: store_word %r10_0, 0xe40015e0
1a18: %r12_0 = *(0xe40015ec)
1a1c: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
1a24: beq %r10_0, 1 -> 0x1a30 v
1a28: %r10_0 = *(0xe40015e0)
1a2c: jmp 0x1aa8 v
1a30: %r10_0 = *(0xe40015e0)
1a34: store_word %r10_0, 0xe40015e0
1a38: %r12_0 = *(0xe40015ec)
1a3c: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
1a44: beq %r10_0, 2 -> 0x1a50 v
1a48: %r10_0 = *(0xe40015e0)
1a4c: jmp 0x1aa8 v
1a50: %r10_0 = *(0xe40015e0)
1a54: %r10_0 = 0
1a58: %r11_1 = 1
1a5c: %r10_0 = MC0_WR_STR_DLL_0
1a64: %r10_1 = 0
1a68: call 0x2d90
1a6c: %r10_0 = MC0_WR_STR_DLL_1
1a74: %r10_1 = 0x000000fd
1a7c: call 0x2d90
1a80: %r10_0 = MC1_WR_STR_DLL_0
1a88: %r10_1 = 0xfcfcfdfd
1a90: call 0x2d90
1a94: %r10_0 = MC1_WR_STR_DLL_1
1a9c: %r10_1 = 0x00fdfcfc
1aa4: call 0x2d90
1aa8: store_word %r10_0, 0xe40015e0
1aac: %r12_0 = *(0xe40015ec)
1ab0: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
1ab8: beq %r10_0, 1 -> 0x1ac4 v
1abc: %r10_0 = *(0xe40015e0)
1ac0: jmp 0x1b30 v
1ac4: %r10_0 = *(0xe40015e0)
1ac8: store_word %r10_0, 0xe40015e0
1acc: %r12_0 = *(0xe40015ec)
1ad0: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
1ad8: beq %r10_0, 4 -> 0x1ae4 v
1adc: %r10_0 = *(0xe40015e0)
1ae0: jmp 0x1b30 v
1ae4: %r10_0 = *(0xe40015e0)
1ae8: %r10_0 = 0
1aec: %r11_1 = 1
1af0: %r10_0 = MC0_WR_STR_DLL_0
1af8: %r10_1 = 0
1afc: call 0x2d90
1b00: %r10_0 = MC0_WR_STR_DLL_1
1b08: %r10_1 = 0
1b0c: call 0x2d90
1b10: %r10_0 = MC1_WR_STR_DLL_0
1b18: %r10_1 = 0
1b1c: call 0x2d90
1b20: %r10_0 = MC1_WR_STR_DLL_1
1b28: %r10_1 = 0
1b2c: call 0x2d90
1b30: store_word %r10_0, 0xe40015e0
1b34: %r12_0 = *(0xe40015ec)
1b38: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
1b40: beq %r10_0, 2 -> 0x1b4c v
1b44: %r10_0 = *(0xe40015e0)
1b48: jmp 0x1bb8 v
1b4c: %r10_0 = *(0xe40015e0)
1b50: store_word %r10_0, 0xe40015e0
1b54: %r12_0 = *(0xe40015ec)
1b58: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
1b60: beq %r10_0, 5 -> 0x1b6c v
1b64: %r10_0 = *(0xe40015e0)
1b68: jmp 0x1bb8 v
1b6c: %r10_0 = *(0xe40015e0)
1b70: %r10_0 = 0
1b74: %r11_1 = 1
1b78: %r10_0 = MC0_WR_STR_DLL_0
1b80: %r10_1 = 0
1b84: call 0x2d90
1b88: %r10_0 = MC0_WR_STR_DLL_1
1b90: %r10_1 = 0
1b94: call 0x2d90
1b98: %r10_0 = MC1_WR_STR_DLL_0
1ba0: %r10_1 = 0
1ba4: call 0x2d90
1ba8: %r10_0 = MC1_WR_STR_DLL_1
1bb0: %r10_1 = 0
1bb4: call 0x2d90
1bb8: store_word %r10_0, 0xe40015e0
1bbc: %r12_0 = *(0xe40015ec)
1bc0: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
1bc8: beq %r10_0, 6 -> 0x1bd4 v
1bcc: %r10_0 = *(0xe40015e0)
1bd0: jmp 0x1c40 v
1bd4: %r10_0 = *(0xe40015e0)
1bd8: store_word %r10_0, 0xe40015e0
1bdc: %r12_0 = *(0xe40015ec)
1be0: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
1be8: beq %r10_0, 1 -> 0x1bf4 v
1bec: %r10_0 = *(0xe40015e0)
1bf0: jmp 0x1c40 v
1bf4: %r10_0 = *(0xe40015e0)
1bf8: %r10_0 = 0
1bfc: %r11_1 = 1
1c00: %r10_0 = MC0_WR_STR_DLL_0
1c08: %r10_1 = 0
1c0c: call 0x2d90
1c10: %r10_0 = MC0_WR_STR_DLL_1
1c18: %r10_1 = 0
1c1c: call 0x2d90
1c20: %r10_0 = MC1_WR_STR_DLL_0
1c28: %r10_1 = 0
1c2c: call 0x2d90
1c30: %r10_0 = MC1_WR_STR_DLL_1
1c38: %r10_1 = 0
1c3c: call 0x2d90
1c40: store_word %r10_0, 0xe40015e0
1c44: %r12_0 = *(0xe40015ec)
1c48: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
1c50: beq %r10_0, 6 -> 0x1c5c v
1c54: %r10_0 = *(0xe40015e0)
1c58: jmp 0x1cc8 v
1c5c: %r10_0 = *(0xe40015e0)
1c60: store_word %r10_0, 0xe40015e0
1c64: %r12_0 = *(0xe40015ec)
1c68: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
1c70: beq %r10_0, 2 -> 0x1c7c v
1c74: %r10_0 = *(0xe40015e0)
1c78: jmp 0x1cc8 v
1c7c: %r10_0 = *(0xe40015e0)
1c80: %r10_0 = 0
1c84: %r11_1 = 1
1c88: %r10_0 = MC0_WR_STR_DLL_0
1c90: %r10_1 = 0
1c94: call 0x2d90
1c98: %r10_0 = MC0_WR_STR_DLL_1
1ca0: %r10_1 = 0
1ca4: call 0x2d90
1ca8: %r10_0 = MC1_WR_STR_DLL_0
1cb0: %r10_1 = 0
1cb4: call 0x2d90
1cb8: %r10_0 = MC1_WR_STR_DLL_1
1cc0: %r10_1 = 0
1cc4: call 0x2d90
1cc8: store_word %r10_0, 0xe40015e0
1ccc: %r12_0 = *(0xe40015ec)
1cd0: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
1cd8: beq %r10_0, 6 -> 0x1ce4 v
1cdc: %r10_0 = *(0xe40015e0)
1ce0: jmp 0x1d60 v
1ce4: %r10_0 = *(0xe40015e0)
1ce8: store_word %r10_0, 0xe40015e0
1cec: %r12_0 = *(0xe40015ec)
1cf0: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
1cf8: beq %r10_0, 4 -> 0x1d04 v
1cfc: %r10_0 = *(0xe40015e0)
1d00: jmp 0x1d60 v
1d04: %r10_0 = *(0xe40015e0)
1d08: %r10_0 = 0
1d0c: %r11_1 = 1
1d10: %r10_0 = MC0_WR_STR_DLL_0
1d18: %r10_1 = 0xfe000000
1d20: call 0x2d90
1d24: %r10_0 = MC0_WR_STR_DLL_1
1d2c: %r10_1 = 0x000000fd
1d34: call 0x2d90
1d38: %r10_0 = MC1_WR_STR_DLL_0
1d40: %r10_1 = 0xfbfcfdfe
1d48: call 0x2d90
1d4c: %r10_0 = MC1_WR_STR_DLL_1
1d54: %r10_1 = 0x00fcfdfc
1d5c: call 0x2d90
1d60: store_word %r10_0, 0xe40015e0
1d64: %r12_0 = *(0xe40015ec)
1d68: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
1d70: beq %r10_0, 0x00000008 -> 0x1d80 v
1d78: %r10_0 = *(0xe40015e0)
1d7c: jmp 0x1dec v
1d80: %r10_0 = *(0xe40015e0)
1d84: store_word %r10_0, 0xe40015e0
1d88: %r12_0 = *(0xe40015ec)
1d8c: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
1d94: beq %r10_0, 0 -> 0x1da0 v
1d98: %r10_0 = *(0xe40015e0)
1d9c: jmp 0x1dec v
1da0: %r10_0 = *(0xe40015e0)
1da4: %r10_0 = 0
1da8: %r11_1 = 1
1dac: %r10_0 = MC0_WR_STR_DLL_0
1db4: %r10_1 = 0
1db8: call 0x2d90
1dbc: %r10_0 = MC0_WR_STR_DLL_1
1dc4: %r10_1 = 0
1dc8: call 0x2d90
1dcc: %r10_0 = MC1_WR_STR_DLL_0
1dd4: %r10_1 = 0
1dd8: call 0x2d90
1ddc: %r10_0 = MC1_WR_STR_DLL_1
1de4: %r10_1 = 0
1de8: call 0x2d90
1dec: store_word %r10_0, 0xe40015e0
1df0: %r12_0 = *(0xe40015ec)
1df4: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
1dfc: beq %r10_0, 0x00000008 -> 0x1e0c v
1e04: %r10_0 = *(0xe40015e0)
1e08: jmp 0x1e7c v
1e0c: %r10_0 = *(0xe40015e0)
1e10: store_word %r10_0, 0xe40015e0
1e14: %r12_0 = *(0xe40015ec)
1e18: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
1e20: beq %r10_0, 0x00000008 -> 0x1e30 v
1e28: %r10_0 = *(0xe40015e0)
1e2c: jmp 0x1e7c v
1e30: %r10_0 = *(0xe40015e0)
1e34: %r10_0 = 0
1e38: %r11_1 = 1
1e3c: %r10_0 = MC0_WR_STR_DLL_0
1e44: %r10_1 = 0
1e48: call 0x2d90
1e4c: %r10_0 = MC0_WR_STR_DLL_1
1e54: %r10_1 = 0
1e58: call 0x2d90
1e5c: %r10_0 = MC1_WR_STR_DLL_0
1e64: %r10_1 = 0
1e68: call 0x2d90
1e6c: %r10_0 = MC1_WR_STR_DLL_1
1e74: %r10_1 = 0
1e78: call 0x2d90
1e7c: jmp 0x237c v
1e80: store_word %r10_0, 0xe40015e0
1e84: %r12_0 = *(0xe40015ec)
1e88: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
1e90: beq %r10_0, 1 -> 0x1e9c v
1e94: %r10_0 = *(0xe40015e0)
1e98: jmp 0x1f14 v
1e9c: %r10_0 = *(0xe40015e0)
1ea0: store_word %r10_0, 0xe40015e0
1ea4: %r12_0 = *(0xe40015ec)
1ea8: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
1eb0: beq %r10_0, 1 -> 0x1ebc v
1eb4: %r10_0 = *(0xe40015e0)
1eb8: jmp 0x1f14 v
1ebc: %r10_0 = *(0xe40015e0)
1ec0: %r10_0 = 0
1ec4: %r11_1 = 1
1ec8: %r10_0 = MC0_WR_STR_DLL_0
1ed0: %r10_1 = 0
1ed4: call 0x2d90
1ed8: %r10_0 = MC0_WR_STR_DLL_1
1ee0: %r10_1 = 0x000000fd
1ee8: call 0x2d90
1eec: %r10_0 = MC1_WR_STR_DLL_0
1ef4: %r10_1 = 0xfcfcfdfd
1efc: call 0x2d90
1f00: %r10_0 = MC1_WR_STR_DLL_1
1f08: %r10_1 = 0x00fdfcfc
1f10: call 0x2d90
1f14: store_word %r10_0, 0xe40015e0
1f18: %r12_0 = *(0xe40015ec)
1f1c: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
1f24: beq %r10_0, 1 -> 0x1f30 v
1f28: %r10_0 = *(0xe40015e0)
1f2c: jmp 0x1fa8 v
1f30: %r10_0 = *(0xe40015e0)
1f34: store_word %r10_0, 0xe40015e0
1f38: %r12_0 = *(0xe40015ec)
1f3c: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
1f44: beq %r10_0, 2 -> 0x1f50 v
1f48: %r10_0 = *(0xe40015e0)
1f4c: jmp 0x1fa8 v
1f50: %r10_0 = *(0xe40015e0)
1f54: %r10_0 = 0
1f58: %r11_1 = 1
1f5c: %r10_0 = MC0_WR_STR_DLL_0
1f64: %r10_1 = 0
1f68: call 0x2d90
1f6c: %r10_0 = MC0_WR_STR_DLL_1
1f74: %r10_1 = 0x000000fd
1f7c: call 0x2d90
1f80: %r10_0 = MC1_WR_STR_DLL_0
1f88: %r10_1 = 0xfcfcfdfd
1f90: call 0x2d90
1f94: %r10_0 = MC1_WR_STR_DLL_1
1f9c: %r10_1 = 0x00fdfcfc
1fa4: call 0x2d90
1fa8: store_word %r10_0, 0xe40015e0
1fac: %r12_0 = *(0xe40015ec)
1fb0: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
1fb8: beq %r10_0, 1 -> 0x1fc4 v
1fbc: %r10_0 = *(0xe40015e0)
1fc0: jmp 0x2030 v
1fc4: %r10_0 = *(0xe40015e0)
1fc8: store_word %r10_0, 0xe40015e0
1fcc: %r12_0 = *(0xe40015ec)
1fd0: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
1fd8: beq %r10_0, 4 -> 0x1fe4 v
1fdc: %r10_0 = *(0xe40015e0)
1fe0: jmp 0x2030 v
1fe4: %r10_0 = *(0xe40015e0)
1fe8: %r10_0 = 0
1fec: %r11_1 = 1
1ff0: %r10_0 = MC0_WR_STR_DLL_0
1ff8: %r10_1 = 0
1ffc: call 0x2d90
2000: %r10_0 = MC0_WR_STR_DLL_1
2008: %r10_1 = 0
200c: call 0x2d90
2010: %r10_0 = MC1_WR_STR_DLL_0
2018: %r10_1 = 0
201c: call 0x2d90
2020: %r10_0 = MC1_WR_STR_DLL_1
2028: %r10_1 = 0
202c: call 0x2d90
2030: store_word %r10_0, 0xe40015e0
2034: %r12_0 = *(0xe40015ec)
2038: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
2040: beq %r10_0, 2 -> 0x204c v
2044: %r10_0 = *(0xe40015e0)
2048: jmp 0x20b8 v
204c: %r10_0 = *(0xe40015e0)
2050: store_word %r10_0, 0xe40015e0
2054: %r12_0 = *(0xe40015ec)
2058: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
2060: beq %r10_0, 5 -> 0x206c v
2064: %r10_0 = *(0xe40015e0)
2068: jmp 0x20b8 v
206c: %r10_0 = *(0xe40015e0)
2070: %r10_0 = 0
2074: %r11_1 = 1
2078: %r10_0 = MC0_WR_STR_DLL_0
2080: %r10_1 = 0
2084: call 0x2d90
2088: %r10_0 = MC0_WR_STR_DLL_1
2090: %r10_1 = 0
2094: call 0x2d90
2098: %r10_0 = MC1_WR_STR_DLL_0
20a0: %r10_1 = 0
20a4: call 0x2d90
20a8: %r10_0 = MC1_WR_STR_DLL_1
20b0: %r10_1 = 0
20b4: call 0x2d90
20b8: store_word %r10_0, 0xe40015e0
20bc: %r12_0 = *(0xe40015ec)
20c0: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
20c8: beq %r10_0, 6 -> 0x20d4 v
20cc: %r10_0 = *(0xe40015e0)
20d0: jmp 0x2140 v
20d4: %r10_0 = *(0xe40015e0)
20d8: store_word %r10_0, 0xe40015e0
20dc: %r12_0 = *(0xe40015ec)
20e0: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
20e8: beq %r10_0, 1 -> 0x20f4 v
20ec: %r10_0 = *(0xe40015e0)
20f0: jmp 0x2140 v
20f4: %r10_0 = *(0xe40015e0)
20f8: %r10_0 = 0
20fc: %r11_1 = 1
2100: %r10_0 = MC0_WR_STR_DLL_0
2108: %r10_1 = 0
210c: call 0x2d90
2110: %r10_0 = MC0_WR_STR_DLL_1
2118: %r10_1 = 0
211c: call 0x2d90
2120: %r10_0 = MC1_WR_STR_DLL_0
2128: %r10_1 = 0
212c: call 0x2d90
2130: %r10_0 = MC1_WR_STR_DLL_1
2138: %r10_1 = 0
213c: call 0x2d90
2140: store_word %r10_0, 0xe40015e0
2144: %r12_0 = *(0xe40015ec)
2148: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
2150: beq %r10_0, 6 -> 0x215c v
2154: %r10_0 = *(0xe40015e0)
2158: jmp 0x21c8 v
215c: %r10_0 = *(0xe40015e0)
2160: store_word %r10_0, 0xe40015e0
2164: %r12_0 = *(0xe40015ec)
2168: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
2170: beq %r10_0, 2 -> 0x217c v
2174: %r10_0 = *(0xe40015e0)
2178: jmp 0x21c8 v
217c: %r10_0 = *(0xe40015e0)
2180: %r10_0 = 0
2184: %r11_1 = 1
2188: %r10_0 = MC0_WR_STR_DLL_0
2190: %r10_1 = 0
2194: call 0x2d90
2198: %r10_0 = MC0_WR_STR_DLL_1
21a0: %r10_1 = 0
21a4: call 0x2d90
21a8: %r10_0 = MC1_WR_STR_DLL_0
21b0: %r10_1 = 0
21b4: call 0x2d90
21b8: %r10_0 = MC1_WR_STR_DLL_1
21c0: %r10_1 = 0
21c4: call 0x2d90
21c8: store_word %r10_0, 0xe40015e0
21cc: %r12_0 = *(0xe40015ec)
21d0: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
21d8: beq %r10_0, 6 -> 0x21e4 v
21dc: %r10_0 = *(0xe40015e0)
21e0: jmp 0x2260 v
21e4: %r10_0 = *(0xe40015e0)
21e8: store_word %r10_0, 0xe40015e0
21ec: %r12_0 = *(0xe40015ec)
21f0: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
21f8: beq %r10_0, 4 -> 0x2204 v
21fc: %r10_0 = *(0xe40015e0)
2200: jmp 0x2260 v
2204: %r10_0 = *(0xe40015e0)
2208: %r10_0 = 0
220c: %r11_1 = 1
2210: %r10_0 = MC0_WR_STR_DLL_0
2218: %r10_1 = 0xfe000000
2220: call 0x2d90
2224: %r10_0 = MC0_WR_STR_DLL_1
222c: %r10_1 = 0x000000fd
2234: call 0x2d90
2238: %r10_0 = MC1_WR_STR_DLL_0
2240: %r10_1 = 0xfbfcfdfe
2248: call 0x2d90
224c: %r10_0 = MC1_WR_STR_DLL_1
2254: %r10_1 = 0x00fcfdfc
225c: call 0x2d90
2260: store_word %r10_0, 0xe40015e0
2264: %r12_0 = *(0xe40015ec)
2268: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
2270: beq %r10_0, 0x00000008 -> 0x2280 v
2278: %r10_0 = *(0xe40015e0)
227c: jmp 0x22ec v
2280: %r10_0 = *(0xe40015e0)
2284: store_word %r10_0, 0xe40015e0
2288: %r12_0 = *(0xe40015ec)
228c: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
2294: beq %r10_0, 0 -> 0x22a0 v
2298: %r10_0 = *(0xe40015e0)
229c: jmp 0x22ec v
22a0: %r10_0 = *(0xe40015e0)
22a4: %r10_0 = 0
22a8: %r11_1 = 1
22ac: %r10_0 = MC0_WR_STR_DLL_0
22b4: %r10_1 = 0
22b8: call 0x2d90
22bc: %r10_0 = MC0_WR_STR_DLL_1
22c4: %r10_1 = 0
22c8: call 0x2d90
22cc: %r10_0 = MC1_WR_STR_DLL_0
22d4: %r10_1 = 0
22d8: call 0x2d90
22dc: %r10_0 = MC1_WR_STR_DLL_1
22e4: %r10_1 = 0
22e8: call 0x2d90
22ec: store_word %r10_0, 0xe40015e0
22f0: %r12_0 = *(0xe40015ec)
22f4: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
22fc: beq %r10_0, 0x00000008 -> 0x230c v
2304: %r10_0 = *(0xe40015e0)
2308: jmp 0x237c v
230c: %r10_0 = *(0xe40015e0)
2310: store_word %r10_0, 0xe40015e0
2314: %r12_0 = *(0xe40015ec)
2318: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
2320: beq %r10_0, 0x00000008 -> 0x2330 v
2328: %r10_0 = *(0xe40015e0)
232c: jmp 0x237c v
2330: %r10_0 = *(0xe40015e0)
2334: %r10_0 = 0
2338: %r11_1 = 1
233c: %r10_0 = MC0_WR_STR_DLL_0
2344: %r10_1 = 0
2348: call 0x2d90
234c: %r10_0 = MC0_WR_STR_DLL_1
2354: %r10_1 = 0
2358: call 0x2d90
235c: %r10_0 = MC1_WR_STR_DLL_0
2364: %r10_1 = 0
2368: call 0x2d90
236c: %r10_0 = MC1_WR_STR_DLL_1
2374: %r10_1 = 0
2378: call 0x2d90
237c: %r12_0 = *(MC1_WR_STR_DLL_1)
2380: sync
2384: delay -7
2388: call 0x40b8
238c: call 0x4064
2390: call 0x40d8
2394: call 0x4724
2398: %r10_0 = 0
239c: %r11_1 = 1
23a0: %r12_0 = 3
23a4: store_word 0, 0xe4000024
23a8: store_word %r10_0, 0xe40015e0
23ac: %r10_0 = *(0xe40015e8)
23b0: %r10_0 = rotlw_by_30_then_and %r10_0, 1
23b4: branch_cond0 %r10_0, 1 -> 0x23c0 v
23b8: %r10_0 = *(0xe40015e0)
23bc: jmp 0x23c8 v
23c0: %r10_0 = *(0xe40015e0)
23c4: %r12_0 = 7
23c8: call 0x3574
23cc: %r10_0 = add %r11_0, 1
23d0: %r11_1 = rotlw_by_1_then_and %r11_1, -2
23d4: branch_cond1 %r11_0, %r12_0 -> 0x23c8 ^
23d8: %r12_0 = *(0xe4000024)
23dc: beq %r10_0, 0 -> 0x23ec v
23e0: store_word 0x0014149a, 0xe4000024
23e8: call 0x31cc
23ec: store_word 0x00000515, 0xe1020008
23f4: store_word 0x00000010, 0xe1060030
23fc: %r10_0 = load_word -5
2404: %r10_0 = and %r11_0, 0xffffe3ff
240c: %r10_0 = or %r11_0, 0x00001000
2414: store_word %r11_0, 0xe1060034
241c: %r12_0 = load_word -5
2420: %r10_0 = or %r11_0, 0x08000000
2428: store_word %r11_0, 0xe1040024
242c: %r10_0 = 0x00356ca9
2434: %r10_0 = or %r10_0, 0x02000000
243c: store_word %r10_0, 0xe400001c
2440: %r10_0 = *(0xe40015e8)
2444: %r10_0 = rotlw_by_29_then_and %r10_0, 1
2448: %r10_0 = load_word -6
244c: %r10_1 = rotlw_by_30_then_and %r10_1, 1
2450: %r10_1 = rotlw_by_1_then_and %r10_1, -1
2454: %r10_0 = or %r10_0, %r10_1
2458: %r10_0 = load_word -6
245c: %r10_1 = rotlw_by_28_then_and %r10_1, 1
2460: %r10_1 = rotlw_by_2_then_and %r10_1, -1
2464: %r10_0 = or %r10_0, %r10_1
2468: %r12_0 = load_word -6
246c: %r10_1 = rotlw_by_0_then_and %r10_1, 0x0000000f
2474: %r10_1 = rotlw_by_8_then_and %r10_1, -1
2478: %r10_0 = or %r10_0, %r10_1
247c: %r12_0 = load_word -6
2480: %r10_1 = rotlw_by_28_then_and %r10_1, 0x0000000f
2488: %r10_1 = rotlw_by_12_then_and %r10_1, -1
248c: %r10_0 = or %r10_0, %r10_1
2490: store_word %r10_0, 0xe4000020
2494: store_word 0, 0xe1020004
2498: store_half 6, 0xd0008004
249c: %r12_0 = load_half -7
24a0: sync
24a4: delay -7
24a8: store_word 0x00000030, 0xe1003100
24b0: store_word 0, 0xe1003000
24b8: store_word 0, 0xe1003200
24c0: store_word 0xe0f7fd00, 0xe1003300
24cc: store_word %r10_0, 0xe40015e0
24d0: %r10_0 = *(0xe40015e8)
24d4: %r10_0 = rotlw_by_27_then_and %r10_0, 1
24d8: branch_cond0 %r10_0, 0 -> 0x24e4 v
24dc: %r10_0 = *(0xe40015e0)
24e0: jmp 0x24ec v
24e4: %r10_0 = *(0xe40015e0)
24e8: done
24ec: die
24f0: store_word %r10_0, 0xe40015e0
24f4: %r12_0 = *(0xe40015ec)
24f8: %r10_0 = rotlw_by_24_then_and %r10_0, 0x0000000f
2500: beq %r10_0, 4 -> 0x250c v
2504: %r10_0 = *(0xe40015e0)
2508: jmp 0x267c v
250c: %r10_0 = *(0xe40015e0)
2510: %r10_1 = 0x000088aa
2518: store_word %r10_0, 0xe40015e0
251c: %r10_0 = *(0xe40015e8)
2520: %r10_0 = rotlw_by_28_then_and %r10_0, 1
2524: branch_cond0 %r10_0, 1 -> 0x2530 v
2528: %r10_0 = *(0xe40015e0)
252c: jmp 0x253c v
2530: %r10_0 = *(0xe40015e0)
2534: %r10_1 = 0x00008801
253c: store_word %r10_0, 0xe40015e0
2540: %r12_0 = *(0xe40015ec)
2544: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
254c: beq %r10_0, 1 -> 0x2558 v
2550: %r10_0 = *(0xe40015e0)
2554: jmp 0x25dc v
2558: %r10_0 = *(0xe40015e0)
255c: store_word %r10_0, 0xe40015e0
2560: %r10_0 = *(0xe40015e8)
2564: %r10_0 = rotlw_by_28_then_and %r10_0, 1
2568: branch_cond0 %r10_0, 0 -> 0x2574 v
256c: %r10_0 = *(0xe40015e0)
2570: jmp 0x25ac v
2574: %r10_0 = *(0xe40015e0)
2578: %r10_1 = 0x0000bb00
2580: store_word %r10_0, 0xe40015e0
2584: %r12_0 = *(0xe40015ec)
2588: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
2590: branch_cond0 %r10_0, 2 -> 0x259c v
2594: %r10_0 = *(0xe40015e0)
2598: jmp 0x25dc v
259c: %r10_0 = *(0xe40015e0)
25a0: %r10_1 = 0x0000bb55
25a8: jmp 0x25dc v
25ac: %r10_1 = 0x00008800
25b4: store_word %r10_0, 0xe40015e0
25b8: %r12_0 = *(0xe40015ec)
25bc: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
25c4: branch_cond0 %r10_0, 2 -> 0x25d0 v
25c8: %r10_0 = *(0xe40015e0)
25cc: jmp 0x25dc v
25d0: %r10_0 = *(0xe40015e0)
25d4: %r10_1 = 0x00008855
25dc: store_word %r10_0, 0xe40015e0
25e0: %r12_0 = *(0xe40015ec)
25e4: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
25ec: beq %r10_0, 6 -> 0x25f8 v
25f0: %r10_0 = *(0xe40015e0)
25f4: jmp 0x2628 v
25f8: %r10_0 = *(0xe40015e0)
25fc: %r10_1 = 0x00005555
2604: store_word %r10_0, 0xe40015e0
2608: %r10_0 = *(0xe40015e8)
260c: %r10_0 = rotlw_by_28_then_and %r10_0, 1
2610: branch_cond0 %r10_0, 1 -> 0x261c v
2614: %r10_0 = *(0xe40015e0)
2618: jmp 0x2628 v
261c: %r10_0 = *(0xe40015e0)
2620: %r10_1 = 0x00008801
2628: store_word %r10_0, 0xe40015e0
262c: %r12_0 = *(0xe40015ec)
2630: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
2638: beq %r10_0, 0x00000008 -> 0x2648 v
2640: %r10_0 = *(0xe40015e0)
2644: jmp 0x2678 v
2648: %r10_0 = *(0xe40015e0)
264c: %r10_1 = 0x00008855
2654: store_word %r10_0, 0xe40015e0
2658: %r10_0 = *(0xe40015e8)
265c: %r10_0 = rotlw_by_28_then_and %r10_0, 1
2660: branch_cond0 %r10_0, 1 -> 0x266c v
2664: %r10_0 = *(0xe40015e0)
2668: jmp 0x2678 v
266c: %r10_0 = *(0xe40015e0)
2670: %r10_1 = 0x00008801
2678: return
267c: %r10_1 = 0x000210aa
2684: store_word %r10_0, 0xe40015e0
2688: %r10_0 = *(0xe40015e8)
268c: %r10_0 = rotlw_by_28_then_and %r10_0, 1
2690: branch_cond0 %r10_0, 1 -> 0x269c v
2694: %r10_0 = *(0xe40015e0)
2698: jmp 0x26a8 v
269c: %r10_0 = *(0xe40015e0)
26a0: %r10_1 = 0x00021001
26a8: store_word %r10_0, 0xe40015e0
26ac: %r12_0 = *(0xe40015ec)
26b0: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
26b8: beq %r10_0, 1 -> 0x26c4 v
26bc: %r10_0 = *(0xe40015e0)
26c0: jmp 0x2748 v
26c4: %r10_0 = *(0xe40015e0)
26c8: store_word %r10_0, 0xe40015e0
26cc: %r10_0 = *(0xe40015e8)
26d0: %r10_0 = rotlw_by_28_then_and %r10_0, 1
26d4: branch_cond0 %r10_0, 0 -> 0x26e0 v
26d8: %r10_0 = *(0xe40015e0)
26dc: jmp 0x2718 v
26e0: %r10_0 = *(0xe40015e0)
26e4: %r10_1 = 0x00021055
26ec: store_word %r10_0, 0xe40015e0
26f0: %r12_0 = *(0xe40015ec)
26f4: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
26fc: branch_cond0 %r10_0, 2 -> 0x2708 v
2700: %r10_0 = *(0xe40015e0)
2704: jmp 0x2748 v
2708: %r10_0 = *(0xe40015e0)
270c: %r10_1 = 0x00021055
2714: jmp 0x2748 v
2718: %r10_1 = 0x00025255
2720: store_word %r10_0, 0xe40015e0
2724: %r12_0 = *(0xe40015ec)
2728: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
2730: branch_cond0 %r10_0, 2 -> 0x273c v
2734: %r10_0 = *(0xe40015e0)
2738: jmp 0x2748 v
273c: %r10_0 = *(0xe40015e0)
2740: %r10_1 = 0x00025255
2748: store_word %r10_0, 0xe40015e0
274c: %r12_0 = *(0xe40015ec)
2750: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
2758: beq %r10_0, 6 -> 0x2764 v
275c: %r10_0 = *(0xe40015e0)
2760: jmp 0x2794 v
2764: %r10_0 = *(0xe40015e0)
2768: %r10_1 = 0x00027355
2770: store_word %r10_0, 0xe40015e0
2774: %r10_0 = *(0xe40015e8)
2778: %r10_0 = rotlw_by_28_then_and %r10_0, 1
277c: branch_cond0 %r10_0, 1 -> 0x2788 v
2780: %r10_0 = *(0xe40015e0)
2784: jmp 0x2794 v
2788: %r10_0 = *(0xe40015e0)
278c: %r10_1 = 0x00021001
2794: store_word %r10_0, 0xe40015e0
2798: %r12_0 = *(0xe40015ec)
279c: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
27a4: beq %r10_0, 0x00000008 -> 0x27b4 v
27ac: %r10_0 = *(0xe40015e0)
27b0: jmp 0x27e4 v
27b4: %r10_0 = *(0xe40015e0)
27b8: %r10_1 = 0x0001ce55
27c0: store_word %r10_0, 0xe40015e0
27c4: %r10_0 = *(0xe40015e8)
27c8: %r10_0 = rotlw_by_28_then_and %r10_0, 1
27cc: branch_cond0 %r10_0, 1 -> 0x27d8 v
27d0: %r10_0 = *(0xe40015e0)
27d4: jmp 0x27e4 v
27d8: %r10_0 = *(0xe40015e0)
27dc: %r10_1 = 0x00021001
27e4: return
27e8: store_word %r10_0, 0xe40015e0
27ec: %r12_0 = *(0xe40015ec)
27f0: %r10_0 = rotlw_by_24_then_and %r10_0, 0x0000000f
27f8: beq %r10_0, 4 -> 0x2804 v
27fc: %r10_0 = *(0xe40015e0)
2800: jmp 0x2924 v
2804: %r10_0 = *(0xe40015e0)
2808: %r10_1 = 0x06228088
2810: store_word %r10_0, 0xe40015e0
2814: %r12_0 = *(0xe40015ec)
2818: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
2820: beq %r10_0, 1 -> 0x282c v
2824: %r10_0 = *(0xe40015e0)
2828: jmp 0x2838 v
282c: %r10_0 = *(0xe40015e0)
2830: %r10_1 = 0x06228088
2838: store_word %r10_0, 0xe40015e0
283c: %r12_0 = *(0xe40015ec)
2840: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
2848: beq %r10_0, 2 -> 0x2854 v
284c: %r10_0 = *(0xe40015e0)
2850: jmp 0x2860 v
2854: %r10_0 = *(0xe40015e0)
2858: %r10_1 = 0x06228088
2860: store_word %r10_0, 0xe40015e0
2864: %r12_0 = *(0xe40015ec)
2868: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
2870: beq %r10_0, 6 -> 0x287c v
2874: %r10_0 = *(0xe40015e0)
2878: jmp 0x28b0 v
287c: %r10_0 = *(0xe40015e0)
2880: %r10_1 = 0x06208088
2888: store_word %r10_0, 0xe40015e0
288c: %r12_0 = *(0xe40015ec)
2890: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
2898: branch_cond0 %r10_0, 2 -> 0x28a4 v
289c: %r10_0 = *(0xe40015e0)
28a0: jmp 0x28b0 v
28a4: %r10_0 = *(0xe40015e0)
28a8: %r10_1 = 0x06228088
28b0: store_word %r10_0, 0xe40015e0
28b4: %r12_0 = *(0xe40015ec)
28b8: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
28c0: beq %r10_0, 0x00000008 -> 0x28d0 v
28c8: %r10_0 = *(0xe40015e0)
28cc: jmp 0x28dc v
28d0: %r10_0 = *(0xe40015e0)
28d4: %r10_1 = 0x06228088
28dc: store_word %r10_0, 0xe40015e0
28e0: %r10_0 = *(0xe40015e8)
28e4: %r10_0 = rotlw_by_28_then_and %r10_0, 1
28e8: branch_cond0 %r10_0, 1 -> 0x28f4 v
28ec: %r10_0 = *(0xe40015e0)
28f0: jmp 0x2920 v
28f4: %r10_0 = *(0xe40015e0)
28f8: %r10_1 = or %r10_1, 4
28fc: store_word %r10_0, 0xe40015e0
2900: %r10_0 = *(0xe40015e8)
2904: %r10_0 = rotlw_by_29_then_and %r10_0, 1
2908: branch_cond0 %r10_0, 0 -> 0x2914 v
290c: %r10_0 = *(0xe40015e0)
2910: jmp 0x2920 v
2914: %r10_0 = *(0xe40015e0)
2918: %r10_1 = and %r10_1, 0xfffdffff
2920: return
2924: %r10_1 = 0x06228888
292c: store_word %r10_0, 0xe40015e0
2930: %r12_0 = *(0xe40015ec)
2934: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
293c: beq %r10_0, 1 -> 0x2948 v
2940: %r10_0 = *(0xe40015e0)
2944: jmp 0x2954 v
2948: %r10_0 = *(0xe40015e0)
294c: %r10_1 = 0x06228888
2954: store_word %r10_0, 0xe40015e0
2958: %r12_0 = *(0xe40015ec)
295c: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
2964: beq %r10_0, 2 -> 0x2970 v
2968: %r10_0 = *(0xe40015e0)
296c: jmp 0x297c v
2970: %r10_0 = *(0xe40015e0)
2974: %r10_1 = 0x06228088
297c: store_word %r10_0, 0xe40015e0
2980: %r12_0 = *(0xe40015ec)
2984: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
298c: beq %r10_0, 6 -> 0x2998 v
2990: %r10_0 = *(0xe40015e0)
2994: jmp 0x29cc v
2998: %r10_0 = *(0xe40015e0)
299c: %r10_1 = 0x06208888
29a4: store_word %r10_0, 0xe40015e0
29a8: %r12_0 = *(0xe40015ec)
29ac: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
29b4: branch_cond0 %r10_0, 2 -> 0x29c0 v
29b8: %r10_0 = *(0xe40015e0)
29bc: jmp 0x29cc v
29c0: %r10_0 = *(0xe40015e0)
29c4: %r10_1 = 0x06228888
29cc: store_word %r10_0, 0xe40015e0
29d0: %r12_0 = *(0xe40015ec)
29d4: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
29dc: beq %r10_0, 0x00000008 -> 0x29ec v
29e4: %r10_0 = *(0xe40015e0)
29e8: jmp 0x29f8 v
29ec: %r10_0 = *(0xe40015e0)
29f0: %r10_1 = 0x06228088
29f8: store_word %r10_0, 0xe40015e0
29fc: %r10_0 = *(0xe40015e8)
2a00: %r10_0 = rotlw_by_28_then_and %r10_0, 1
2a04: branch_cond0 %r10_0, 1 -> 0x2a10 v
2a08: %r10_0 = *(0xe40015e0)
2a0c: jmp 0x2a3c v
2a10: %r10_0 = *(0xe40015e0)
2a14: %r10_1 = or %r10_1, 4
2a18: store_word %r10_0, 0xe40015e0
2a1c: %r10_0 = *(0xe40015e8)
2a20: %r10_0 = rotlw_by_29_then_and %r10_0, 1
2a24: branch_cond0 %r10_0, 0 -> 0x2a30 v
2a28: %r10_0 = *(0xe40015e0)
2a2c: jmp 0x2a3c v
2a30: %r10_0 = *(0xe40015e0)
2a34: %r10_1 = and %r10_1, 0xfffdffff
2a3c: return
2a40: store_word %r10_0, 0xe40015e0
2a44: %r12_0 = *(0xe40015ec)
2a48: %r10_0 = rotlw_by_24_then_and %r10_0, 0x0000000f
2a50: beq %r10_0, 4 -> 0x2a5c v
2a54: %r10_0 = *(0xe40015e0)
2a58: jmp 0x2bcc v
2a5c: %r10_0 = *(0xe40015e0)
2a60: %r10_1 = 0x06228009
2a68: store_word %r10_0, 0xe40015e0
2a6c: %r12_0 = *(0xe40015ec)
2a70: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
2a78: beq %r10_0, 1 -> 0x2a84 v
2a7c: %r10_0 = *(0xe40015e0)
2a80: jmp 0x2ae0 v
2a84: %r10_0 = *(0xe40015e0)
2a88: %r10_1 = 0x0622800a
2a90: store_word %r10_0, 0xe40015e0
2a94: %r12_0 = *(0xe40015ec)
2a98: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
2aa0: branch_cond0 %r10_0, 2 -> 0x2aac v
2aa4: %r10_0 = *(0xe40015e0)
2aa8: jmp 0x2ae0 v
2aac: %r10_0 = *(0xe40015e0)
2ab0: %r10_1 = 0x06228008
2ab8: store_word %r10_0, 0xe40015e0
2abc: %r12_0 = *(0xe40015ec)
2ac0: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
2ac8: branch_cond0 %r10_0, 4 -> 0x2ad4 v
2acc: %r10_0 = *(0xe40015e0)
2ad0: jmp 0x2ae0 v
2ad4: %r10_0 = *(0xe40015e0)
2ad8: %r10_1 = 0x06228009
2ae0: store_word %r10_0, 0xe40015e0
2ae4: %r12_0 = *(0xe40015ec)
2ae8: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
2af0: beq %r10_0, 2 -> 0x2afc v
2af4: %r10_0 = *(0xe40015e0)
2af8: jmp 0x2b08 v
2afc: %r10_0 = *(0xe40015e0)
2b00: %r10_1 = 0x06228009
2b08: store_word %r10_0, 0xe40015e0
2b0c: %r12_0 = *(0xe40015ec)
2b10: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
2b18: beq %r10_0, 6 -> 0x2b24 v
2b1c: %r10_0 = *(0xe40015e0)
2b20: jmp 0x2b58 v
2b24: %r10_0 = *(0xe40015e0)
2b28: %r10_1 = 0x062080b8
2b30: store_word %r10_0, 0xe40015e0
2b34: %r12_0 = *(0xe40015ec)
2b38: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
2b40: branch_cond0 %r10_0, 2 -> 0x2b4c v
2b44: %r10_0 = *(0xe40015e0)
2b48: jmp 0x2b58 v
2b4c: %r10_0 = *(0xe40015e0)
2b50: %r10_1 = 0x062280b9
2b58: store_word %r10_0, 0xe40015e0
2b5c: %r12_0 = *(0xe40015ec)
2b60: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
2b68: beq %r10_0, 0x00000008 -> 0x2b78 v
2b70: %r10_0 = *(0xe40015e0)
2b74: jmp 0x2b84 v
2b78: %r10_0 = *(0xe40015e0)
2b7c: %r10_1 = 0x06228009
2b84: store_word %r10_0, 0xe40015e0
2b88: %r10_0 = *(0xe40015e8)
2b8c: %r10_0 = rotlw_by_28_then_and %r10_0, 1
2b90: branch_cond0 %r10_0, 1 -> 0x2b9c v
2b94: %r10_0 = *(0xe40015e0)
2b98: jmp 0x2bc8 v
2b9c: %r10_0 = *(0xe40015e0)
2ba0: %r10_1 = or %r10_1, 4
2ba4: store_word %r10_0, 0xe40015e0
2ba8: %r10_0 = *(0xe40015e8)
2bac: %r10_0 = rotlw_by_29_then_and %r10_0, 1
2bb0: branch_cond0 %r10_0, 0 -> 0x2bbc v
2bb4: %r10_0 = *(0xe40015e0)
2bb8: jmp 0x2bc8 v
2bbc: %r10_0 = *(0xe40015e0)
2bc0: %r10_1 = and %r10_1, 0xfffdffff
2bc8: return
2bcc: %r10_1 = 0x06228808
2bd4: store_word %r10_0, 0xe40015e0
2bd8: %r12_0 = *(0xe40015ec)
2bdc: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
2be4: beq %r10_0, 1 -> 0x2bf0 v
2be8: %r10_0 = *(0xe40015e0)
2bec: jmp 0x2c4c v
2bf0: %r10_0 = *(0xe40015e0)
2bf4: %r10_1 = 0x06228808
2bfc: store_word %r10_0, 0xe40015e0
2c00: %r12_0 = *(0xe40015ec)
2c04: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
2c0c: branch_cond0 %r10_0, 2 -> 0x2c18 v
2c10: %r10_0 = *(0xe40015e0)
2c14: jmp 0x2c4c v
2c18: %r10_0 = *(0xe40015e0)
2c1c: %r10_1 = 0x06228808
2c24: store_word %r10_0, 0xe40015e0
2c28: %r12_0 = *(0xe40015ec)
2c2c: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
2c34: branch_cond0 %r10_0, 4 -> 0x2c40 v
2c38: %r10_0 = *(0xe40015e0)
2c3c: jmp 0x2c4c v
2c40: %r10_0 = *(0xe40015e0)
2c44: %r10_1 = 0x06228808
2c4c: store_word %r10_0, 0xe40015e0
2c50: %r12_0 = *(0xe40015ec)
2c54: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
2c5c: beq %r10_0, 2 -> 0x2c68 v
2c60: %r10_0 = *(0xe40015e0)
2c64: jmp 0x2c74 v
2c68: %r10_0 = *(0xe40015e0)
2c6c: %r10_1 = 0x06228009
2c74: store_word %r10_0, 0xe40015e0
2c78: %r12_0 = *(0xe40015ec)
2c7c: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
2c84: beq %r10_0, 6 -> 0x2c90 v
2c88: %r10_0 = *(0xe40015e0)
2c8c: jmp 0x2cc4 v
2c90: %r10_0 = *(0xe40015e0)
2c94: %r10_1 = 0x062088b8
2c9c: store_word %r10_0, 0xe40015e0
2ca0: %r12_0 = *(0xe40015ec)
2ca4: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
2cac: branch_cond0 %r10_0, 2 -> 0x2cb8 v
2cb0: %r10_0 = *(0xe40015e0)
2cb4: jmp 0x2cc4 v
2cb8: %r10_0 = *(0xe40015e0)
2cbc: %r10_1 = 0x062288b9
2cc4: store_word %r10_0, 0xe40015e0
2cc8: %r12_0 = *(0xe40015ec)
2ccc: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
2cd4: beq %r10_0, 0x00000008 -> 0x2ce4 v
2cdc: %r10_0 = *(0xe40015e0)
2ce0: jmp 0x2cf0 v
2ce4: %r10_0 = *(0xe40015e0)
2ce8: %r10_1 = 0x06228008
2cf0: store_word %r10_0, 0xe40015e0
2cf4: %r10_0 = *(0xe40015e8)
2cf8: %r10_0 = rotlw_by_28_then_and %r10_0, 1
2cfc: branch_cond0 %r10_0, 1 -> 0x2d08 v
2d00: %r10_0 = *(0xe40015e0)
2d04: jmp 0x2d34 v
2d08: %r10_0 = *(0xe40015e0)
2d0c: %r10_1 = or %r10_1, 4
2d10: store_word %r10_0, 0xe40015e0
2d14: %r10_0 = *(0xe40015e8)
2d18: %r10_0 = rotlw_by_29_then_and %r10_0, 1
2d1c: branch_cond0 %r10_0, 0 -> 0x2d28 v
2d20: %r10_0 = *(0xe40015e0)
2d24: jmp 0x2d34 v
2d28: %r10_0 = *(0xe40015e0)
2d2c: %r10_1 = and %r10_1, 0xfffdffff
2d34: return
2d38: %r10_1 = 0
2d3c: store_word %r10_0, 0xe40015e0
2d40: %r12_0 = *(0xe40015ec)
2d44: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
2d4c: beq %r10_0, 6 -> 0x2d58 v
2d50: %r10_0 = *(0xe40015e0)
2d54: jmp 0x2d64 v
2d58: %r10_0 = *(0xe40015e0)
2d5c: %r10_1 = 0x06210001
2d64: store_word %r10_0, 0xe40015e0
2d68: %r12_0 = *(0xe40015ec)
2d6c: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
2d74: beq %r10_0, 1 -> 0x2d80 v
2d78: %r10_0 = *(0xe40015e0)
2d7c: jmp 0x2d8c v
2d80: %r10_0 = *(0xe40015e0)
2d84: %r10_1 = 0x06210000
2d8c: return
2d90: %r10_0 = load_word -3
2d94: %r12_1 = and %r12_0, 0x000000ff
2d9c: %r12_0 = and %r12_0, 0xffffff00
2da4: %r12_1 = mul %r12_1, %r11_1
2da8: %r12_0 = and %r10_1, 0x000000ff
2db0: %r12_1 = add %r12_1, %r13_0
2db4: %r12_1 = and %r12_1, 0x000000ff
2dbc: %r12_0 = and %r12_1, 0x00000080
2dc4: beq %r13_0, 0 -> 0x2dcc v
2dc8: %r12_1 = 0
2dcc: %r12_0 = rotlw_by_0_then_and %r11_0, -1
2dd0: branch_cond5 %r12_1, %r13_0 -> 0x2dd8 v
2dd4: %r12_1 = and %r13_0, -1
2dd8: %r12_0 = or %r12_0, %r12_1
2ddc: %r12_1 = and %r12_0, 0x0000ff00
2de4: %r12_0 = and %r12_0, 0xffff00ff
2dec: %r12_1 = mul %r12_1, %r11_1
2df0: %r12_0 = and %r10_1, 0x0000ff00
2df8: %r12_1 = add %r12_1, %r13_0
2dfc: %r12_1 = and %r12_1, 0x0000ff00
2e04: %r12_0 = and %r12_1, 0x00008000
2e0c: beq %r13_0, 0 -> 0x2e14 v
2e10: %r12_1 = 0
2e14: %r12_0 = rotlw_by_8_then_and %r11_0, -1
2e18: branch_cond5 %r12_1, %r13_0 -> 0x2e20 v
2e1c: %r12_1 = and %r13_0, -1
2e20: %r12_0 = or %r12_0, %r12_1
2e24: %r12_1 = and %r12_0, 0x00ff0000
2e2c: %r12_0 = and %r12_0, 0xff00ffff
2e34: %r12_1 = mul %r12_1, %r11_1
2e38: %r12_0 = and %r10_1, 0x00ff0000
2e40: %r12_1 = add %r12_1, %r13_0
2e44: %r12_1 = and %r12_1, 0x00ff0000
2e4c: %r12_0 = and %r12_1, 0x00800000
2e54: beq %r13_0, 0 -> 0x2e5c v
2e58: %r12_1 = 0
2e5c: %r12_0 = rotlw_by_16_then_and %r11_0, -1
2e60: branch_cond5 %r12_1, %r13_0 -> 0x2e68 v
2e64: %r12_1 = and %r13_0, -1
2e68: %r12_0 = or %r12_0, %r12_1
2e6c: %r12_1 = and %r12_0, 0xff000000
2e74: %r12_0 = and %r12_0, 0x00ffffff
2e7c: %r12_1 = mul %r12_1, %r11_1
2e80: %r12_0 = and %r10_1, 0xff000000
2e88: %r12_1 = add %r12_1, %r13_0
2e8c: %r12_1 = and %r12_1, 0xff000000
2e94: %r12_0 = and %r12_1, 0x80000000
2e9c: beq %r13_0, 0 -> 0x2ea4 v
2ea0: %r12_1 = 0
2ea4: %r12_0 = rotlw_by_24_then_and %r11_0, -1
2ea8: branch_cond5 %r12_1, %r13_0 -> 0x2eb0 v
2eac: %r12_1 = and %r13_0, -1
2eb0: %r12_0 = or %r12_0, %r12_1
2eb4: store_word %r12_0, %r10_0
2eb8: return
2ebc: return
2ec0: return
2ec4: %r10_0 = *(SMC_FIFO_INBOX_CTRL_STATUS)
2ecc: %r10_0 = and %r10_0, 4
2ed0: branch_cond0 %r10_0, 0 -> 0x2f00 v
2ed4: %r10_0 = *(SMC_FIFO_OUTBOX_CTRL_STATUS)
2edc: %r10_0 = and %r10_0, 4
2ee0: beq %r10_0, 0 -> 0x2ec4 ^
2ee4: store_word 4, SMC_FIFO_OUTBOX_CTRL_STATUS
2eec: %r10_0 = *(SMC_FIFO_OUTBOX_DATA)
2ef4: store_word 0, SMC_FIFO_OUTBOX_CTRL_STATUS
2efc: jmp 0x2ec4 ^
2f00: store_word 4, SMC_FIFO_INBOX_CTRL_STATUS
2f08: store_word %r10_1, SMC_FIFO_INBOX_DATA
2f10: store_word %r11_0, SMC_FIFO_INBOX_DATA
2f18: store_word 0, SMC_FIFO_INBOX_CTRL_STATUS
2f20: %r10_0 = and %r10_1, 0x00000080
2f28: branch_cond0 %r10_0, 0 -> 0x2f84 v
2f2c: %r10_0 = *(SMC_FIFO_OUTBOX_CTRL_STATUS)
2f34: %r10_0 = and %r10_0, 4
2f38: beq %r10_0, 0 -> 0x2f2c ^
2f3c: store_word 4, SMC_FIFO_OUTBOX_CTRL_STATUS
2f44: %r10_0 = *(SMC_FIFO_OUTBOX_DATA)
2f4c: %r10_0 = and %r10_0, 0x000000ff
2f54: beq %r10_0, %r10_1 -> 0x2f64 v
2f58: store_word 0, SMC_FIFO_OUTBOX_CTRL_STATUS
2f60: jmp 0x2f2c ^
2f64: store_word 4, SMC_FIFO_OUTBOX_CTRL_STATUS
2f6c: %r10_0 = load_word -6
2f74: %r10_0 = load_word -5
2f7c: store_word 0, SMC_FIFO_OUTBOX_CTRL_STATUS
2f84: return
2f88: beq %r10_0, 3 -> 0x3018 v
2f8c: beq %r10_0, 2 -> 0x2fec v
2f90: beq %r10_0, 1 -> 0x2fc0 v
2f94: %r10_1 = 0x00f00199
2f9c: call 0x2ec4
2fa0: delay -7
2fa8: %r10_1 = 0x00000199
2fb0: call 0x2ec4
2fb4: delay -7
2fbc: return
2fc0: %r10_1 = 0x00100199
2fc8: call 0x2ec4
2fcc: delay -7
2fd4: %r10_1 = 0x00000199
2fdc: call 0x2ec4
2fe0: delay -7
2fe8: return
2fec: %r10_1 = 0x00300199
2ff4: call 0x2ec4
2ff8: delay -7
3000: %r10_1 = 0x00000199
3008: call 0x2ec4
300c: delay -7
3014: return
3018: %r10_1 = 0x00700199
3020: call 0x2ec4
3024: delay -7
302c: %r10_1 = 0x00000199
3034: call 0x2ec4
3038: delay -7
3040: return
3044: %r10_1 = 1
3048: call 0x2ec4
304c: %r10_1 = 0x0000038c
3054: call 0x2ec4
3058: %r10_1 = 0x00000199
3060: call 0x2ec4
3064: delay -7
306c: %r11_1 = 0
3070: %r10_0 = rotlw_by_26_then_and %r11_1, 3
3074: call 0x2f88
3078: %r10_0 = rotlw_by_28_then_and %r11_1, 3
307c: call 0x2f88
3080: %r10_0 = rotlw_by_30_then_and %r11_1, 3
3084: call 0x2f88
3088: %r10_0 = rotlw_by_0_then_and %r11_1, 3
308c: call 0x2f88
3090: delay -7
3098: %r10_1 = 0x0000028c
30a0: call 0x2ec4
30a4: delay -7
30ac: %r11_1 = 0
30b0: %r10_0 = rotlw_by_26_then_and %r11_1, 3
30b4: call 0x2f88
30b8: %r10_0 = rotlw_by_28_then_and %r11_1, 3
30bc: call 0x2f88
30c0: %r10_0 = rotlw_by_30_then_and %r11_1, 3
30c4: call 0x2f88
30c8: %r10_0 = rotlw_by_0_then_and %r11_1, 3
30cc: call 0x2f88
30d0: delay -7
30d8: return
30dc: %r12_0 = load_word -4
30e0: call 0x3044
30e4: %r10_1 = 0x0000038c
30ec: call 0x2ec4
30f0: delay -7
30f8: %r10_1 = 0x0000058c
3100: call 0x2ec4
3104: delay -7
310c: %r12_0 = load_word -4
3110: %r11_1 = rotlw_by_24_then_and %r11_1, 0x000000ff
3118: %r10_0 = rotlw_by_26_then_and %r11_1, 3
311c: call 0x2f88
3120: %r10_0 = rotlw_by_28_then_and %r11_1, 3
3124: call 0x2f88
3128: %r10_0 = rotlw_by_30_then_and %r11_1, 3
312c: call 0x2f88
3130: %r10_0 = rotlw_by_0_then_and %r11_1, 3
3134: call 0x2f88
3138: delay -7
3140: %r10_1 = 0x0000038c
3148: call 0x2ec4
314c: delay -7
3154: %r10_1 = 0x0000028c
315c: call 0x2ec4
3160: delay -7
3168: %r12_0 = load_word -4
316c: %r10_0 = rotlw_by_26_then_and %r11_1, 3
3170: call 0x2f88
3174: %r10_0 = rotlw_by_28_then_and %r11_1, 3
3178: call 0x2f88
317c: %r10_0 = rotlw_by_30_then_and %r11_1, 3
3180: call 0x2f88
3184: %r10_0 = rotlw_by_0_then_and %r11_1, 3
3188: call 0x2f88
318c: delay -7
3194: jmp 0x30e4 ^
3198: call 0x3044
319c: %r10_1 = 0x0000038c
31a4: call 0x2ec4
31a8: delay -7
31b0: %r10_1 = 0x0000088c
31b8: call 0x2ec4
31bc: %r10_1 = 0x00f00199
31c4: call 0x2ec4
31c8: jmp 0x31c8 ^
31cc: store_word %r10_0, 0xe40015e0
31d0: %r10_0 = *(0xe40015e8)
31d4: %r10_0 = rotlw_by_0_then_and %r10_0, 1
31d8: branch_cond0 %r10_0, 1 -> 0x31e4 v
31dc: %r10_0 = *(0xe40015e0)
31e0: jmp 0x322c v
31e4: %r10_0 = *(0xe40015e0)
31e8: store_word %r10_0, 0xe40015e0
31ec: %r10_0 = *(0xe40015e8)
31f0: %r10_0 = rotlw_by_27_then_and %r10_0, 1
31f4: branch_cond0 %r10_0, 1 -> 0x3200 v
31f8: %r10_0 = *(0xe40015e0)
31fc: jmp 0x322c v
3200: %r10_0 = *(0xe40015e0)
3204: store_word %r10_0, 0xe40015e0
3208: %r10_0 = *(0xe40015e8)
320c: %r10_0 = and %r10_0, 0xffffffdf
3214: %r10_0 = or %r10_0, 0x00000020
321c: store_word %r10_0, 0xe40015e8
3220: %r10_0 = *(0xe40015e0)
3224: %r12_0 = load_word -6
3228: call 0x2ec4
322c: return
3230: store_word %r10_0, 0xe40015e0
3234: %r10_0 = *(0xe40015e8)
3238: %r10_0 = rotlw_by_28_then_and %r10_0, 1
323c: branch_cond0 %r10_0, 0 -> 0x3248 v
3240: %r10_0 = *(0xe40015e0)
3244: jmp 0x3260 v
3248: %r10_0 = *(0xe40015e0)
324c: %r10_0 = rotlw_by_28_then_and %r11_1, 0x0000000f
3254: %r11_1 = or %r11_1, %r10_0
3258: %r11_1 = and %r11_1, 0x0000000f
3260: return
3264: %r11_1 = rotlw_by_31_then_and %r11_1, 0x0000007f
326c: branch_cond0 %r10_0, %r10_1 -> 0x3274 v
3270: return
3274: %r11_1 = or %r11_1, 0x00000080
327c: return
3280: %r11_1 = rotlw_by_31_then_and %r11_1, 7
3284: %r10_0 = rotlw_by_0_then_and %r13_0, 0x000000ff
328c: beq %r10_0, 0 -> 0x32b8 v
3290: %r10_0 = rotlw_by_24_then_and %r13_0, 0x000000ff
3298: beq %r10_0, 0 -> 0x32b8 v
329c: %r10_0 = rotlw_by_16_then_and %r13_0, 0x000000ff
32a4: beq %r10_0, 0 -> 0x32b8 v
32a8: %r10_0 = rotlw_by_8_then_and %r13_0, 0x000000ff
32b0: beq %r10_0, 0 -> 0x32b8 v
32b4: return
32b8: %r11_1 = or %r11_1, 0x00000008
32c0: return
32c4: %r10_1 = 0
32c8: %r10_0 = and %r12_0, 0x000000ff
32d0: branch_cond0 %r10_0, 0 -> 0x32d8 v
32d4: %r10_1 = or %r10_1, 1
32d8: %r10_0 = and %r12_0, 0x0000ff00
32e0: branch_cond0 %r10_0, 0 -> 0x32e8 v
32e4: %r10_1 = or %r10_1, 2
32e8: %r10_0 = and %r12_0, 0x00ff0000
32f0: branch_cond0 %r10_0, 0 -> 0x32f8 v
32f4: %r10_1 = or %r10_1, 4
32f8: %r10_0 = and %r12_0, 0xff000000
3300: branch_cond0 %r10_0, 0 -> 0x330c v
3304: %r10_1 = or %r10_1, 0x00000008
330c: %r10_0 = and %r12_1, 0x000000ff
3314: branch_cond0 %r10_0, 0 -> 0x331c v
3318: %r10_1 = or %r10_1, 1
331c: %r10_0 = and %r12_1, 0x0000ff00
3324: branch_cond0 %r10_0, 0 -> 0x332c v
3328: %r10_1 = or %r10_1, 2
332c: %r10_0 = and %r12_1, 0x00ff0000
3334: branch_cond0 %r10_0, 0 -> 0x333c v
3338: %r10_1 = or %r10_1, 4
333c: %r10_0 = and %r12_1, 0xff000000
3344: branch_cond0 %r10_0, 0 -> 0x3350 v
3348: %r10_1 = or %r10_1, 0x00000008
3350: return
3354: %r12_0 = 0
3358: %r10_0 = and %r13_1, 0x0000000f
3360: beq %r10_0, 0x0000000f -> 0x336c v
3368: %r12_0 = or %r12_0, 1
336c: %r10_0 = and %r13_1, 0x000000f0
3374: beq %r10_0, 0x000000f0 -> 0x3380 v
337c: %r12_0 = or %r12_0, 2
3380: %r10_0 = and %r13_1, 0x00000f00
3388: beq %r10_0, 0x00000f00 -> 0x3394 v
3390: %r12_0 = or %r12_0, 4
3394: %r10_0 = and %r13_1, 0x0000f000
339c: beq %r10_0, 0x0000f000 -> 0x33ac v
33a4: %r12_0 = or %r12_0, 0x00000008
33ac: %r10_0 = and %r13_1, 0x000f0000
33b4: beq %r10_0, 0x000f0000 -> 0x33c4 v
33bc: %r12_0 = or %r12_0, 0x00000010
33c4: %r10_0 = and %r13_1, 0x00f00000
33cc: beq %r10_0, 0x00f00000 -> 0x33dc v
33d4: %r12_0 = or %r12_0, 0x00000020
33dc: %r10_0 = and %r13_1, 0x0f000000
33e4: beq %r10_0, 0x0f000000 -> 0x33f4 v
33ec: %r12_0 = or %r12_0, 0x00000040
33f4: %r10_0 = and %r13_1, 0xf0000000
33fc: beq %r10_0, 0xf0000000 -> 0x340c v
3404: %r12_0 = or %r12_0, 0x00000080
340c: return
3410: return
3414: %r10_0 = load_word -1
3418: %r12_0 = and %r13_0, 0xfe7fffff
3420: store_word %r13_0, %r10_1
3424: %r10_0 = load_word -1
3428: sync
342c: store_word %r10_0, 0xe40015e0
3430: %r12_0 = *(0xe40015ec)
3434: %r10_0 = rotlw_by_24_then_and %r10_0, 0x0000000f
343c: beq %r10_0, 4 -> 0x3448 v
3440: %r10_0 = *(0xe40015e0)
3444: jmp 0x3488 v
3448: %r10_0 = *(0xe40015e0)
344c: branch_cond0 %r10_1, 0xe400028c -> 0x3488 v
3454: %r10_0 = load_word -1
3458: %r12_0 = and %r13_0, 0xfe7fffff
3460: store_word %r13_0, 0xe4000248
3464: %r10_0 = load_word -1
3468: sync
346c: delay -7
3470: %r12_0 = load_word -1
3474: %r12_0 = or %r13_0, 2
3478: store_word %r13_0, 0xe400028c
347c: %r12_0 = load_word -1
3480: sync
3484: %r11_1 = or %r11_1, 2
3488: store_word %r11_0, %r10_0
348c: %r10_0 = load_word -1
3490: %r12_0 = and %r13_0, 0xfe000000
3498: %r11_1 = or %r11_1, %r13_0
349c: store_word %r11_1, %r10_1
34a0: %r10_0 = load_word -4
34a4: sync
34a8: delay -7
34ac: %r12_0 = or %r11_0, 1
34b0: store_word %r13_0, %r10_0
34b4: %r10_0 = load_word -1
34b8: sync
34bc: delay -7
34c0: store_word %r10_0, 0xe40015e0
34c4: %r12_0 = *(0xe40015ec)
34c8: %r10_0 = rotlw_by_24_then_and %r10_0, 0x0000000f
34d0: beq %r10_0, 4 -> 0x34dc v
34d4: %r10_0 = *(0xe40015e0)
34d8: jmp 0x3500 v
34dc: %r10_0 = *(0xe40015e0)
34e0: branch_cond0 %r10_1, 0xe400028c -> 0x3500 v
34e8: %r10_0 = load_word -1
34ec: %r12_0 = or %r13_0, 0x01000000
34f4: store_word %r13_0, 0xe4000248
34f8: %r10_0 = load_word -1
34fc: sync
3500: %r11_1 = or %r11_1, 0x01000000
3508: store_word %r11_1, %r10_1
350c: %r10_0 = load_word -4
3510: sync
3514: delay -7
3518: branch_cond0 %r10_1, 0xe400028c -> 0x3570 v
3520: store_word %r10_0, 0xe40015e0
3524: %r12_0 = *(0xe40015ec)
3528: %r10_0 = rotlw_by_24_then_and %r10_0, 0x0000000f
3530: branch_cond0 %r10_0, 4 -> 0x353c v
3534: %r10_0 = *(0xe40015e0)
3538: jmp 0x3558 v
353c: %r10_0 = *(0xe40015e0)
3540: %r12_0 = load_word -1
3544: %r12_0 = or %r13_0, 2
3548: store_word %r13_0, 0xe400028c
354c: %r12_0 = load_word -1
3550: sync
3554: delay -7
3558: %r11_1 = and %r11_1, 0xfffffffd
3560: store_word %r11_1, 0xe400028c
3564: %r12_0 = load_word -4
3568: sync
356c: delay -7
3570: return
3574: %r12_1 = rotlw_by_26_then_and %r11_0, 0x10000000
357c: store_word %r10_0, 0xe40015e0
3580: %r10_0 = *(0xe40015e8)
3584: %r10_0 = rotlw_by_29_then_and %r10_0, 1
3588: branch_cond0 %r10_0, 0 -> 0x3594 v
358c: %r10_0 = *(0xe40015e0)
3590: jmp 0x35b8 v
3594: %r10_0 = *(0xe40015e0)
3598: store_word %r10_0, 0xe40015e0
359c: %r10_0 = *(0xe40015e8)
35a0: %r10_0 = rotlw_by_28_then_and %r10_0, 1
35a4: branch_cond0 %r10_0, 1 -> 0x35b0 v
35a8: %r10_0 = *(0xe40015e0)
35ac: jmp 0x35b8 v
35b0: %r10_0 = *(0xe40015e0)
35b4: %r12_1 = rotlw_by_1_then_and %r12_1, -2
35b8: %r10_0 = rotlw_by_6_then_and %r11_0, 0x00000080
35c0: %r12_1 = add %r12_1, %r10_0
35c4: %r10_0 = rotlw_by_2_then_and %r11_0, 4
35c8: %r12_1 = add %r12_1, %r10_0
35cc: %r12_0 = 0x10000000
35d4: store_word %r10_0, 0xe40015e0
35d8: %r10_0 = *(0xe40015e8)
35dc: %r10_0 = rotlw_by_29_then_and %r10_0, 1
35e0: branch_cond0 %r10_0, 0 -> 0x35ec v
35e4: %r10_0 = *(0xe40015e0)
35e8: jmp 0x3610 v
35ec: %r10_0 = *(0xe40015e0)
35f0: store_word %r10_0, 0xe40015e0
35f4: %r10_0 = *(0xe40015e8)
35f8: %r10_0 = rotlw_by_28_then_and %r10_0, 1
35fc: branch_cond0 %r10_0, 1 -> 0x3608 v
3600: %r10_0 = *(0xe40015e0)
3604: jmp 0x3610 v
3608: %r10_0 = *(0xe40015e0)
360c: %r12_0 = rotlw_by_1_then_and %r13_0, -2
3610: %r12_0 = rotlw_by_31_then_and %r13_0, -1
3614: beq %r13_0, 4 -> 0x3648 v
3618: beq %r13_0, 0x00000080 -> 0x3610 ^
3620: %r13_1 = add %r12_1, %r13_0
3624: store_word 0, %r12_1
3628: store_word -1, %r13_1
362c: %r10_0 = *(%r12_1)
3630: %r10_0 = load_word -6
3634: branch_cond0 %r10_0, 0 -> 0x363c v
3638: beq %r10_1, -1 -> 0x3610 ^
363c: %r12_0 = *(0xe4000024)
3640: %r10_0 = or %r10_0, %r11_1
3644: store_word %r10_0, 0xe4000024
3648: return
364c: call 0x4724
3650: %r10_0 = 0
3654: op_1E 0, -7
3658: %r10_1 = 0x00001800
3660: call 0x48cc
3664: beq %r12_0, 0 -> 0x366c v
3668: %r10_0 = or %r11_0, 1
366c: beq %r12_1, 0 -> 0x3678 v
3670: %r10_0 = or %r11_0, 0x00000010
3678: op_1E 0, -7
367c: op_1E 1, -7
3680: %r10_1 = 0x00001804
3688: call 0x48cc
368c: beq %r12_0, 0 -> 0x3694 v
3690: %r10_0 = or %r11_0, 2
3694: beq %r12_1, 0 -> 0x36a0 v
3698: %r10_0 = or %r11_0, 0x00000020
36a0: op_1E 1, -7
36a4: op_1E 2, -7
36a8: %r10_1 = 0x00001880
36b0: call 0x48cc
36b4: beq %r12_0, 0 -> 0x36bc v
36b8: %r10_0 = or %r11_0, 4
36bc: beq %r12_1, 0 -> 0x36c8 v
36c0: %r10_0 = or %r11_0, 0x00000040
36c8: op_1E 2, -7
36cc: op_1E 3, -7
36d0: %r10_1 = 0x00001884
36d8: call 0x48cc
36dc: beq %r12_0, 0 -> 0x36e8 v
36e0: %r10_0 = or %r11_0, 0x00000008
36e8: beq %r12_1, 0 -> 0x36f4 v
36ec: %r10_0 = or %r11_0, 0x00000080
36f4: op_1E 3, -7
36f8: return
36fc: %r10_0 = 0
3700: op_1E %r11_0, -7
3704: %r12_0 = 0
3708: %r12_1 = 0
370c: %r12_0 = 0
3710: op_1E %r11_0, -7
3714: %r10_0 = add %r11_0, 1
3718: branch_cond0 %r11_0, 4 -> 0x3700 ^
371c: store_word 0, 0xe4000018
3720: %r13_1 = 0
3724: %r10_0 = *(0xe4000018)
3728: store_word_0_100 %r10_0, MC0_RD_STR_DLY_0
372c: store_word_0_100 %r10_0, MC0_RD_STR_DLY_1
3730: %r10_0 = *(MC1_RD_STR_DLY_1)
3734: sync
3738: store_word_0_100 0x00001605, MC0_CNTL
3740: store_word_0_100 0x00000605, MC0_CNTL
3748: %r10_0 = 0
374c: %r11_1 = 0
3750: %r10_1 = 0x00001808
3758: call 0x4aa4
375c: call 0x32c4
3760: %r10_1 = rotlw_by_0_then_and %r10_1, -1
3764: %r13_1 = or %r13_1, %r10_1
3768: %r10_1 = 0x000000ff
3770: store_word %r10_0, 0xe40015e0
3774: %r10_0 = *(0xe40015e8)
3778: %r10_0 = rotlw_by_30_then_and %r10_0, 1
377c: branch_cond0 %r10_0, 1 -> 0x3788 v
3780: %r10_0 = *(0xe40015e0)
3784: jmp 0x37a4 v
3788: %r10_0 = *(0xe40015e0)
378c: %r10_0 = load_word -6
3790: %r10_1 = rotlw_by_31_then_and %r10_1, -1
3794: %r10_1 = add %r10_1, 0x00001808
379c: call 0x4aa4
37a0: call 0x32c4
37a4: %r10_1 = rotlw_by_16_then_and %r10_1, -1
37a8: %r13_1 = or %r13_1, %r10_1
37ac: op_1E 0, -7
37b0: call 0x4df0
37b4: call 0x4e80
37b8: store_word %r10_0, 0xe40015e0
37bc: %r10_0 = *(0xe40015e8)
37c0: %r10_0 = rotlw_by_31_then_and %r10_0, 1
37c4: branch_cond0 %r10_0, 0 -> 0x37d0 v
37c8: %r10_0 = *(0xe40015e0)
37cc: jmp 0x37d8 v
37d0: %r10_0 = *(0xe40015e0)
37d4: call 0x3410
37d8: op_1E 0, -7
37dc: %r10_0 = 0
37e0: %r11_1 = 0
37e4: %r10_1 = 0x0000180c
37ec: call 0x4aa4
37f0: call 0x32c4
37f4: %r10_1 = rotlw_by_4_then_and %r10_1, -1
37f8: %r13_1 = or %r13_1, %r10_1
37fc: %r10_1 = 0x000000ff
3804: store_word %r10_0, 0xe40015e0
3808: %r10_0 = *(0xe40015e8)
380c: %r10_0 = rotlw_by_30_then_and %r10_0, 1
3810: branch_cond0 %r10_0, 1 -> 0x381c v
3814: %r10_0 = *(0xe40015e0)
3818: jmp 0x3838 v
381c: %r10_0 = *(0xe40015e0)
3820: %r10_0 = load_word -6
3824: %r10_1 = rotlw_by_31_then_and %r10_1, -1
3828: %r10_1 = add %r10_1, 0x0000180c
3830: call 0x4aa4
3834: call 0x32c4
3838: %r10_1 = rotlw_by_20_then_and %r10_1, -1
383c: %r13_1 = or %r13_1, %r10_1
3840: op_1E 1, -7
3844: call 0x4df0
3848: call 0x4e80
384c: store_word %r10_0, 0xe40015e0
3850: %r10_0 = *(0xe40015e8)
3854: %r10_0 = rotlw_by_31_then_and %r10_0, 1
3858: branch_cond0 %r10_0, 0 -> 0x3864 v
385c: %r10_0 = *(0xe40015e0)
3860: jmp 0x386c v
3864: %r10_0 = *(0xe40015e0)
3868: call 0x3410
386c: op_1E 1, -7
3870: %r10_0 = 0
3874: %r11_1 = 0
3878: %r10_1 = 0x00001888
3880: call 0x4aa4
3884: call 0x32c4
3888: %r10_1 = rotlw_by_8_then_and %r10_1, -1
388c: %r13_1 = or %r13_1, %r10_1
3890: %r10_1 = 0x000000ff
3898: store_word %r10_0, 0xe40015e0
389c: %r10_0 = *(0xe40015e8)
38a0: %r10_0 = rotlw_by_30_then_and %r10_0, 1
38a4: branch_cond0 %r10_0, 1 -> 0x38b0 v
38a8: %r10_0 = *(0xe40015e0)
38ac: jmp 0x38cc v
38b0: %r10_0 = *(0xe40015e0)
38b4: %r10_0 = load_word -6
38b8: %r10_1 = rotlw_by_31_then_and %r10_1, -1
38bc: %r10_1 = add %r10_1, 0x00001888
38c4: call 0x4aa4
38c8: call 0x32c4
38cc: %r10_1 = rotlw_by_24_then_and %r10_1, -1
38d0: %r13_1 = or %r13_1, %r10_1
38d4: op_1E 2, -7
38d8: call 0x4df0
38dc: call 0x4e80
38e0: store_word %r10_0, 0xe40015e0
38e4: %r10_0 = *(0xe40015e8)
38e8: %r10_0 = rotlw_by_31_then_and %r10_0, 1
38ec: branch_cond0 %r10_0, 0 -> 0x38f8 v
38f0: %r10_0 = *(0xe40015e0)
38f4: jmp 0x3900 v
38f8: %r10_0 = *(0xe40015e0)
38fc: call 0x3410
3900: op_1E 2, -7
3904: %r10_0 = 0
3908: %r11_1 = 0
390c: %r10_1 = 0x0000188c
3914: call 0x4aa4
3918: call 0x32c4
391c: %r10_1 = rotlw_by_12_then_and %r10_1, -1
3920: %r13_1 = or %r13_1, %r10_1
3924: %r10_1 = 0x000000ff
392c: store_word %r10_0, 0xe40015e0
3930: %r10_0 = *(0xe40015e8)
3934: %r10_0 = rotlw_by_30_then_and %r10_0, 1
3938: branch_cond0 %r10_0, 1 -> 0x3944 v
393c: %r10_0 = *(0xe40015e0)
3940: jmp 0x3960 v
3944: %r10_0 = *(0xe40015e0)
3948: %r10_0 = load_word -6
394c: %r10_1 = rotlw_by_31_then_and %r10_1, -1
3950: %r10_1 = add %r10_1, 0x0000188c
3958: call 0x4aa4
395c: call 0x32c4
3960: %r10_1 = rotlw_by_28_then_and %r10_1, -1
3964: %r13_1 = or %r13_1, %r10_1
3968: op_1E 3, -7
396c: call 0x4df0
3970: call 0x4e80
3974: store_word %r10_0, 0xe40015e0
3978: %r10_0 = *(0xe40015e8)
397c: %r10_0 = rotlw_by_31_then_and %r10_0, 1
3980: branch_cond0 %r10_0, 0 -> 0x398c v
3984: %r10_0 = *(0xe40015e0)
3988: jmp 0x3994 v
398c: %r10_0 = *(0xe40015e0)
3990: call 0x3410
3994: op_1E 3, -7
3998: %r10_0 = load_word -5
399c: %r10_0 = add %r11_0, 0x01010101
39a4: store_word %r11_0, 0xe4000018
39a8: %r10_0 = and %r11_0, 0x000000ff
39b0: %r10_0 = load_word -6
39b4: %r10_1 = rotlw_by_0_then_and %r10_1, 0x000000ff
39bc: branch_cond0 %r11_0, %r10_1 -> 0x3724 ^
39c0: %r10_0 = 0
39c4: op_1E %r10_0, -7
39c8: %r10_0 = rotlw_by_2_then_and %r10_0, 0x000000ff
39d0: %r11_1 = add %r11_0, 0xe4001600
39d8: store_word %r13_0, %r11_1
39dc: %r11_1 = rotlw_by_0_then_and %r13_0, 0x000000ff
39e4: branch_cond0 %r11_1, 0 -> 0x3a14 v
39e8: store_word %r10_0, 0xe40015e0
39ec: %r10_0 = *(0xe40015e8)
39f0: %r10_0 = rotlw_by_31_then_and %r10_0, 1
39f4: branch_cond0 %r10_0, 0 -> 0x3a00 v
39f8: %r10_0 = *(0xe40015e0)
39fc: jmp 0x3b4c v
3a00: %r10_0 = *(0xe40015e0)
3a04: %r10_0 = load_word 0
3a08: %r13_1 = rotlw_by_24_then_and %r13_1, 0x000000ff
3a10: jmp 0x3a28 v
3a14: %r10_0 = and %r12_0, 0x0000ffff
3a1c: %r10_0 = div %r11_0, %r11_1
3a20: %r13_1 = rotlw_by_0_then_and %r11_0, 0x000000ff
3a28: %r11_1 = rotlw_by_24_then_and %r13_0, 0x000000ff
3a30: branch_cond0 %r11_1, 0 -> 0x3a6c v
3a34: store_word %r10_0, 0xe40015e0
3a38: %r10_0 = *(0xe40015e8)
3a3c: %r10_0 = rotlw_by_31_then_and %r10_0, 1
3a40: branch_cond0 %r10_0, 0 -> 0x3a4c v
3a44: %r10_0 = *(0xe40015e0)
3a48: jmp 0x3b4c v
3a4c: %r10_0 = *(0xe40015e0)
3a50: %r10_0 = load_word -6
3a54: %r10_1 = rotlw_by_24_then_and %r10_1, 0x000000ff
3a5c: %r10_1 = rotlw_by_8_then_and %r10_1, 0xffffff00
3a64: %r13_1 = or %r13_1, %r10_1
3a68: jmp 0x3a84 v
3a6c: %r10_0 = rotlw_by_16_then_and %r12_0, 0x0000ffff
3a74: %r10_0 = div %r11_0, %r11_1
3a78: %r10_0 = rotlw_by_8_then_and %r11_0, 0x0000ff00
3a80: %r13_1 = or %r13_1, %r11_0
3a84: %r11_1 = rotlw_by_16_then_and %r13_0, 0x000000ff
3a8c: branch_cond0 %r11_1, 0 -> 0x3ac8 v
3a90: store_word %r10_0, 0xe40015e0
3a94: %r10_0 = *(0xe40015e8)
3a98: %r10_0 = rotlw_by_31_then_and %r10_0, 1
3a9c: branch_cond0 %r10_0, 0 -> 0x3aa8 v
3aa0: %r10_0 = *(0xe40015e0)
3aa4: jmp 0x3b4c v
3aa8: %r10_0 = *(0xe40015e0)
3aac: %r10_0 = load_word -6
3ab0: %r10_1 = rotlw_by_24_then_and %r10_1, 0x000000ff
3ab8: %r10_1 = rotlw_by_16_then_and %r10_1, 0xffff0000
3ac0: %r13_1 = or %r13_1, %r10_1
3ac4: jmp 0x3ae0 v
3ac8: %r10_0 = and %r12_1, 0x0000ffff
3ad0: %r10_0 = div %r11_0, %r11_1
3ad4: %r10_0 = rotlw_by_16_then_and %r11_0, 0x00ff0000
3adc: %r13_1 = or %r13_1, %r11_0
3ae0: %r11_1 = rotlw_by_8_then_and %r13_0, 0x000000ff
3ae8: branch_cond0 %r11_1, 0 -> 0x3b24 v
3aec: store_word %r10_0, 0xe40015e0
3af0: %r10_0 = *(0xe40015e8)
3af4: %r10_0 = rotlw_by_31_then_and %r10_0, 1
3af8: branch_cond0 %r10_0, 0 -> 0x3b04 v
3afc: %r10_0 = *(0xe40015e0)
3b00: jmp 0x3b4c v
3b04: %r10_0 = *(0xe40015e0)
3b08: %r10_0 = load_word -6
3b0c: %r10_1 = rotlw_by_24_then_and %r10_1, 0x000000ff
3b14: %r10_1 = rotlw_by_24_then_and %r10_1, 0xff000000
3b1c: %r13_1 = or %r13_1, %r10_1
3b20: jmp 0x3b3c v
3b24: %r10_0 = rotlw_by_16_then_and %r12_1, 0x0000ffff
3b2c: %r10_0 = div %r11_0, %r11_1
3b30: %r10_0 = rotlw_by_24_then_and %r11_0, 0xff000000
3b38: %r13_1 = or %r13_1, %r11_0
3b3c: op_1E %r10_0, -7
3b40: %r10_0 = add %r10_0, 1
3b44: branch_cond0 %r10_0, 4 -> 0x39c4 ^
3b48: return
3b4c: op_1E %r10_0, -7
3b50: op_1E 0, -7
3b54: call 0x3280
3b58: op_1E 0, -7
3b5c: op_1E 1, -7
3b60: call 0x3280
3b64: op_1E 1, -7
3b68: op_1E 2, -7
3b6c: call 0x3280
3b70: op_1E 2, -7
3b74: op_1E 3, -7
3b78: call 0x3280
3b7c: op_1E 3, -7
3b80: store_word 0x0012129a, 0xe4000024
3b88: call 0x31cc
3b8c: call 0x402c
3b90: return
3b94: %r10_0 = 0
3b98: op_1E %r11_0, -7
3b9c: %r12_0 = 0
3ba0: %r12_1 = 0
3ba4: %r12_0 = 0
3ba8: op_1E %r11_0, -7
3bac: %r10_0 = add %r11_0, 1
3bb0: branch_cond0 %r11_0, 4 -> 0x3b98 ^
3bb4: store_word 0, 0xe4000018
3bb8: %r13_1 = 0
3bbc: %r10_0 = *(0xe4000018)
3bc0: store_word_0_100 %r10_0, MC0_WR_STR_DLL_0
3bc4: store_word_0_100 %r10_0, MC0_WR_STR_DLL_1
3bc8: %r12_0 = *(MC1_WR_STR_DLL_1)
3bcc: sync
3bd0: call 0x40b8
3bd4: call 0x4064
3bd8: call 0x40d8
3bdc: call 0x4724
3be0: %r10_0 = 0
3be4: %r11_1 = 0
3be8: %r10_1 = 0x00001808
3bf0: call 0x4c0c
3bf4: call 0x32c4
3bf8: %r10_1 = rotlw_by_0_then_and %r10_1, -1
3bfc: %r13_1 = or %r13_1, %r10_1
3c00: %r10_1 = 0x000000ff
3c08: store_word %r10_0, 0xe40015e0
3c0c: %r10_0 = *(0xe40015e8)
3c10: %r10_0 = rotlw_by_30_then_and %r10_0, 1
3c14: branch_cond0 %r10_0, 1 -> 0x3c20 v
3c18: %r10_0 = *(0xe40015e0)
3c1c: jmp 0x3c3c v
3c20: %r10_0 = *(0xe40015e0)
3c24: %r10_0 = load_word -6
3c28: %r10_1 = rotlw_by_31_then_and %r10_1, -1
3c2c: %r10_1 = add %r10_1, 0x00001808
3c34: call 0x4c0c
3c38: call 0x32c4
3c3c: %r10_1 = rotlw_by_16_then_and %r10_1, -1
3c40: %r13_1 = or %r13_1, %r10_1
3c44: op_1E 0, -7
3c48: call 0x4c80
3c4c: call 0x4d10
3c50: store_word %r10_0, 0xe40015e0
3c54: %r10_0 = *(0xe40015e8)
3c58: %r10_0 = rotlw_by_31_then_and %r10_0, 1
3c5c: branch_cond0 %r10_0, 0 -> 0x3c68 v
3c60: %r10_0 = *(0xe40015e0)
3c64: jmp 0x3c70 v
3c68: %r10_0 = *(0xe40015e0)
3c6c: call 0x3410
3c70: op_1E 0, -7
3c74: %r10_0 = 0
3c78: %r11_1 = 0
3c7c: %r10_1 = 0x0000180c
3c84: call 0x4c0c
3c88: call 0x32c4
3c8c: %r10_1 = rotlw_by_4_then_and %r10_1, -1
3c90: %r13_1 = or %r13_1, %r10_1
3c94: %r10_1 = 0x000000ff
3c9c: store_word %r10_0, 0xe40015e0
3ca0: %r10_0 = *(0xe40015e8)
3ca4: %r10_0 = rotlw_by_30_then_and %r10_0, 1
3ca8: branch_cond0 %r10_0, 1 -> 0x3cb4 v
3cac: %r10_0 = *(0xe40015e0)
3cb0: jmp 0x3cd0 v
3cb4: %r10_0 = *(0xe40015e0)
3cb8: %r10_0 = load_word -6
3cbc: %r10_1 = rotlw_by_31_then_and %r10_1, -1
3cc0: %r10_1 = add %r10_1, 0x0000180c
3cc8: call 0x4c0c
3ccc: call 0x32c4
3cd0: %r10_1 = rotlw_by_20_then_and %r10_1, -1
3cd4: %r13_1 = or %r13_1, %r10_1
3cd8: op_1E 1, -7
3cdc: call 0x4c80
3ce0: call 0x4d10
3ce4: store_word %r10_0, 0xe40015e0
3ce8: %r10_0 = *(0xe40015e8)
3cec: %r10_0 = rotlw_by_31_then_and %r10_0, 1
3cf0: branch_cond0 %r10_0, 0 -> 0x3cfc v
3cf4: %r10_0 = *(0xe40015e0)
3cf8: jmp 0x3d04 v
3cfc: %r10_0 = *(0xe40015e0)
3d00: call 0x3410
3d04: op_1E 1, -7
3d08: %r10_0 = 0
3d0c: %r11_1 = 0
3d10: %r10_1 = 0x00001888
3d18: call 0x4c0c
3d1c: call 0x32c4
3d20: %r10_1 = rotlw_by_8_then_and %r10_1, -1
3d24: %r13_1 = or %r13_1, %r10_1
3d28: %r10_1 = 0x000000ff
3d30: store_word %r10_0, 0xe40015e0
3d34: %r10_0 = *(0xe40015e8)
3d38: %r10_0 = rotlw_by_30_then_and %r10_0, 1
3d3c: branch_cond0 %r10_0, 1 -> 0x3d48 v
3d40: %r10_0 = *(0xe40015e0)
3d44: jmp 0x3d64 v
3d48: %r10_0 = *(0xe40015e0)
3d4c: %r10_0 = load_word -6
3d50: %r10_1 = rotlw_by_31_then_and %r10_1, -1
3d54: %r10_1 = add %r10_1, 0x00001888
3d5c: call 0x4c0c
3d60: call 0x32c4
3d64: %r10_1 = rotlw_by_24_then_and %r10_1, -1
3d68: %r13_1 = or %r13_1, %r10_1
3d6c: op_1E 2, -7
3d70: call 0x4c80
3d74: call 0x4d10
3d78: store_word %r10_0, 0xe40015e0
3d7c: %r10_0 = *(0xe40015e8)
3d80: %r10_0 = rotlw_by_31_then_and %r10_0, 1
3d84: branch_cond0 %r10_0, 0 -> 0x3d90 v
3d88: %r10_0 = *(0xe40015e0)
3d8c: jmp 0x3d98 v
3d90: %r10_0 = *(0xe40015e0)
3d94: call 0x3410
3d98: op_1E 2, -7
3d9c: %r10_0 = 0
3da0: %r11_1 = 0
3da4: %r10_1 = 0x0000188c
3dac: call 0x4c0c
3db0: call 0x32c4
3db4: %r10_1 = rotlw_by_12_then_and %r10_1, -1
3db8: %r13_1 = or %r13_1, %r10_1
3dbc: %r10_1 = 0x000000ff
3dc4: store_word %r10_0, 0xe40015e0
3dc8: %r10_0 = *(0xe40015e8)
3dcc: %r10_0 = rotlw_by_30_then_and %r10_0, 1
3dd0: branch_cond0 %r10_0, 1 -> 0x3ddc v
3dd4: %r10_0 = *(0xe40015e0)
3dd8: jmp 0x3df8 v
3ddc: %r10_0 = *(0xe40015e0)
3de0: %r10_0 = load_word -6
3de4: %r10_1 = rotlw_by_31_then_and %r10_1, -1
3de8: %r10_1 = add %r10_1, 0x0000188c
3df0: call 0x4c0c
3df4: call 0x32c4
3df8: %r10_1 = rotlw_by_28_then_and %r10_1, -1
3dfc: %r13_1 = or %r13_1, %r10_1
3e00: op_1E 3, -7
3e04: call 0x4c80
3e08: call 0x4d10
3e0c: store_word %r10_0, 0xe40015e0
3e10: %r10_0 = *(0xe40015e8)
3e14: %r10_0 = rotlw_by_31_then_and %r10_0, 1
3e18: branch_cond0 %r10_0, 0 -> 0x3e24 v
3e1c: %r10_0 = *(0xe40015e0)
3e20: jmp 0x3e2c v
3e24: %r10_0 = *(0xe40015e0)
3e28: call 0x3410
3e2c: op_1E 3, -7
3e30: %r10_0 = load_word -5
3e34: %r10_0 = add %r11_0, 0x01010101
3e3c: store_word %r11_0, 0xe4000018
3e40: %r10_0 = and %r11_0, 0x000000ff
3e48: %r10_0 = load_word -6
3e4c: %r10_1 = rotlw_by_0_then_and %r10_1, 0x000000ff
3e54: branch_cond0 %r11_0, %r10_1 -> 0x3bbc ^
3e58: %r10_0 = 0
3e5c: op_1E %r10_0, -7
3e60: %r10_0 = rotlw_by_2_then_and %r10_0, 0x000000ff
3e68: %r11_1 = add %r11_0, 0xe4001610
3e70: store_word %r13_0, %r11_1
3e74: %r11_1 = rotlw_by_0_then_and %r13_0, 0x000000ff
3e7c: branch_cond0 %r11_1, 0 -> 0x3eac v
3e80: store_word %r10_0, 0xe40015e0
3e84: %r10_0 = *(0xe40015e8)
3e88: %r10_0 = rotlw_by_31_then_and %r10_0, 1
3e8c: branch_cond0 %r10_0, 0 -> 0x3e98 v
3e90: %r10_0 = *(0xe40015e0)
3e94: jmp 0x3fe4 v
3e98: %r10_0 = *(0xe40015e0)
3e9c: %r10_0 = load_word 0
3ea0: %r13_1 = rotlw_by_24_then_and %r13_1, 0x000000ff
3ea8: jmp 0x3ec0 v
3eac: %r10_0 = and %r12_0, 0x0000ffff
3eb4: %r10_0 = div %r11_0, %r11_1
3eb8: %r13_1 = rotlw_by_0_then_and %r11_0, 0x000000ff
3ec0: %r11_1 = rotlw_by_24_then_and %r13_0, 0x000000ff
3ec8: branch_cond0 %r11_1, 0 -> 0x3f04 v
3ecc: store_word %r10_0, 0xe40015e0
3ed0: %r10_0 = *(0xe40015e8)
3ed4: %r10_0 = rotlw_by_31_then_and %r10_0, 1
3ed8: branch_cond0 %r10_0, 0 -> 0x3ee4 v
3edc: %r10_0 = *(0xe40015e0)
3ee0: jmp 0x3fe4 v
3ee4: %r10_0 = *(0xe40015e0)
3ee8: %r10_0 = load_word -6
3eec: %r10_1 = rotlw_by_24_then_and %r10_1, 0x000000ff
3ef4: %r10_1 = rotlw_by_8_then_and %r10_1, 0xffffff00
3efc: %r13_1 = or %r13_1, %r10_1
3f00: jmp 0x3f1c v
3f04: %r10_0 = rotlw_by_16_then_and %r12_0, 0x0000ffff
3f0c: %r10_0 = div %r11_0, %r11_1
3f10: %r10_0 = rotlw_by_8_then_and %r11_0, 0x0000ff00
3f18: %r13_1 = or %r13_1, %r11_0
3f1c: %r11_1 = rotlw_by_16_then_and %r13_0, 0x000000ff
3f24: branch_cond0 %r11_1, 0 -> 0x3f60 v
3f28: store_word %r10_0, 0xe40015e0
3f2c: %r10_0 = *(0xe40015e8)
3f30: %r10_0 = rotlw_by_31_then_and %r10_0, 1
3f34: branch_cond0 %r10_0, 0 -> 0x3f40 v
3f38: %r10_0 = *(0xe40015e0)
3f3c: jmp 0x3fe4 v
3f40: %r10_0 = *(0xe40015e0)
3f44: %r10_0 = load_word -6
3f48: %r10_1 = rotlw_by_24_then_and %r10_1, 0x000000ff
3f50: %r10_1 = rotlw_by_16_then_and %r10_1, 0xffff0000
3f58: %r13_1 = or %r13_1, %r10_1
3f5c: jmp 0x3f78 v
3f60: %r10_0 = and %r12_1, 0x0000ffff
3f68: %r10_0 = div %r11_0, %r11_1
3f6c: %r10_0 = rotlw_by_16_then_and %r11_0, 0x00ff0000
3f74: %r13_1 = or %r13_1, %r11_0
3f78: %r11_1 = rotlw_by_8_then_and %r13_0, 0x000000ff
3f80: branch_cond0 %r11_1, 0 -> 0x3fbc v
3f84: store_word %r10_0, 0xe40015e0
3f88: %r10_0 = *(0xe40015e8)
3f8c: %r10_0 = rotlw_by_31_then_and %r10_0, 1
3f90: branch_cond0 %r10_0, 0 -> 0x3f9c v
3f94: %r10_0 = *(0xe40015e0)
3f98: jmp 0x3fe4 v
3f9c: %r10_0 = *(0xe40015e0)
3fa0: %r10_0 = load_word -6
3fa4: %r10_1 = rotlw_by_24_then_and %r10_1, 0x000000ff
3fac: %r10_1 = rotlw_by_24_then_and %r10_1, 0xff000000
3fb4: %r13_1 = or %r13_1, %r10_1
3fb8: jmp 0x3fd4 v
3fbc: %r10_0 = rotlw_by_16_then_and %r12_1, 0x0000ffff
3fc4: %r10_0 = div %r11_0, %r11_1
3fc8: %r10_0 = rotlw_by_24_then_and %r11_0, 0xff000000
3fd0: %r13_1 = or %r13_1, %r11_0
3fd4: op_1E %r10_0, -7
3fd8: %r10_0 = add %r10_0, 1
3fdc: branch_cond0 %r10_0, 4 -> 0x3e5c ^
3fe0: return
3fe4: op_1E %r10_0, -7
3fe8: op_1E 0, -7
3fec: call 0x3280
3ff0: op_1E 0, -7
3ff4: op_1E 1, -7
3ff8: call 0x3280
3ffc: op_1E 1, -7
4000: op_1E 2, -7
4004: call 0x3280
4008: op_1E 2, -7
400c: op_1E 3, -7
4010: call 0x3280
4014: op_1E 3, -7
4018: store_word 0x0013139a, 0xe4000024
4020: call 0x31cc
4024: call 0x402c
4028: return
402c: %r10_0 = *(0xe40015f0)
4030: %r10_0 = rotlw_by_24_then_and %r10_0, 0x000000ff
4038: %r10_1 = 0x01010101
4040: %r10_1 = mul %r10_0, %r10_1
4044: store_word_0_100 %r10_1, MC0_RD_STR_DLY_0
4048: store_word_0_100 %r10_1, MC0_RD_STR_DLY_1
404c: store_word_0_100 %r10_1, MC0_WR_STR_DLL_0
4050: store_word_0_100 %r10_1, MC0_WR_STR_DLL_1
4054: %r12_0 = *(MC1_WR_STR_DLL_1)
4058: sync
405c: delay -7
4060: return
4064: store_word 0, 0xe4000288
4068: %r10_0 = *(0xe4000288)
406c: sync
4070: delay -7
4074: store_word 1, 0xe4000288
4078: %r10_0 = *(0xe4000288)
407c: sync
4080: delay -7
4084: store_word 5, 0xe4000288
4088: %r10_0 = *(0xe4000288)
408c: sync
4090: delay -7
4094: store_word 1, 0xe4000288
4098: %r10_0 = *(0xe4000288)
409c: sync
40a0: delay -7
40a4: store_word 0, 0xe4000288
40a8: %r10_0 = *(0xe4000288)
40ac: sync
40b0: delay -7
40b4: return
40b8: store_word_0_100 0, MC0_CNTL
40bc: store_word_0_100 0, MC0_POINTER
40c0: store_word_0_100 0x00040000, MC0_DRAM_CMD
40c8: store_word_0_100 2, MC0_CNTL
40cc: %r10_0 = *(MC1_CNTL)
40d0: sync
40d4: return
40d8: store_word_0_100 0, MC0_POINTER
40dc: store_word_0_100 0x003c0000, MC0_DRAM_CMD
40e4: store_word_0_100 2, MC0_CNTL
40e8: store_word_0_100 0x00001605, MC0_CNTL
40f0: store_word_0_100 0x00000605, MC0_CNTL
40f8: %r10_0 = *(MC1_CNTL)
40fc: sync
4100: delay -7
4104: return
4108: store_word_0_100 0, MC0_CNTL
410c: store_word_0_100 0, MC0_POINTER
4110: store_word_0_100 -1, MC0_DRAM_DATA
4114: store_word_0_100 %r10_0, MC0_DRAM_DATA
4118: store_word_0_100 %r10_0, MC0_DRAM_DATA
411c: store_word_0_100 %r10_0, MC0_DRAM_DATA
4120: store_word_0_100 %r10_0, MC0_DRAM_DATA
4124: store_word_0_100 %r10_0, MC0_DRAM_DATA
4128: store_word_0_100 %r10_0, MC0_DRAM_DATA
412c: store_word_0_100 %r10_0, MC0_DRAM_DATA
4130: store_word_0_100 %r10_0, MC0_DRAM_DATA
4134: store_word_0_100 -1, MC0_DRAM_DATA
4138: store_word_0_100 %r10_0, MC0_DRAM_DATA
413c: store_word_0_100 %r10_0, MC0_DRAM_DATA
4140: %r10_0 = xor %r10_0, -1
4144: store_word_0_100 %r10_0, MC0_DRAM_DATA
4148: store_word_0_100 %r10_0, MC0_DRAM_DATA
414c: %r10_0 = xor %r10_0, -1
4150: store_word_0_100 %r10_0, MC0_DRAM_DATA
4154: store_word_0_100 %r10_0, MC0_DRAM_DATA
4158: %r10_0 = xor %r10_0, -1
415c: store_word_0_100 %r10_0, MC0_DRAM_DATA
4160: store_word_0_100 %r10_0, MC0_DRAM_DATA
4164: %r10_0 = %r12_0
4168: %r11_1 = rotlw_by_1_then_and %r10_1, 0x00008000
4170: %r10_0 = or %r11_0, %r11_1
4174: %r11_1 = rotlw_by_5_then_and %r10_1, 0x00010000
417c: %r10_0 = or %r11_0, %r11_1
4180: %r11_1 = rotlw_by_2_then_and %r10_1, 0x00020000
4188: %r10_0 = or %r11_0, %r11_1
418c: %r11_1 = rotlw_by_16_then_and %r10_1, 0x00001fff
4194: %r10_0 = or %r11_0, %r11_1
4198: store_word_0_100 %r11_0, MC0_DRAM_CMD
419c: %r10_0 = and %r11_0, 0x0003e000
41a4: %r10_0 = xor %r11_0, 0x00008000
41ac: %r10_0 = or %r11_0, 0x012c0000
41b4: store_word_0_100 %r11_0, MC0_DRAM_CMD
41b8: %r10_0 = xor %r11_0, 0x00008000
41c0: %r10_0 = and %r11_0, 0x0003e000
41c8: %r10_0 = or %r11_0, 0x01b00000
41d0: %r11_1 = rotlw_by_29_then_and %r10_1, 0x0000000f
41d8: %r10_0 = or %r11_0, %r11_1
41dc: %r11_1 = rotlw_by_28_then_and %r10_1, 0x00000070
41e4: %r10_0 = or %r11_0, %r11_1
41e8: %r11_1 = rotlw_by_27_then_and %r10_1, 0x00000080
41f0: %r10_0 = or %r11_0, %r11_1
41f4: %r11_1 = rotlw_by_28_then_and %r10_1, 0x00000200
41fc: %r10_0 = or %r11_0, %r11_1
4200: store_word_0_100 %r11_0, MC0_DRAM_CMD
4204: %r10_0 = or %r11_0, 0x02000000
420c: store_word_0_100 %r11_0, MC0_DRAM_CMD
4210: %r10_0 = and %r11_0, 0x0003e000
4218: %r10_0 = xor %r11_0, 0x00010000
4220: %r10_0 = or %r11_0, 0x1f2c0000
4228: store_word_0_100 %r11_0, MC0_DRAM_CMD
422c: %r10_0 = xor %r11_0, 0x00010000
4234: %r10_0 = and %r11_0, 0x0003e000
423c: %r10_0 = or %r11_0, 0x1f280000
4244: store_word_0_100 %r11_0, MC0_DRAM_CMD
4248: %r10_0 = xor %r11_0, 0x00008000
4250: store_word_0_100 %r11_0, MC0_DRAM_CMD
4254: %r10_0 = xor %r11_0, 0x00008000
425c: %r10_0 = xor %r11_0, 0x00010000
4264: store_word_0_100 %r11_0, MC0_DRAM_CMD
4268: %r10_0 = xor %r11_0, 0x00010000
4270: store_word_0_100 2, MC0_CNTL
4274: store_word_0_100 0x00001605, MC0_CNTL
427c: store_word_0_100 0x00000605, MC0_CNTL
4284: %r10_1 = add %r10_1, 0x00000020
428c: store_word_0_100 0, MC0_CNTL
4290: store_word_0_100 0, MC0_POINTER
4294: store_word_0_100 -1, MC0_DRAM_DATA
4298: store_word_0_100 %r10_0, MC0_DRAM_DATA
429c: store_word_0_100 %r10_0, MC0_DRAM_DATA
42a0: store_word_0_100 %r10_0, MC0_DRAM_DATA
42a4: store_word_0_100 %r10_0, MC0_DRAM_DATA
42a8: store_word_0_100 %r10_0, MC0_DRAM_DATA
42ac: store_word_0_100 %r10_0, MC0_DRAM_DATA
42b0: store_word_0_100 %r10_0, MC0_DRAM_DATA
42b4: store_word_0_100 %r10_0, MC0_DRAM_DATA
42b8: store_word_0_100 -1, MC0_DRAM_DATA
42bc: store_word_0_100 %r10_0, MC0_DRAM_DATA
42c0: store_word_0_100 %r10_0, MC0_DRAM_DATA
42c4: %r10_0 = xor %r10_0, -1
42c8: store_word_0_100 %r10_0, MC0_DRAM_DATA
42cc: store_word_0_100 %r10_0, MC0_DRAM_DATA
42d0: %r10_0 = xor %r10_0, -1
42d4: store_word_0_100 %r10_0, MC0_DRAM_DATA
42d8: store_word_0_100 %r10_0, MC0_DRAM_DATA
42dc: %r10_0 = xor %r10_0, -1
42e0: store_word_0_100 %r10_0, MC0_DRAM_DATA
42e4: store_word_0_100 %r10_0, MC0_DRAM_DATA
42e8: %r10_0 = %r12_0
42ec: %r11_1 = rotlw_by_1_then_and %r10_1, 0x00008000
42f4: %r10_0 = or %r11_0, %r11_1
42f8: %r11_1 = rotlw_by_5_then_and %r10_1, 0x00010000
4300: %r10_0 = or %r11_0, %r11_1
4304: %r11_1 = rotlw_by_2_then_and %r10_1, 0x00020000
430c: %r10_0 = or %r11_0, %r11_1
4310: %r11_1 = rotlw_by_16_then_and %r10_1, 0x00001fff
4318: %r10_0 = or %r11_0, %r11_1
431c: store_word_0_100 %r11_0, MC0_DRAM_CMD
4320: %r10_0 = and %r11_0, 0x0003e000
4328: %r10_0 = xor %r11_0, 0x00008000
4330: %r10_0 = or %r11_0, 0x012c0000
4338: store_word_0_100 %r11_0, MC0_DRAM_CMD
433c: %r10_0 = xor %r11_0, 0x00008000
4344: %r10_0 = and %r11_0, 0x0003e000
434c: %r10_0 = or %r11_0, 0x01b00000
4354: %r11_1 = rotlw_by_29_then_and %r10_1, 0x0000000f
435c: %r10_0 = or %r11_0, %r11_1
4360: %r11_1 = rotlw_by_28_then_and %r10_1, 0x00000070
4368: %r10_0 = or %r11_0, %r11_1
436c: %r11_1 = rotlw_by_27_then_and %r10_1, 0x00000080
4374: %r10_0 = or %r11_0, %r11_1
4378: %r11_1 = rotlw_by_28_then_and %r10_1, 0x00000200
4380: %r10_0 = or %r11_0, %r11_1
4384: store_word_0_100 %r11_0, MC0_DRAM_CMD
4388: %r10_0 = or %r11_0, 0x02000000
4390: store_word_0_100 %r11_0, MC0_DRAM_CMD
4394: %r10_0 = and %r11_0, 0x0003e000
439c: %r10_0 = xor %r11_0, 0x00010000
43a4: %r10_0 = or %r11_0, 0x1f2c0000
43ac: store_word_0_100 %r11_0, MC0_DRAM_CMD
43b0: %r10_0 = xor %r11_0, 0x00010000
43b8: %r10_0 = and %r11_0, 0x0003e000
43c0: %r10_0 = or %r11_0, 0x1f280000
43c8: store_word_0_100 %r11_0, MC0_DRAM_CMD
43cc: %r10_0 = xor %r11_0, 0x00008000
43d4: store_word_0_100 %r11_0, MC0_DRAM_CMD
43d8: %r10_0 = xor %r11_0, 0x00008000
43e0: %r10_0 = xor %r11_0, 0x00010000
43e8: store_word_0_100 %r11_0, MC0_DRAM_CMD
43ec: %r10_0 = xor %r11_0, 0x00010000
43f4: store_word_0_100 2, MC0_CNTL
43f8: store_word_0_100 0x00001605, MC0_CNTL
4400: store_word_0_100 0x00000605, MC0_CNTL
4408: %r10_1 = add %r10_1, 0x00000020
4410: store_word_0_100 0, MC0_CNTL
4414: store_word_0_100 0, MC0_POINTER
4418: store_word_0_100 -1, MC0_DRAM_DATA
441c: store_word_0_100 %r10_0, MC0_DRAM_DATA
4420: store_word_0_100 %r10_0, MC0_DRAM_DATA
4424: store_word_0_100 %r10_0, MC0_DRAM_DATA
4428: store_word_0_100 %r10_0, MC0_DRAM_DATA
442c: store_word_0_100 %r10_0, MC0_DRAM_DATA
4430: store_word_0_100 %r10_0, MC0_DRAM_DATA
4434: store_word_0_100 %r10_0, MC0_DRAM_DATA
4438: store_word_0_100 %r10_0, MC0_DRAM_DATA
443c: store_word_0_100 -1, MC0_DRAM_DATA
4440: store_word_0_100 %r10_0, MC0_DRAM_DATA
4444: store_word_0_100 %r10_0, MC0_DRAM_DATA
4448: store_word_0_100 %r10_0, MC0_DRAM_DATA
444c: store_word_0_100 %r10_0, MC0_DRAM_DATA
4450: %r10_0 = xor %r10_0, -1
4454: store_word_0_100 %r10_0, MC0_DRAM_DATA
4458: store_word_0_100 %r10_0, MC0_DRAM_DATA
445c: %r10_0 = xor %r10_0, -1
4460: store_word_0_100 %r10_0, MC0_DRAM_DATA
4464: store_word_0_100 %r10_0, MC0_DRAM_DATA
4468: %r10_0 = xor %r10_0, -1
446c: %r10_0 = %r12_0
4470: %r11_1 = rotlw_by_1_then_and %r10_1, 0x00008000
4478: %r10_0 = or %r11_0, %r11_1
447c: %r11_1 = rotlw_by_5_then_and %r10_1, 0x00010000
4484: %r10_0 = or %r11_0, %r11_1
4488: %r11_1 = rotlw_by_2_then_and %r10_1, 0x00020000
4490: %r10_0 = or %r11_0, %r11_1
4494: %r11_1 = rotlw_by_16_then_and %r10_1, 0x00001fff
449c: %r10_0 = or %r11_0, %r11_1
44a0: store_word_0_100 %r11_0, MC0_DRAM_CMD
44a4: %r10_0 = and %r11_0, 0x0003e000
44ac: %r10_0 = xor %r11_0, 0x00008000
44b4: %r10_0 = or %r11_0, 0x012c0000
44bc: store_word_0_100 %r11_0, MC0_DRAM_CMD
44c0: %r10_0 = xor %r11_0, 0x00008000
44c8: %r10_0 = and %r11_0, 0x0003e000
44d0: %r10_0 = or %r11_0, 0x01b00000
44d8: %r11_1 = rotlw_by_29_then_and %r10_1, 0x0000000f
44e0: %r10_0 = or %r11_0, %r11_1
44e4: %r11_1 = rotlw_by_28_then_and %r10_1, 0x00000070
44ec: %r10_0 = or %r11_0, %r11_1
44f0: %r11_1 = rotlw_by_27_then_and %r10_1, 0x00000080
44f8: %r10_0 = or %r11_0, %r11_1
44fc: %r11_1 = rotlw_by_28_then_and %r10_1, 0x00000200
4504: %r10_0 = or %r11_0, %r11_1
4508: store_word_0_100 %r11_0, MC0_DRAM_CMD
450c: %r10_0 = or %r11_0, 0x02000000
4514: store_word_0_100 %r11_0, MC0_DRAM_CMD
4518: %r10_0 = and %r11_0, 0x0003e000
4520: %r10_0 = xor %r11_0, 0x00010000
4528: %r10_0 = or %r11_0, 0x1f2c0000
4530: store_word_0_100 %r11_0, MC0_DRAM_CMD
4534: %r10_0 = xor %r11_0, 0x00010000
453c: %r10_0 = and %r11_0, 0x0003e000
4544: %r10_0 = or %r11_0, 0x1f280000
454c: store_word_0_100 %r11_0, MC0_DRAM_CMD
4550: %r10_0 = xor %r11_0, 0x00008000
4558: store_word_0_100 %r11_0, MC0_DRAM_CMD
455c: %r10_0 = xor %r11_0, 0x00008000
4564: %r10_0 = xor %r11_0, 0x00010000
456c: store_word_0_100 %r11_0, MC0_DRAM_CMD
4570: %r10_0 = xor %r11_0, 0x00010000
4578: store_word_0_100 2, MC0_CNTL
457c: store_word_0_100 0x00001605, MC0_CNTL
4584: store_word_0_100 0x00000605, MC0_CNTL
458c: %r10_1 = add %r10_1, 0x00000020
4594: store_word_0_100 0, MC0_CNTL
4598: store_word_0_100 0, MC0_POINTER
459c: store_word_0_100 -1, MC0_DRAM_DATA
45a0: store_word_0_100 %r10_0, MC0_DRAM_DATA
45a4: store_word_0_100 %r10_0, MC0_DRAM_DATA
45a8: store_word_0_100 %r10_0, MC0_DRAM_DATA
45ac: store_word_0_100 %r10_0, MC0_DRAM_DATA
45b0: store_word_0_100 %r10_0, MC0_DRAM_DATA
45b4: store_word_0_100 %r10_0, MC0_DRAM_DATA
45b8: store_word_0_100 %r10_0, MC0_DRAM_DATA
45bc: store_word_0_100 %r10_0, MC0_DRAM_DATA
45c0: store_word_0_100 -1, MC0_DRAM_DATA
45c4: store_word_0_100 %r10_0, MC0_DRAM_DATA
45c8: store_word_0_100 %r10_0, MC0_DRAM_DATA
45cc: store_word_0_100 %r10_0, MC0_DRAM_DATA
45d0: store_word_0_100 %r10_0, MC0_DRAM_DATA
45d4: %r10_0 = xor %r10_0, -1
45d8: store_word_0_100 %r10_0, MC0_DRAM_DATA
45dc: store_word_0_100 %r10_0, MC0_DRAM_DATA
45e0: %r10_0 = xor %r10_0, -1
45e4: store_word_0_100 %r10_0, MC0_DRAM_DATA
45e8: store_word_0_100 %r10_0, MC0_DRAM_DATA
45ec: %r10_0 = xor %r10_0, -1
45f0: %r10_0 = %r12_0
45f4: %r11_1 = rotlw_by_1_then_and %r10_1, 0x00008000
45fc: %r10_0 = or %r11_0, %r11_1
4600: %r11_1 = rotlw_by_5_then_and %r10_1, 0x00010000
4608: %r10_0 = or %r11_0, %r11_1
460c: %r11_1 = rotlw_by_2_then_and %r10_1, 0x00020000
4614: %r10_0 = or %r11_0, %r11_1
4618: %r11_1 = rotlw_by_16_then_and %r10_1, 0x00001fff
4620: %r10_0 = or %r11_0, %r11_1
4624: store_word_0_100 %r11_0, MC0_DRAM_CMD
4628: %r10_0 = and %r11_0, 0x0003e000
4630: %r10_0 = xor %r11_0, 0x00008000
4638: %r10_0 = or %r11_0, 0x012c0000
4640: store_word_0_100 %r11_0, MC0_DRAM_CMD
4644: %r10_0 = xor %r11_0, 0x00008000
464c: %r10_0 = and %r11_0, 0x0003e000
4654: %r10_0 = or %r11_0, 0x01b00000
465c: %r11_1 = rotlw_by_29_then_and %r10_1, 0x0000000f
4664: %r10_0 = or %r11_0, %r11_1
4668: %r11_1 = rotlw_by_28_then_and %r10_1, 0x00000070
4670: %r10_0 = or %r11_0, %r11_1
4674: %r11_1 = rotlw_by_27_then_and %r10_1, 0x00000080
467c: %r10_0 = or %r11_0, %r11_1
4680: %r11_1 = rotlw_by_28_then_and %r10_1, 0x00000200
4688: %r10_0 = or %r11_0, %r11_1
468c: store_word_0_100 %r11_0, MC0_DRAM_CMD
4690: %r10_0 = or %r11_0, 0x02000000
4698: store_word_0_100 %r11_0, MC0_DRAM_CMD
469c: %r10_0 = and %r11_0, 0x0003e000
46a4: %r10_0 = xor %r11_0, 0x00010000
46ac: %r10_0 = or %r11_0, 0x1f2c0000
46b4: store_word_0_100 %r11_0, MC0_DRAM_CMD
46b8: %r10_0 = xor %r11_0, 0x00010000
46c0: %r10_0 = and %r11_0, 0x0003e000
46c8: %r10_0 = or %r11_0, 0x1f280000
46d0: store_word_0_100 %r11_0, MC0_DRAM_CMD
46d4: %r10_0 = xor %r11_0, 0x00008000
46dc: store_word_0_100 %r11_0, MC0_DRAM_CMD
46e0: %r10_0 = xor %r11_0, 0x00008000
46e8: %r10_0 = xor %r11_0, 0x00010000
46f0: store_word_0_100 %r11_0, MC0_DRAM_CMD
46f4: %r10_0 = xor %r11_0, 0x00010000
46fc: store_word_0_100 2, MC0_CNTL
4700: store_word_0_100 0x00001605, MC0_CNTL
4708: store_word_0_100 0x00000605, MC0_CNTL
4710: %r10_1 = add %r10_1, 0x00000020
4718: %r10_1 = add %r10_1, 0x00000080
4720: return
4724: %r10_1 = 0x00001800
472c: %r12_0 = 0x0f2c4000
4734: %r10_0 = 0x01800180
473c: call 0x4108
4740: %r10_0 = 0x02400240
4748: call 0x4108
474c: %r10_0 = 0x04200420
4754: call 0x4108
4758: %r10_0 = 0x08100810
4760: call 0x4108
4764: %r10_0 = 0x10081008
476c: call 0x4108
4770: %r10_0 = 0x20042004
4778: call 0x4108
477c: %r10_0 = 0x40024002
4784: call 0x4108
4788: %r10_0 = 0x80018001
4790: call 0x4108
4794: %r10_1 = 0x00001800
479c: %r12_0 = 0x0f2c2000
47a4: %r10_0 = 0x01800180
47ac: call 0x4108
47b0: %r10_0 = 0x02400240
47b8: call 0x4108
47bc: %r10_0 = 0x04200420
47c4: call 0x4108
47c8: %r10_0 = 0x08100810
47d0: call 0x4108
47d4: %r10_0 = 0x10081008
47dc: call 0x4108
47e0: %r10_0 = 0x20042004
47e8: call 0x4108
47ec: %r10_0 = 0x40024002
47f4: call 0x4108
47f8: %r10_0 = 0x80018001
4800: call 0x4108
4804: return
4808: %r10_0 = load_word -4
480c: %r11_1 = xor %r11_1, %r10_0
4810: %r12_1 = or %r12_1, %r11_1
4814: %r10_1 = add %r10_1, 0x00000008
481c: %r10_0 = xor %r10_0, -1
4820: %r10_0 = load_word -4
4824: %r11_1 = xor %r11_1, %r10_0
4828: %r12_1 = or %r12_1, %r11_1
482c: %r10_1 = add %r10_1, 0x00000008
4834: %r10_0 = xor %r10_0, -1
4838: %r10_0 = load_word -4
483c: %r11_1 = xor %r11_1, %r10_0
4840: %r12_1 = or %r12_1, %r11_1
4844: %r10_1 = add %r10_1, 0x00000008
484c: %r10_0 = xor %r10_0, -1
4850: %r10_0 = load_word -4
4854: %r11_1 = xor %r11_1, %r10_0
4858: %r12_1 = or %r12_1, %r11_1
485c: %r10_1 = add %r10_1, 0x00000008
4864: %r10_0 = load_word -4
4868: %r11_1 = xor %r11_1, %r10_0
486c: %r12_1 = or %r12_1, %r11_1
4870: %r10_1 = add %r10_1, 0x00000008
4878: %r10_0 = xor %r10_0, -1
487c: %r10_0 = load_word -4
4880: %r11_1 = xor %r11_1, %r10_0
4884: %r12_1 = or %r12_1, %r11_1
4888: %r10_1 = add %r10_1, 0x00000008
4890: %r10_0 = xor %r10_0, -1
4894: %r10_0 = load_word -4
4898: %r11_1 = xor %r11_1, %r10_0
489c: %r12_1 = or %r12_1, %r11_1
48a0: %r10_1 = add %r10_1, 0x00000008
48a8: %r10_0 = xor %r10_0, -1
48ac: %r10_0 = load_word -4
48b0: %r11_1 = xor %r11_1, %r10_0
48b4: %r12_1 = or %r12_1, %r11_1
48b8: %r10_1 = add %r10_1, 0x00000008
48c0: %r10_1 = add %r10_1, 0x000000c0
48c8: return
48cc: %r12_1 = 0
48d0: store_word_0_100 0x00001605, MC0_CNTL
48d8: store_word_0_100 0x00000605, MC0_CNTL
48e0: %r10_0 = 0x01800180
48e8: call 0x4808
48ec: %r10_0 = 0x02400240
48f4: call 0x4808
48f8: %r10_0 = 0x04200420
4900: call 0x4808
4904: %r10_0 = 0x08100810
490c: call 0x4808
4910: %r10_0 = 0x10081008
4918: call 0x4808
491c: %r10_0 = 0x20042004
4924: call 0x4808
4928: %r10_0 = 0x40024002
4930: call 0x4808
4934: %r10_0 = 0x80018001
493c: call 0x4808
4940: %r12_0 = %r12_1
4944: %r12_1 = 0
4948: store_word %r10_0, 0xe40015e0
494c: %r10_0 = *(0xe40015e8)
4950: %r10_0 = rotlw_by_30_then_and %r10_0, 1
4954: branch_cond0 %r10_0, 1 -> 0x4960 v
4958: %r10_0 = *(0xe40015e0)
495c: jmp 0x49fc v
4960: %r10_0 = *(0xe40015e0)
4964: %r10_0 = load_word -4
4968: %r11_1 = rotlw_by_31_then_and %r11_1, 0x7fffffff
4970: %r10_1 = add %r10_1, %r11_1
4974: %r10_1 = subf %r10_1, 0x00000800
497c: store_word_0_100 0x00001605, MC0_CNTL
4984: store_word_0_100 0x00000605, MC0_CNTL
498c: %r10_0 = 0x01800180
4994: call 0x4808
4998: %r10_0 = 0x02400240
49a0: call 0x4808
49a4: %r10_0 = 0x04200420
49ac: call 0x4808
49b0: %r10_0 = 0x08100810
49b8: call 0x4808
49bc: %r10_0 = 0x10081008
49c4: call 0x4808
49c8: %r10_0 = 0x20042004
49d0: call 0x4808
49d4: %r10_0 = 0x40024002
49dc: call 0x4808
49e0: %r10_0 = 0x80018001
49e8: call 0x4808
49ec: %r10_0 = load_word -4
49f0: %r11_1 = rotlw_by_31_then_and %r11_1, 0x7fffffff
49f8: %r10_1 = subf %r10_1, %r11_1
49fc: return
4a00: %r10_0 = xor %r10_0, -1
4a04: %r10_0 = load_word -1
4a08: %r12_0 = xor %r13_0, %r10_0
4a0c: %r12_1 = or %r12_1, %r13_0
4a10: %r12_0 = xor %r13_0, -1
4a14: %r12_0 = or %r12_0, %r13_0
4a18: %r10_1 = add %r10_1, 0x00000008
4a20: %r10_0 = xor %r10_0, -1
4a24: %r10_0 = load_word -1
4a28: %r12_0 = xor %r13_0, %r10_0
4a2c: %r12_1 = or %r12_1, %r13_0
4a30: %r12_0 = xor %r13_0, -1
4a34: %r12_0 = or %r12_0, %r13_0
4a38: %r10_1 = add %r10_1, 0x00000008
4a40: %r10_0 = xor %r10_0, -1
4a44: %r10_1 = add %r10_1, 0x00000010
4a4c: %r10_0 = xor %r10_0, -1
4a50: %r10_0 = load_word -1
4a54: %r12_0 = xor %r13_0, %r10_0
4a58: %r12_1 = or %r12_1, %r13_0
4a5c: %r12_0 = xor %r13_0, -1
4a60: %r12_0 = or %r12_0, %r13_0
4a64: %r10_1 = add %r10_1, 0x00000008
4a6c: %r10_0 = xor %r10_0, -1
4a70: %r10_0 = load_word -1
4a74: %r12_0 = xor %r13_0, %r10_0
4a78: %r12_1 = or %r12_1, %r13_0
4a7c: %r12_0 = xor %r13_0, -1
4a80: %r12_0 = or %r12_0, %r13_0
4a84: %r10_1 = add %r10_1, 0x00000008
4a8c: %r10_0 = xor %r10_0, -1
4a90: %r10_1 = add %r10_1, 0x00000010
4a98: %r10_1 = add %r10_1, 0x000000c0
4aa0: return
4aa4: %r12_0 = 0
4aa8: %r12_1 = 0
4aac: %r10_0 = 0x01800180
4ab4: call 0x4a00
4ab8: %r10_0 = 0x02400240
4ac0: call 0x4a00
4ac4: %r10_0 = 0x04200420
4acc: call 0x4a00
4ad0: %r10_0 = 0x08100810
4ad8: call 0x4a00
4adc: %r10_0 = 0x10081008
4ae4: call 0x4a00
4ae8: %r10_0 = 0x20042004
4af0: call 0x4a00
4af4: %r10_0 = 0x40024002
4afc: call 0x4a00
4b00: %r10_0 = 0x80018001
4b08: call 0x4a00
4b0c: %r10_0 = or %r11_0, %r12_0
4b10: %r11_1 = or %r11_1, %r12_1
4b14: return
4b18: %r10_0 = xor %r10_0, -1
4b1c: %r10_0 = load_word -1
4b20: %r12_0 = xor %r13_0, %r10_0
4b24: %r12_1 = or %r12_1, %r13_0
4b28: %r12_0 = xor %r13_0, -1
4b2c: %r12_0 = or %r12_0, %r13_0
4b30: %r10_1 = add %r10_1, 0x00000008
4b38: %r10_0 = xor %r10_0, -1
4b3c: %r10_0 = load_word -1
4b40: %r12_0 = xor %r13_0, %r10_0
4b44: %r12_1 = or %r12_1, %r13_0
4b48: %r12_0 = xor %r13_0, -1
4b4c: %r12_0 = or %r12_0, %r13_0
4b50: %r10_1 = add %r10_1, 0x00000008
4b58: %r10_0 = xor %r10_0, -1
4b5c: %r10_1 = add %r10_1, 0x00000010
4b64: %r10_0 = xor %r10_0, -1
4b68: %r10_0 = load_word -1
4b6c: %r12_0 = xor %r13_0, %r10_0
4b70: %r12_1 = or %r12_1, %r13_0
4b74: %r12_0 = xor %r13_0, -1
4b78: %r12_0 = or %r12_0, %r13_0
4b7c: %r10_1 = add %r10_1, 0x00000008
4b84: %r10_0 = xor %r10_0, -1
4b88: %r10_0 = load_word -1
4b8c: %r12_0 = xor %r13_0, %r10_0
4b90: %r12_1 = or %r12_1, %r13_0
4b94: %r12_0 = xor %r13_0, -1
4b98: %r12_0 = or %r12_0, %r13_0
4b9c: %r10_1 = add %r10_1, 0x00000008
4ba4: %r10_0 = xor %r10_0, -1
4ba8: %r10_1 = add %r10_1, 0x00000010
4bb0: %r10_1 = add %r10_1, 0x00000008
4bb8: %r10_0 = xor %r10_0, -1
4bbc: %r10_0 = load_word -1
4bc0: %r12_0 = xor %r13_0, %r10_0
4bc4: %r12_1 = or %r12_1, %r13_0
4bc8: %r12_0 = xor %r13_0, -1
4bcc: %r12_0 = or %r12_0, %r13_0
4bd0: %r10_1 = add %r10_1, 0x00000008
4bd8: %r10_1 = add %r10_1, 0x00000018
4be0: %r10_0 = xor %r10_0, -1
4be4: %r10_0 = load_word -1
4be8: %r12_0 = xor %r13_0, %r10_0
4bec: %r12_1 = or %r12_1, %r13_0
4bf0: %r12_0 = xor %r13_0, -1
4bf4: %r12_0 = or %r12_0, %r13_0
4bf8: %r10_1 = add %r10_1, 0x00000008
4c00: %r10_1 = add %r10_1, 0x00000090
4c08: return
4c0c: %r12_0 = 0
4c10: %r12_1 = 0
4c14: %r10_0 = 0x01800180
4c1c: call 0x4b18
4c20: %r10_0 = 0x02400240
4c28: call 0x4b18
4c2c: %r10_0 = 0x04200420
4c34: call 0x4b18
4c38: %r10_0 = 0x08100810
4c40: call 0x4b18
4c44: %r10_0 = 0x10081008
4c4c: call 0x4b18
4c50: %r10_0 = 0x20042004
4c58: call 0x4b18
4c5c: %r10_0 = 0x40024002
4c64: call 0x4b18
4c68: %r10_0 = 0x80018001
4c70: call 0x4b18
4c74: %r10_0 = or %r11_0, %r12_0
4c78: %r11_1 = or %r11_1, %r12_1
4c7c: return
4c80: %r10_0 = and %r11_1, 0x000000ff
4c88: branch_cond0 %r10_0, 0 -> 0x4ca0 v
4c8c: %r10_0 = *(0xe4000018)
4c90: %r10_0 = and %r10_0, 0x000000ff
4c98: %r12_0 = add %r12_0, %r10_0
4c9c: %r12_0 = add %r13_0, 1
4ca0: %r10_0 = and %r11_1, 0x0000ff00
4ca8: branch_cond0 %r10_0, 0 -> 0x4cc4 v
4cac: %r10_0 = *(0xe4000018)
4cb0: %r10_0 = rotlw_by_8_then_and %r10_0, 0x00ff0000
4cb8: %r12_0 = add %r12_0, %r10_0
4cbc: %r12_0 = add %r13_0, 0x00000100
4cc4: %r10_0 = and %r11_1, 0x00ff0000
4ccc: branch_cond0 %r10_0, 0 -> 0x4ce8 v
4cd0: %r10_0 = *(0xe4000018)
4cd4: %r10_0 = rotlw_by_16_then_and %r10_0, 0x000000ff
4cdc: %r12_1 = add %r12_1, %r10_0
4ce0: %r12_0 = add %r13_0, 0x00010000
4ce8: %r10_0 = and %r11_1, 0xff000000
4cf0: branch_cond0 %r10_0, 0 -> 0x4d0c v
4cf4: %r10_0 = *(0xe4000018)
4cf8: %r10_0 = rotlw_by_24_then_and %r10_0, 0x00ff0000
4d00: %r12_1 = add %r12_1, %r10_0
4d04: %r12_0 = add %r13_0, 0x01000000
4d0c: return
4d10: %r10_0 = and %r11_0, 0x000000ff
4d18: branch_cond0 %r10_0, 0 -> 0x4d40 v
4d1c: %r10_0 = *(0xe4000018)
4d20: %r10_0 = and %r10_0, 0x000000ff
4d28: %r12_0 = add %r12_0, %r10_0
4d2c: %r10_0 = load_word -6
4d30: %r10_1 = rotlw_by_0_then_and %r10_1, 0x000000ff
4d38: %r12_0 = add %r12_0, %r10_1
4d3c: %r12_0 = add %r13_0, 1
4d40: %r10_0 = and %r11_0, 0x0000ff00
4d48: branch_cond0 %r10_0, 0 -> 0x4d7c v
4d4c: %r10_0 = *(0xe4000018)
4d50: %r10_0 = rotlw_by_8_then_and %r10_0, 0x00ff0000
4d58: %r12_0 = add %r12_0, %r10_0
4d5c: %r10_0 = load_word -6
4d60: %r10_1 = rotlw_by_0_then_and %r10_1, 0x000000ff
4d68: %r10_1 = rotlw_by_16_then_and %r10_1, 0xffff0000
4d70: %r12_0 = add %r12_0, %r10_1
4d74: %r12_0 = add %r13_0, 0x00000100
4d7c: %r10_0 = and %r11_0, 0x00ff0000
4d84: branch_cond0 %r10_0, 0 -> 0x4db0 v
4d88: %r10_0 = *(0xe4000018)
4d8c: %r10_0 = rotlw_by_16_then_and %r10_0, 0x000000ff
4d94: %r12_1 = add %r12_1, %r10_0
4d98: %r10_0 = load_word -6
4d9c: %r10_1 = rotlw_by_0_then_and %r10_1, 0x000000ff
4da4: %r12_1 = add %r12_1, %r10_1
4da8: %r12_0 = add %r13_0, 0x00010000
4db0: %r10_0 = and %r11_0, 0xff000000
4db8: branch_cond0 %r10_0, 0 -> 0x4dec v
4dbc: %r10_0 = *(0xe4000018)
4dc0: %r10_0 = rotlw_by_24_then_and %r10_0, 0x00ff0000
4dc8: %r12_1 = add %r12_1, %r10_0
4dcc: %r10_0 = load_word -6
4dd0: %r10_1 = rotlw_by_0_then_and %r10_1, 0x000000ff
4dd8: %r10_1 = rotlw_by_16_then_and %r10_1, 0xffff0000
4de0: %r12_1 = add %r12_1, %r10_1
4de4: %r12_0 = add %r13_0, 0x01000000
4dec: return
4df0: %r10_0 = and %r11_1, 0x000000ff
4df8: branch_cond0 %r10_0, 0 -> 0x4e10 v
4dfc: %r10_0 = *(0xe4000018)
4e00: %r10_0 = and %r10_0, 0x000000ff
4e08: %r12_0 = add %r12_0, %r10_0
4e0c: %r12_0 = add %r13_0, 1
4e10: %r10_0 = and %r11_1, 0x0000ff00
4e18: branch_cond0 %r10_0, 0 -> 0x4e34 v
4e1c: %r10_0 = *(0xe4000018)
4e20: %r10_0 = and %r10_0, 0x00ff0000
4e28: %r12_0 = add %r12_0, %r10_0
4e2c: %r12_0 = add %r13_0, 0x00000100
4e34: %r10_0 = and %r11_1, 0x00ff0000
4e3c: branch_cond0 %r10_0, 0 -> 0x4e58 v
4e40: %r10_0 = *(0xe4000018)
4e44: %r10_0 = and %r10_0, 0x000000ff
4e4c: %r12_1 = add %r12_1, %r10_0
4e50: %r12_0 = add %r13_0, 0x00010000
4e58: %r10_0 = and %r11_1, 0xff000000
4e60: branch_cond0 %r10_0, 0 -> 0x4e7c v
4e64: %r10_0 = *(0xe4000018)
4e68: %r10_0 = and %r10_0, 0x00ff0000
4e70: %r12_1 = add %r12_1, %r10_0
4e74: %r12_0 = add %r13_0, 0x01000000
4e7c: return
4e80: %r10_0 = and %r11_0, 0x000000ff
4e88: branch_cond0 %r10_0, 0 -> 0x4eb0 v
4e8c: %r10_0 = *(0xe4000018)
4e90: %r10_0 = and %r10_0, 0x000000ff
4e98: %r12_0 = add %r12_0, %r10_0
4e9c: %r10_0 = load_word -6
4ea0: %r10_1 = rotlw_by_0_then_and %r10_1, 0x000000ff
4ea8: %r12_0 = subf %r12_0, %r10_1
4eac: %r12_0 = add %r13_0, 1
4eb0: %r10_0 = and %r11_0, 0x0000ff00
4eb8: branch_cond0 %r10_0, 0 -> 0x4eec v
4ebc: %r10_0 = *(0xe4000018)
4ec0: %r10_0 = and %r10_0, 0x00ff0000
4ec8: %r12_0 = add %r12_0, %r10_0
4ecc: %r10_0 = load_word -6
4ed0: %r10_1 = rotlw_by_0_then_and %r10_1, 0x000000ff
4ed8: %r10_1 = rotlw_by_16_then_and %r10_1, 0xffff0000
4ee0: %r12_0 = subf %r12_0, %r10_1
4ee4: %r12_0 = add %r13_0, 0x00000100
4eec: %r10_0 = and %r11_0, 0x00ff0000
4ef4: branch_cond0 %r10_0, 0 -> 0x4f20 v
4ef8: %r10_0 = *(0xe4000018)
4efc: %r10_0 = and %r10_0, 0x000000ff
4f04: %r12_1 = add %r12_1, %r10_0
4f08: %r10_0 = load_word -6
4f0c: %r10_1 = rotlw_by_0_then_and %r10_1, 0x000000ff
4f14: %r12_1 = subf %r12_1, %r10_1
4f18: %r12_0 = add %r13_0, 0x00010000
4f20: %r10_0 = and %r11_0, 0xff000000
4f28: branch_cond0 %r10_0, 0 -> 0x4f5c v
4f2c: %r10_0 = *(0xe4000018)
4f30: %r10_0 = and %r10_0, 0x00ff0000
4f38: %r12_1 = add %r12_1, %r10_0
4f3c: %r10_0 = load_word -6
4f40: %r10_1 = rotlw_by_0_then_and %r10_1, 0x000000ff
4f48: %r10_1 = rotlw_by_16_then_and %r10_1, 0xffff0000
4f50: %r12_1 = subf %r12_1, %r10_1
4f54: %r12_0 = add %r13_0, 0x01000000
4f5c: return
