0000: store_word 0xe0000000, 0xd0008010
0008: store_half 2, 0xd0008004
000c: %r12_0 = load_half -7
0010: sync
0014: store_word 0, 0xe0020000
001c: %r10_0 = *(0xe0020000)
0024: sync
0028: store_word 0xc0000000, 0xe0020004
0034: %r10_0 = *(0xe0020004)
003c: sync
0040: store_word 0x00000018, 0xe1020004
0048: %r12_0 = *(0xe1020004)
004c: sync
0050: store_word 0x5f076009, 0xe1010000
0058: %r10_0 = *(0xe1010010)
005c: sync
0060: store_word 0x00004000, 0xe1018020
0068: %r10_0 = *(0xe1018000)
006c: sync
0070: store_word 0xe4000000, 0xd0010010
0078: store_half 2, 0xd0010004
007c: %r12_0 = load_half -7
0080: sync
0084: %r10_1 = 0x20000000
008c: store_word %r10_1, 0xe4000284
0090: %r12_0 = *(0xe4000284)
0094: sync
0098: store_word 0, 0xe4000200
009c: store_word %r10_1, 0xe4000210
00a0: store_word %r10_1, 0xe4000244
00a4: store_word_0_100 0, MC0_CNTL
00a8: store_word 0, 0xe40002a4
00ac: %r12_0 = *(0xe40002a4)
00b0: sync
00b4: store_word 0x00020100, 0xd0000018
00bc: store_word 0xea001000, 0xd0150010
00c8: store_half 2, 0xd0150004
00d0: %r10_0 = load_half -7
00d8: sync
00dc: store_word 0x000001e6, 0xea00101c
00e4: %r10_0 = *(0xea00101c)
00ec: sync
00f0: call 0x0d14
00f4: call 0x0d18
00f8: store_word %r10_0, 0xe40015e0
00fc: %r10_0 = *(0xe40015e8)
0100: %r10_0 = and %r10_0, -2
0104: %r10_0 = or %r10_0, 1
0108: store_word %r10_0, 0xe40015e8
010c: %r10_0 = *(0xe40015e0)
0110: store_word %r10_0, 0xe40015e0
0114: %r10_0 = *(0xe40015e8)
0118: %r10_0 = and %r10_0, -3
011c: %r10_0 = or %r10_0, 0
0120: store_word %r10_0, 0xe40015e8
0124: %r10_0 = *(0xe40015e0)
0128: store_word %r10_0, 0xe40015e0
012c: %r10_0 = *(0xe40015e8)
0130: %r10_0 = and %r10_0, -2
0134: %r10_0 = or %r10_0, 0
0138: store_word %r10_0, 0xe40015e8
013c: %r10_0 = *(0xe40015e0)
0140: store_word 4, SMC_FIFO_INBOX_CTRL_STATUS
0148: store_word 0x00000012, SMC_FIFO_INBOX_DATA
0150: store_word 0, SMC_FIFO_INBOX_CTRL_STATUS
0158: %r10_0 = *(SMC_FIFO_OUTBOX_CTRL_STATUS)
0160: %r10_1 = and %r10_0, 4
0164: beq %r10_1, 0 -> 0x0158 ^
0168: store_word 4, SMC_FIFO_OUTBOX_CTRL_STATUS
0170: %r10_0 = *(SMC_FIFO_OUTBOX_DATA)
0178: %r10_0 = *(SMC_FIFO_OUTBOX_DATA)
0180: store_word 0, SMC_FIFO_OUTBOX_CTRL_STATUS
0188: %r10_0 = and %r10_0, 0x000000ff
0190: store_word %r10_0, 0xe400002c
0194: call 0x12d4
0198: store_word 0, 0xe1020004
019c: store_half 6, 0xd0008004
01a0: %r12_0 = load_half -7
01a4: sync
01a8: delay -7
01ac: store_word 0xff60ffce, 0xe1013100
01b4: store_word 0, 0xe1013000
01b8: store_word 0, 0xe1013200
01bc: store_word 0x001d0031, 0xe1013300
01c4: store_word 0x00000030, 0xe1003100
01cc: store_word 0, 0xe1003000
01d4: store_word 0, 0xe1003200
01dc: store_word 0xe0f7fd00, 0xe1003300
01e8: return
01ec: %r10_1 = 0x001ff306
01f4: store_word %r10_0, 0xe40015e0
01f8: %r12_0 = *(0xe40015ec)
01fc: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
0204: beq %r10_0, 1 -> 0x0210 v
0208: %r10_0 = *(0xe40015e0)
020c: jmp 0x021c v
0210: %r10_0 = *(0xe40015e0)
0214: %r10_1 = 0x001ff306
021c: store_word %r10_0, 0xe40015e0
0220: %r12_0 = *(0xe40015ec)
0224: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
022c: beq %r10_0, 2 -> 0x0238 v
0230: %r10_0 = *(0xe40015e0)
0234: jmp 0x0244 v
0238: %r10_0 = *(0xe40015e0)
023c: %r10_1 = 0x001bb306
0244: store_word %r10_0, 0xe40015e0
0248: %r12_0 = *(0xe40015ec)
024c: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
0254: beq %r10_0, 6 -> 0x0260 v
0258: %r10_0 = *(0xe40015e0)
025c: jmp 0x026c v
0260: %r10_0 = *(0xe40015e0)
0264: %r10_1 = 0x001fa306
026c: return
0270: %r10_1 = 0x06208089
0278: store_word %r10_0, 0xe40015e0
027c: %r12_0 = *(0xe40015ec)
0280: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
0288: beq %r10_0, 1 -> 0x0294 v
028c: %r10_0 = *(0xe40015e0)
0290: jmp 0x02c8 v
0294: %r10_0 = *(0xe40015e0)
0298: %r10_1 = 0x06228089
02a0: store_word %r10_0, 0xe40015e0
02a4: %r12_0 = *(0xe40015ec)
02a8: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
02b0: bne %r10_0, 4 -> 0x02bc v
02b4: %r10_0 = *(0xe40015e0)
02b8: jmp 0x02c8 v
02bc: %r10_0 = *(0xe40015e0)
02c0: %r10_1 = 0x06208089
02c8: store_word %r10_0, 0xe40015e0
02cc: %r12_0 = *(0xe40015ec)
02d0: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
02d8: beq %r10_0, 2 -> 0x02e4 v
02dc: %r10_0 = *(0xe40015e0)
02e0: jmp 0x0318 v
02e4: %r10_0 = *(0xe40015e0)
02e8: %r10_1 = 0x0622808a
02f0: store_word %r10_0, 0xe40015e0
02f4: %r12_0 = *(0xe40015ec)
02f8: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
0300: bne %r10_0, 4 -> 0x030c v
0304: %r10_0 = *(0xe40015e0)
0308: jmp 0x0318 v
030c: %r10_0 = *(0xe40015e0)
0310: %r10_1 = 0x0620808a
0318: store_word %r10_0, 0xe40015e0
031c: %r12_0 = *(0xe40015ec)
0320: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
0328: beq %r10_0, 6 -> 0x0334 v
032c: %r10_0 = *(0xe40015e0)
0330: jmp 0x0340 v
0334: %r10_0 = *(0xe40015e0)
0338: %r10_1 = 0x06208089
0340: store_word %r10_0, 0xe40015e0
0344: %r10_0 = *(0xe40015e8)
0348: %r10_0 = rotlw_by_28_then_and %r10_0, 1
034c: bne %r10_0, 1 -> 0x0358 v
0350: %r10_0 = *(0xe40015e0)
0354: jmp 0x0384 v
0358: %r10_0 = *(0xe40015e0)
035c: %r10_1 = or %r10_1, 4
0360: store_word %r10_0, 0xe40015e0
0364: %r10_0 = *(0xe40015e8)
0368: %r10_0 = rotlw_by_29_then_and %r10_0, 1
036c: bne %r10_0, 0 -> 0x0378 v
0370: %r10_0 = *(0xe40015e0)
0374: jmp 0x0384 v
0378: %r10_0 = *(0xe40015e0)
037c: %r10_1 = and %r10_1, 0xfffdffff
0384: return
0388: %r10_1 = 0x06208009
0390: store_word %r10_0, 0xe40015e0
0394: %r12_0 = *(0xe40015ec)
0398: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
03a0: beq %r10_0, 1 -> 0x03ac v
03a4: %r10_0 = *(0xe40015e0)
03a8: jmp 0x03e0 v
03ac: %r10_0 = *(0xe40015e0)
03b0: %r10_1 = 0x06228009
03b8: store_word %r10_0, 0xe40015e0
03bc: %r12_0 = *(0xe40015ec)
03c0: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
03c8: bne %r10_0, 4 -> 0x03d4 v
03cc: %r10_0 = *(0xe40015e0)
03d0: jmp 0x03e0 v
03d4: %r10_0 = *(0xe40015e0)
03d8: %r10_1 = 0x06208009
03e0: store_word %r10_0, 0xe40015e0
03e4: %r12_0 = *(0xe40015ec)
03e8: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
03f0: beq %r10_0, 2 -> 0x03fc v
03f4: %r10_0 = *(0xe40015e0)
03f8: jmp 0x0458 v
03fc: %r10_0 = *(0xe40015e0)
0400: %r10_1 = 0x06208009
0408: store_word %r10_0, 0xe40015e0
040c: %r12_0 = *(0xe40015ec)
0410: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
0418: bne %r10_0, 3 -> 0x0424 v
041c: %r10_0 = *(0xe40015e0)
0420: jmp 0x0458 v
0424: %r10_0 = *(0xe40015e0)
0428: %r10_1 = 0x06228009
0430: store_word %r10_0, 0xe40015e0
0434: %r12_0 = *(0xe40015ec)
0438: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
0440: bne %r10_0, 4 -> 0x044c v
0444: %r10_0 = *(0xe40015e0)
0448: jmp 0x0458 v
044c: %r10_0 = *(0xe40015e0)
0450: %r10_1 = 0x0620800a
0458: store_word %r10_0, 0xe40015e0
045c: %r12_0 = *(0xe40015ec)
0460: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
0468: beq %r10_0, 6 -> 0x0474 v
046c: %r10_0 = *(0xe40015e0)
0470: jmp 0x04a8 v
0474: %r10_0 = *(0xe40015e0)
0478: %r10_1 = 0x062080b9
0480: store_word %r10_0, 0xe40015e0
0484: %r12_0 = *(0xe40015ec)
0488: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
0490: bne %r10_0, 2 -> 0x049c v
0494: %r10_0 = *(0xe40015e0)
0498: jmp 0x04a8 v
049c: %r10_0 = *(0xe40015e0)
04a0: %r10_1 = 0x062080b9
04a8: store_word %r10_0, 0xe40015e0
04ac: %r10_0 = *(0xe40015e8)
04b0: %r10_0 = rotlw_by_28_then_and %r10_0, 1
04b4: bne %r10_0, 1 -> 0x04c0 v
04b8: %r10_0 = *(0xe40015e0)
04bc: jmp 0x04ec v
04c0: %r10_0 = *(0xe40015e0)
04c4: %r10_1 = or %r10_1, 4
04c8: store_word %r10_0, 0xe40015e0
04cc: %r10_0 = *(0xe40015e8)
04d0: %r10_0 = rotlw_by_29_then_and %r10_0, 1
04d4: bne %r10_0, 0 -> 0x04e0 v
04d8: %r10_0 = *(0xe40015e0)
04dc: jmp 0x04ec v
04e0: %r10_0 = *(0xe40015e0)
04e4: %r10_1 = and %r10_1, 0xfffdffff
04ec: return
04f0: %r10_1 = 0x06210001
04f8: store_word %r10_0, 0xe40015e0
04fc: %r12_0 = *(0xe40015ec)
0500: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
0508: bne %r10_0, 2 -> 0x0514 v
050c: %r10_0 = *(0xe40015e0)
0510: jmp 0x0520 v
0514: %r10_0 = *(0xe40015e0)
0518: %r10_1 = 0x0621001b
0520: return
0524: %r10_0 = load_word -3
0528: %r12_1 = and %r12_0, 0x000000ff
0530: %r12_0 = and %r12_0, 0xffffff00
0538: %r12_1 = mul %r12_1, %r11_1
053c: %r12_0 = and %r10_1, 0x000000ff
0544: %r12_1 = add %r12_1, %r13_0
0548: %r12_1 = and %r12_1, 0x000000ff
0550: %r12_0 = and %r12_1, 0x00000080
0558: beq %r13_0, 0 -> 0x0560 v
055c: %r12_1 = 0
0560: %r12_0 = rotlw_by_0_then_and %r11_0, -1
0564: bge %r12_1, %r13_0 -> 0x056c v
0568: %r12_1 = and %r13_0, -1
056c: %r12_0 = or %r12_0, %r12_1
0570: %r12_1 = and %r12_0, 0x0000ff00
0578: %r12_0 = and %r12_0, 0xffff00ff
0580: %r12_1 = mul %r12_1, %r11_1
0584: %r12_0 = and %r10_1, 0x0000ff00
058c: %r12_1 = add %r12_1, %r13_0
0590: %r12_1 = and %r12_1, 0x0000ff00
0598: %r12_0 = and %r12_1, 0x00008000
05a0: beq %r13_0, 0 -> 0x05a8 v
05a4: %r12_1 = 0
05a8: %r12_0 = rotlw_by_8_then_and %r11_0, -1
05ac: bge %r12_1, %r13_0 -> 0x05b4 v
05b0: %r12_1 = and %r13_0, -1
05b4: %r12_0 = or %r12_0, %r12_1
05b8: %r12_1 = and %r12_0, 0x00ff0000
05c0: %r12_0 = and %r12_0, 0xff00ffff
05c8: %r12_1 = mul %r12_1, %r11_1
05cc: %r12_0 = and %r10_1, 0x00ff0000
05d4: %r12_1 = add %r12_1, %r13_0
05d8: %r12_1 = and %r12_1, 0x00ff0000
05e0: %r12_0 = and %r12_1, 0x00800000
05e8: beq %r13_0, 0 -> 0x05f0 v
05ec: %r12_1 = 0
05f0: %r12_0 = rotlw_by_16_then_and %r11_0, -1
05f4: bge %r12_1, %r13_0 -> 0x05fc v
05f8: %r12_1 = and %r13_0, -1
05fc: %r12_0 = or %r12_0, %r12_1
0600: %r12_1 = and %r12_0, 0xff000000
0608: %r12_0 = and %r12_0, 0x00ffffff
0610: %r12_1 = mul %r12_1, %r11_1
0614: %r12_0 = and %r10_1, 0xff000000
061c: %r12_1 = add %r12_1, %r13_0
0620: %r12_1 = and %r12_1, 0xff000000
0628: %r12_0 = and %r12_1, 0x80000000
0630: beq %r13_0, 0 -> 0x0638 v
0634: %r12_1 = 0
0638: %r12_0 = rotlw_by_24_then_and %r11_0, -1
063c: bge %r12_1, %r13_0 -> 0x0644 v
0640: %r12_1 = and %r13_0, -1
0644: %r12_0 = or %r12_0, %r12_1
0648: store_word %r12_0, %r10_0
064c: return
0650: store_word %r10_0, 0xe40015e0
0654: %r12_0 = *(0xe40015ec)
0658: %r10_0 = rotlw_by_24_then_and %r10_0, 0x0000000f
0660: beq %r10_0, 1 -> 0x066c v
0664: %r10_0 = *(0xe40015e0)
0668: jmp 0x0788 v
066c: %r10_0 = *(0xe40015e0)
0670: store_word %r10_0, 0xe40015e0
0674: %r12_0 = *(0xe40015ec)
0678: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
0680: beq %r10_0, 1 -> 0x068c v
0684: %r10_0 = *(0xe40015e0)
0688: jmp 0x06cc v
068c: %r10_0 = *(0xe40015e0)
0690: beq %r11_0, 0 -> 0x06a0 v
0694: beq %r11_0, 1 -> 0x06ac v
0698: beq %r11_0, 2 -> 0x06b8 v
069c: beq %r11_0, 3 -> 0x06c4 v
06a0: %r11_1 = 0x001ff306
06a8: jmp 0x06cc v
06ac: %r11_1 = 0x001bb306
06b4: jmp 0x06cc v
06b8: %r11_1 = 0x001fa306
06c0: jmp 0x06cc v
06c4: %r11_1 = 0x0018f306
06cc: store_word %r10_0, 0xe40015e0
06d0: %r12_0 = *(0xe40015ec)
06d4: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
06dc: beq %r10_0, 2 -> 0x06e8 v
06e0: %r10_0 = *(0xe40015e0)
06e4: jmp 0x0728 v
06e8: %r10_0 = *(0xe40015e0)
06ec: beq %r11_0, 0 -> 0x06fc v
06f0: beq %r11_0, 1 -> 0x0708 v
06f4: beq %r11_0, 2 -> 0x0714 v
06f8: beq %r11_0, 3 -> 0x0720 v
06fc: %r11_1 = 0x001ff306
0704: jmp 0x0728 v
0708: %r11_1 = 0x001bb306
0710: jmp 0x0728 v
0714: %r11_1 = 0x001fa306
071c: jmp 0x0728 v
0720: %r11_1 = 0x0018f306
0728: store_word %r10_0, 0xe40015e0
072c: %r12_0 = *(0xe40015ec)
0730: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
0738: beq %r10_0, 6 -> 0x0744 v
073c: %r10_0 = *(0xe40015e0)
0740: jmp 0x0784 v
0744: %r10_0 = *(0xe40015e0)
0748: beq %r11_0, 0 -> 0x0758 v
074c: beq %r11_0, 1 -> 0x0764 v
0750: beq %r11_0, 2 -> 0x0770 v
0754: beq %r11_0, 3 -> 0x077c v
0758: %r11_1 = 0x001ff306
0760: jmp 0x0784 v
0764: %r11_1 = 0x001bb306
076c: jmp 0x0784 v
0770: %r11_1 = 0x001fa306
0778: jmp 0x0784 v
077c: %r11_1 = 0x0018f306
0784: jmp 0x0b9c v
0788: store_word %r10_0, 0xe40015e0
078c: %r12_0 = *(0xe40015ec)
0790: %r10_0 = rotlw_by_24_then_and %r10_0, 0x0000000f
0798: beq %r10_0, 2 -> 0x07a4 v
079c: %r10_0 = *(0xe40015e0)
07a0: jmp 0x0b90 v
07a4: %r10_0 = *(0xe40015e0)
07a8: store_word %r10_0, 0xe40015e0
07ac: %r12_0 = *(0xe40015ec)
07b0: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
07b8: beq %r10_0, 1 -> 0x07c4 v
07bc: %r10_0 = *(0xe40015e0)
07c0: jmp 0x0824 v
07c4: %r10_0 = *(0xe40015e0)
07c8: store_word %r10_0, 0xe40015e0
07cc: %r12_0 = *(0xe40015ec)
07d0: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
07d8: beq %r10_0, 0 -> 0x07e4 v
07dc: %r10_0 = *(0xe40015e0)
07e0: jmp 0x0824 v
07e4: %r10_0 = *(0xe40015e0)
07e8: beq %r11_0, 0 -> 0x07f8 v
07ec: beq %r11_0, 1 -> 0x0804 v
07f0: beq %r11_0, 2 -> 0x0810 v
07f4: beq %r11_0, 3 -> 0x081c v
07f8: %r11_1 = 0x001ff306
0800: jmp 0x0824 v
0804: %r11_1 = 0x001bb306
080c: jmp 0x0824 v
0810: %r11_1 = 0x001fa306
0818: jmp 0x0824 v
081c: %r11_1 = 0x0018f306
0824: store_word %r10_0, 0xe40015e0
0828: %r12_0 = *(0xe40015ec)
082c: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
0834: beq %r10_0, 1 -> 0x0840 v
0838: %r10_0 = *(0xe40015e0)
083c: jmp 0x08a0 v
0840: %r10_0 = *(0xe40015e0)
0844: store_word %r10_0, 0xe40015e0
0848: %r12_0 = *(0xe40015ec)
084c: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
0854: beq %r10_0, 4 -> 0x0860 v
0858: %r10_0 = *(0xe40015e0)
085c: jmp 0x08a0 v
0860: %r10_0 = *(0xe40015e0)
0864: beq %r11_0, 0 -> 0x0874 v
0868: beq %r11_0, 1 -> 0x0880 v
086c: beq %r11_0, 2 -> 0x088c v
0870: beq %r11_0, 3 -> 0x0898 v
0874: %r11_1 = 0x000af306
087c: jmp 0x08a0 v
0880: %r11_1 = 0x0008f306
0888: jmp 0x08a0 v
088c: %r11_1 = 0x0006f306
0894: jmp 0x08a0 v
0898: %r11_1 = 0x0004f306
08a0: store_word %r10_0, 0xe40015e0
08a4: %r12_0 = *(0xe40015ec)
08a8: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
08b0: beq %r10_0, 1 -> 0x08bc v
08b4: %r10_0 = *(0xe40015e0)
08b8: jmp 0x0920 v
08bc: %r10_0 = *(0xe40015e0)
08c0: store_word %r10_0, 0xe40015e0
08c4: %r12_0 = *(0xe40015ec)
08c8: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
08d0: beq %r10_0, 0x00000009 -> 0x08e0 v
08d8: %r10_0 = *(0xe40015e0)
08dc: jmp 0x0920 v
08e0: %r10_0 = *(0xe40015e0)
08e4: beq %r11_0, 0 -> 0x08f4 v
08e8: beq %r11_0, 1 -> 0x0900 v
08ec: beq %r11_0, 2 -> 0x090c v
08f0: beq %r11_0, 3 -> 0x0918 v
08f4: %r11_1 = 0x000af306
08fc: jmp 0x0920 v
0900: %r11_1 = 0x0008f306
0908: jmp 0x0920 v
090c: %r11_1 = 0x0006f306
0914: jmp 0x0920 v
0918: %r11_1 = 0x0004f306
0920: store_word %r10_0, 0xe40015e0
0924: %r12_0 = *(0xe40015ec)
0928: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
0930: beq %r10_0, 2 -> 0x093c v
0934: %r10_0 = *(0xe40015e0)
0938: jmp 0x099c v
093c: %r10_0 = *(0xe40015e0)
0940: store_word %r10_0, 0xe40015e0
0944: %r12_0 = *(0xe40015ec)
0948: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
0950: beq %r10_0, 0 -> 0x095c v
0954: %r10_0 = *(0xe40015e0)
0958: jmp 0x099c v
095c: %r10_0 = *(0xe40015e0)
0960: beq %r11_0, 0 -> 0x0970 v
0964: beq %r11_0, 1 -> 0x097c v
0968: beq %r11_0, 2 -> 0x0988 v
096c: beq %r11_0, 3 -> 0x0994 v
0970: %r11_1 = 0x005ff306
0978: jmp 0x099c v
097c: %r11_1 = 0x005bb306
0984: jmp 0x099c v
0988: %r11_1 = 0x005fa306
0990: jmp 0x099c v
0994: %r11_1 = 0x0058f306
099c: store_word %r10_0, 0xe40015e0
09a0: %r12_0 = *(0xe40015ec)
09a4: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
09ac: beq %r10_0, 2 -> 0x09b8 v
09b0: %r10_0 = *(0xe40015e0)
09b4: jmp 0x0a18 v
09b8: %r10_0 = *(0xe40015e0)
09bc: store_word %r10_0, 0xe40015e0
09c0: %r12_0 = *(0xe40015ec)
09c4: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
09cc: beq %r10_0, 3 -> 0x09d8 v
09d0: %r10_0 = *(0xe40015e0)
09d4: jmp 0x0a18 v
09d8: %r10_0 = *(0xe40015e0)
09dc: beq %r11_0, 0 -> 0x09ec v
09e0: beq %r11_0, 1 -> 0x09f8 v
09e4: beq %r11_0, 2 -> 0x0a04 v
09e8: beq %r11_0, 3 -> 0x0a10 v
09ec: %r11_1 = 0x005ff306
09f4: jmp 0x0a18 v
09f8: %r11_1 = 0x005bb306
0a00: jmp 0x0a18 v
0a04: %r11_1 = 0x005fa306
0a0c: jmp 0x0a18 v
0a10: %r11_1 = 0x005f6306
0a18: store_word %r10_0, 0xe40015e0
0a1c: %r12_0 = *(0xe40015ec)
0a20: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
0a28: beq %r10_0, 2 -> 0x0a34 v
0a2c: %r10_0 = *(0xe40015e0)
0a30: jmp 0x0a94 v
0a34: %r10_0 = *(0xe40015e0)
0a38: store_word %r10_0, 0xe40015e0
0a3c: %r12_0 = *(0xe40015ec)
0a40: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
0a48: beq %r10_0, 4 -> 0x0a54 v
0a4c: %r10_0 = *(0xe40015e0)
0a50: jmp 0x0a94 v
0a54: %r10_0 = *(0xe40015e0)
0a58: beq %r11_0, 0 -> 0x0a68 v
0a5c: beq %r11_0, 1 -> 0x0a74 v
0a60: beq %r11_0, 2 -> 0x0a80 v
0a64: beq %r11_0, 3 -> 0x0a8c v
0a68: %r11_1 = 0x005ff306
0a70: jmp 0x0a94 v
0a74: %r11_1 = 0x005bb306
0a7c: jmp 0x0a94 v
0a80: %r11_1 = 0x005fa306
0a88: jmp 0x0a94 v
0a8c: %r11_1 = 0x005f6306
0a94: store_word %r10_0, 0xe40015e0
0a98: %r12_0 = *(0xe40015ec)
0a9c: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
0aa4: beq %r10_0, 6 -> 0x0ab0 v
0aa8: %r10_0 = *(0xe40015e0)
0aac: jmp 0x0b10 v
0ab0: %r10_0 = *(0xe40015e0)
0ab4: store_word %r10_0, 0xe40015e0
0ab8: %r12_0 = *(0xe40015ec)
0abc: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
0ac4: beq %r10_0, 1 -> 0x0ad0 v
0ac8: %r10_0 = *(0xe40015e0)
0acc: jmp 0x0b10 v
0ad0: %r10_0 = *(0xe40015e0)
0ad4: beq %r11_0, 0 -> 0x0ae4 v
0ad8: beq %r11_0, 1 -> 0x0af0 v
0adc: beq %r11_0, 2 -> 0x0afc v
0ae0: beq %r11_0, 3 -> 0x0b08 v
0ae4: %r11_1 = 0x00faf306
0aec: jmp 0x0b10 v
0af0: %r11_1 = 0x00faf306
0af8: jmp 0x0b10 v
0afc: %r11_1 = 0x00fef306
0b04: jmp 0x0b10 v
0b08: %r11_1 = 0x00fef306
0b10: store_word %r10_0, 0xe40015e0
0b14: %r12_0 = *(0xe40015ec)
0b18: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
0b20: beq %r10_0, 6 -> 0x0b2c v
0b24: %r10_0 = *(0xe40015e0)
0b28: jmp 0x0b8c v
0b2c: %r10_0 = *(0xe40015e0)
0b30: store_word %r10_0, 0xe40015e0
0b34: %r12_0 = *(0xe40015ec)
0b38: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
0b40: beq %r10_0, 2 -> 0x0b4c v
0b44: %r10_0 = *(0xe40015e0)
0b48: jmp 0x0b8c v
0b4c: %r10_0 = *(0xe40015e0)
0b50: beq %r11_0, 0 -> 0x0b60 v
0b54: beq %r11_0, 1 -> 0x0b6c v
0b58: beq %r11_0, 2 -> 0x0b78 v
0b5c: beq %r11_0, 3 -> 0x0b84 v
0b60: %r11_1 = 0x00faf306
0b68: jmp 0x0b8c v
0b6c: %r11_1 = 0x00faf306
0b74: jmp 0x0b8c v
0b78: %r11_1 = 0x00fef306
0b80: jmp 0x0b8c v
0b84: %r11_1 = 0x00fef306
0b8c: jmp 0x0b9c v
0b90: delay -7
0b98: jmp 0x0b90 ^
0b9c: return
0ba0: %r10_0 = 0
0ba4: bne %r10_0, 5 -> 0x0bb4 v
0ba8: store_word 0x0015159a, 0xe4000024
0bb0: jmp 0x109c v
0bb4: %r10_0 = add %r10_0, 1
0bb8: store_word_0_100 %r11_1, MC0_PAD_CAL_CNTL
0bbc: %r10_0 = load_word -6
0bc0: sync
0bc4: delay -7
0bc8: %r10_1 = and %r11_1, -7
0bcc: store_word_0_100 %r10_1, MC0_PAD_CAL_CNTL
0bd0: %r10_0 = load_word -6
0bd4: sync
0bd8: delay -7
0bdc: store_word 0x00000200, MC0_PAD_CAL_CNTL
0be4: %r10_0 = load_word -6
0be8: %r10_0 = rotlw_by_20_then_and %r10_1, 0x00f00000
0bf0: store_word 0, MC0_PAD_CAL_CNTL
0bf4: %r10_0 = load_word -6
0bf8: %r10_1 = rotlw_by_5_then_and %r10_1, 0x00000200
0c00: %r10_0 = or %r11_0, %r10_1
0c04: %r10_0 = load_word -6
0c08: %r10_1 = xor %r10_1, 0x0000000f
0c10: %r10_1 = rotlw_by_16_then_and %r10_1, 0x000f0000
0c18: %r10_0 = or %r11_0, %r10_1
0c1c: store_word 0x00000100, MC0_PAD_CAL_CNTL
0c24: %r10_0 = load_word -6
0c28: %r10_1 = rotlw_by_4_then_and %r10_1, 0x00000100
0c30: %r10_0 = or %r11_0, %r10_1
0c34: %r10_0 = load_word -6
0c38: %r10_1 = rotlw_by_12_then_and %r10_1, 0x0000f000
0c40: %r10_0 = or %r11_0, %r10_1
0c44: %r10_1 = and %r11_1, 0x00fff300
0c4c: bne %r10_1, %r11_0 -> 0x0ba4 ^
0c50: store_word 0x00000200, MC1_PAD_CAL_CNTL
0c58: %r10_0 = load_word -6
0c5c: %r10_0 = rotlw_by_20_then_and %r10_1, 0x00f00000
0c64: store_word 0, MC1_PAD_CAL_CNTL
0c68: %r10_0 = load_word -6
0c6c: %r10_1 = rotlw_by_5_then_and %r10_1, 0x00000200
0c74: %r10_0 = or %r11_0, %r10_1
0c78: %r10_0 = load_word -6
0c7c: %r10_1 = xor %r10_1, 0x0000000f
0c84: %r10_1 = rotlw_by_16_then_and %r10_1, 0x000f0000
0c8c: %r10_0 = or %r11_0, %r10_1
0c90: store_word 0x00000100, MC1_PAD_CAL_CNTL
0c98: %r10_0 = load_word -6
0c9c: %r10_1 = rotlw_by_4_then_and %r10_1, 0x00000100
0ca4: %r10_0 = or %r11_0, %r10_1
0ca8: %r10_0 = load_word -6
0cac: %r10_1 = rotlw_by_12_then_and %r10_1, 0x0000f000
0cb4: %r10_0 = or %r11_0, %r10_1
0cb8: %r10_1 = and %r11_1, 0x00fff300
0cc0: bne %r10_1, %r11_0 -> 0x0ba4 ^
0cc4: return
0cc8: %r12_0 = load_word -5
0ccc: %r11_1 = rotlw_by_0_then_and %r13_0, 0x000000ff
0cd4: blt? %r11_1, %r11_0 -> 0x0cdc v
0cd8: %r10_0 = %r11_1
0cdc: %r11_1 = rotlw_by_8_then_and %r13_0, 0x000000ff
0ce4: blt? %r11_1, %r11_0 -> 0x0cec v
0ce8: %r10_0 = %r11_1
0cec: %r11_1 = rotlw_by_16_then_and %r13_0, 0x000000ff
0cf4: blt? %r11_1, %r11_0 -> 0x0cfc v
0cf8: %r10_0 = %r11_1
0cfc: %r11_1 = rotlw_by_24_then_and %r13_0, 0x000000ff
0d04: blt? %r11_1, %r11_0 -> 0x0d0c v
0d08: %r10_0 = %r11_1
0d0c: store_word %r11_0, 0xe4000024
0d10: return
0d14: return
0d18: return
0d1c: store_word 0x0010109a, 0xe4000024
0d24: call 0x109c
0d28: jmp 0x19bc v
0d2c: %r10_0 = *(SMC_FIFO_INBOX_CTRL_STATUS)
0d34: %r10_0 = and %r10_0, 4
0d38: beq %r10_0, 0 -> 0x0d2c ^
0d3c: store_word 4, SMC_FIFO_INBOX_CTRL_STATUS
0d44: store_word %r10_1, SMC_FIFO_INBOX_DATA
0d4c: store_word 0, SMC_FIFO_INBOX_CTRL_STATUS
0d54: return
0d58: beq %r10_0, 3 -> 0x0de8 v
0d5c: beq %r10_0, 2 -> 0x0dbc v
0d60: beq %r10_0, 1 -> 0x0d90 v
0d64: %r10_1 = 0x000f0199
0d6c: call 0x0d2c
0d70: delay -7
0d78: %r10_1 = 0x00000099
0d80: call 0x0d2c
0d84: delay -7
0d8c: return
0d90: %r10_1 = 0x00010199
0d98: call 0x0d2c
0d9c: delay -7
0da4: %r10_1 = 0x00000099
0dac: call 0x0d2c
0db0: delay -7
0db8: return
0dbc: %r10_1 = 0x00030199
0dc4: call 0x0d2c
0dc8: delay -7
0dd0: %r10_1 = 0x00000099
0dd8: call 0x0d2c
0ddc: delay -7
0de4: return
0de8: %r10_1 = 0x00070199
0df0: call 0x0d2c
0df4: delay -7
0dfc: %r10_1 = 0x00000099
0e04: call 0x0d2c
0e08: delay -7
0e10: return
0e14: beq %r10_0, 3 -> 0x0ea4 v
0e18: beq %r10_0, 2 -> 0x0e78 v
0e1c: beq %r10_0, 1 -> 0x0e4c v
0e20: %r10_1 = 0x00f00199
0e28: call 0x0d2c
0e2c: delay -7
0e34: %r10_1 = 0x00000099
0e3c: call 0x0d2c
0e40: delay -7
0e48: return
0e4c: %r10_1 = 0x00100199
0e54: call 0x0d2c
0e58: delay -7
0e60: %r10_1 = 0x00000099
0e68: call 0x0d2c
0e6c: delay -7
0e74: return
0e78: %r10_1 = 0x00300199
0e80: call 0x0d2c
0e84: delay -7
0e8c: %r10_1 = 0x00000099
0e94: call 0x0d2c
0e98: delay -7
0ea0: return
0ea4: %r10_1 = 0x00700199
0eac: call 0x0d2c
0eb0: delay -7
0eb8: %r10_1 = 0x00000099
0ec0: call 0x0d2c
0ec4: delay -7
0ecc: return
0ed0: beq %r10_0, 3 -> 0x0f60 v
0ed4: beq %r10_0, 2 -> 0x0f34 v
0ed8: beq %r10_0, 1 -> 0x0f08 v
0edc: %r10_1 = 0x00ff0199
0ee4: call 0x0d2c
0ee8: delay -7
0ef0: %r10_1 = 0x00000099
0ef8: call 0x0d2c
0efc: delay -7
0f04: return
0f08: %r10_1 = 0x00110199
0f10: call 0x0d2c
0f14: delay -7
0f1c: %r10_1 = 0x00000099
0f24: call 0x0d2c
0f28: delay -7
0f30: return
0f34: %r10_1 = 0x00330199
0f3c: call 0x0d2c
0f40: delay -7
0f48: %r10_1 = 0x00000099
0f50: call 0x0d2c
0f54: delay -7
0f5c: return
0f60: %r10_1 = 0x00770199
0f68: call 0x0d2c
0f6c: delay -7
0f74: %r10_1 = 0x00000099
0f7c: call 0x0d2c
0f80: delay -7
0f88: return
0f8c: %r10_1 = 1
0f90: call 0x0d2c
0f94: %r10_1 = 0x0000038c
0f9c: call 0x0d2c
0fa0: delay -7
0fa8: %r11_1 = 0
0fac: %r10_0 = rotlw_by_26_then_and %r11_1, 3
0fb0: call 0x0ed0
0fb4: %r10_0 = rotlw_by_28_then_and %r11_1, 3
0fb8: call 0x0ed0
0fbc: %r10_0 = rotlw_by_30_then_and %r11_1, 3
0fc0: call 0x0ed0
0fc4: %r10_0 = rotlw_by_0_then_and %r11_1, 3
0fc8: call 0x0ed0
0fcc: delay -7
0fd4: %r11_1 = 0x00000032
0fdc: %r10_0 = rotlw_by_26_then_and %r11_1, 3
0fe0: call 0x0e14
0fe4: %r10_0 = rotlw_by_28_then_and %r11_1, 3
0fe8: call 0x0e14
0fec: %r10_0 = rotlw_by_30_then_and %r11_1, 3
0ff0: call 0x0e14
0ff4: %r10_0 = rotlw_by_0_then_and %r11_1, 3
0ff8: call 0x0e14
0ffc: delay -7
1004: %r10_1 = 0x0000018c
100c: call 0x0d2c
1010: delay -7
1018: return
101c: %r12_0 = load_word -4
1020: call 0x0f8c
1024: %r12_0 = load_word -4
1028: %r11_1 = rotlw_by_24_then_and %r11_1, 0x000000ff
1030: %r10_0 = rotlw_by_26_then_and %r11_1, 3
1034: call 0x0d58
1038: %r10_0 = rotlw_by_28_then_and %r11_1, 3
103c: call 0x0d58
1040: %r10_0 = rotlw_by_30_then_and %r11_1, 3
1044: call 0x0d58
1048: %r10_0 = rotlw_by_0_then_and %r11_1, 3
104c: call 0x0d58
1050: delay -7
1058: %r12_0 = load_word -4
105c: %r10_0 = rotlw_by_26_then_and %r11_1, 3
1060: call 0x0e14
1064: %r10_0 = rotlw_by_28_then_and %r11_1, 3
1068: call 0x0e14
106c: %r10_0 = rotlw_by_30_then_and %r11_1, 3
1070: call 0x0e14
1074: %r10_0 = rotlw_by_0_then_and %r11_1, 3
1078: call 0x0e14
107c: delay -7
1084: jmp 0x1024 ^
1088: call 0x0f8c
108c: %r10_1 = 0x00ff0199
1094: call 0x0d2c
1098: jmp 0x1098 ^
109c: store_word %r10_0, 0xe4000028
10a0: store_word %r10_0, 0xe40015e0
10a4: %r10_0 = *(0xe40015e8)
10a8: %r10_0 = rotlw_by_0_then_and %r10_0, 1
10ac: bne %r10_0, 1 -> 0x10b8 v
10b0: %r10_0 = *(0xe40015e0)
10b4: jmp 0x10e8 v
10b8: %r10_0 = *(0xe40015e0)
10bc: %r10_0 = *(SMC_FIFO_INBOX_CTRL_STATUS)
10c4: %r10_0 = and %r10_0, 4
10c8: beq %r10_0, 0 -> 0x10bc ^
10cc: store_word 4, SMC_FIFO_INBOX_CTRL_STATUS
10d4: %r12_0 = *(0xe4000024)
10d8: store_word %r10_0, SMC_FIFO_INBOX_DATA
10e0: store_word 0, SMC_FIFO_INBOX_CTRL_STATUS
10e8: %r10_0 = *(0xe4000028)
10ec: return
10f0: store_word %r10_0, 0xe40015e0
10f4: %r10_0 = *(0xe40015e8)
10f8: %r10_0 = rotlw_by_28_then_and %r10_0, 1
10fc: bne %r10_0, 0 -> 0x1108 v
1100: %r10_0 = *(0xe40015e0)
1104: jmp 0x1120 v
1108: %r10_0 = *(0xe40015e0)
110c: %r10_0 = rotlw_by_28_then_and %r11_1, 0x0000000f
1114: %r11_1 = or %r11_1, %r10_0
1118: %r11_1 = and %r11_1, 0x0000000f
1120: return
1124: %r11_1 = rotlw_by_31_then_and %r11_1, 0x0000007f
112c: bne %r10_0, %r10_1 -> 0x1134 v
1130: return
1134: %r11_1 = or %r11_1, 0x00000080
113c: return
1140: %r11_1 = rotlw_by_31_then_and %r11_1, 7
1144: %r10_0 = rotlw_by_0_then_and %r13_0, 0x000000ff
114c: beq %r10_0, 0 -> 0x1178 v
1150: %r10_0 = rotlw_by_24_then_and %r13_0, 0x000000ff
1158: beq %r10_0, 0 -> 0x1178 v
115c: %r10_0 = rotlw_by_16_then_and %r13_0, 0x000000ff
1164: beq %r10_0, 0 -> 0x1178 v
1168: %r10_0 = rotlw_by_8_then_and %r13_0, 0x000000ff
1170: beq %r10_0, 0 -> 0x1178 v
1174: return
1178: %r11_1 = or %r11_1, 0x00000008
1180: return
1184: %r10_1 = 0
1188: %r10_0 = and %r12_0, 0x000000ff
1190: bne %r10_0, 0 -> 0x1198 v
1194: %r10_1 = or %r10_1, 1
1198: %r10_0 = and %r12_0, 0x0000ff00
11a0: bne %r10_0, 0 -> 0x11a8 v
11a4: %r10_1 = or %r10_1, 2
11a8: %r10_0 = and %r12_0, 0x00ff0000
11b0: bne %r10_0, 0 -> 0x11b8 v
11b4: %r10_1 = or %r10_1, 4
11b8: %r10_0 = and %r12_0, 0xff000000
11c0: bne %r10_0, 0 -> 0x11cc v
11c4: %r10_1 = or %r10_1, 0x00000008
11cc: %r10_0 = and %r12_1, 0x000000ff
11d4: bne %r10_0, 0 -> 0x11dc v
11d8: %r10_1 = or %r10_1, 1
11dc: %r10_0 = and %r12_1, 0x0000ff00
11e4: bne %r10_0, 0 -> 0x11ec v
11e8: %r10_1 = or %r10_1, 2
11ec: %r10_0 = and %r12_1, 0x00ff0000
11f4: bne %r10_0, 0 -> 0x11fc v
11f8: %r10_1 = or %r10_1, 4
11fc: %r10_0 = and %r12_1, 0xff000000
1204: bne %r10_0, 0 -> 0x1210 v
1208: %r10_1 = or %r10_1, 0x00000008
1210: return
1214: %r12_0 = 0
1218: %r10_0 = and %r13_1, 0x0000000f
1220: beq %r10_0, 0x0000000f -> 0x122c v
1228: %r12_0 = or %r12_0, 1
122c: %r10_0 = and %r13_1, 0x000000f0
1234: beq %r10_0, 0x000000f0 -> 0x1240 v
123c: %r12_0 = or %r12_0, 2
1240: %r10_0 = and %r13_1, 0x00000f00
1248: beq %r10_0, 0x00000f00 -> 0x1254 v
1250: %r12_0 = or %r12_0, 4
1254: %r10_0 = and %r13_1, 0x0000f000
125c: beq %r10_0, 0x0000f000 -> 0x126c v
1264: %r12_0 = or %r12_0, 0x00000008
126c: %r10_0 = and %r13_1, 0x000f0000
1274: beq %r10_0, 0x000f0000 -> 0x1284 v
127c: %r12_0 = or %r12_0, 0x00000010
1284: %r10_0 = and %r13_1, 0x00f00000
128c: beq %r10_0, 0x00f00000 -> 0x129c v
1294: %r12_0 = or %r12_0, 0x00000020
129c: %r10_0 = and %r13_1, 0x0f000000
12a4: beq %r10_0, 0x0f000000 -> 0x12b4 v
12ac: %r12_0 = or %r12_0, 0x00000040
12b4: %r10_0 = and %r13_1, 0xf0000000
12bc: beq %r10_0, 0xf0000000 -> 0x12cc v
12c4: %r12_0 = or %r12_0, 0x00000080
12cc: return
12d0: return
12d4: store_word 0x20000000, 0xe1020000
12dc: store_word 0x20000000, 0xe1040000
12e4: store_word 0, 0xe4002800
12e8: store_word 0x08000000, 0xe4002804
12f0: %r12_0 = load_word -4
12f4: %r11_1 = rotlw_by_28_then_and %r11_1, 7
12f8: bne %r11_1, 5 -> 0x1304 v
12fc: %r10_1 = 0x20003021
1304: bne %r11_1, 6 -> 0x1310 v
1308: %r10_1 = 0x20001011
1310: bne %r11_1, 7 -> 0x131c v
1314: %r10_1 = 0x20003025
131c: bne %r11_1, 0 -> 0x1328 v
1320: %r10_1 = 0x20000009
1328: bne %r11_1, 1 -> 0x1334 v
132c: %r10_1 = 0x20003029
1334: bne %r11_1, 2 -> 0x1340 v
1338: %r10_1 = 0x20001015
1340: bne %r11_1, 3 -> 0x134c v
1344: %r10_1 = 0x2000302d
134c: bne %r11_1, 4 -> 0x1358 v
1350: %r10_1 = 0x2000000b
1358: store_word %r10_1, 0xe4000210
135c: %r10_1 = or %r10_1, 0x000c0000
1364: store_word %r10_1, 0xe4000210
1368: %r10_0 = *(0xe4000210)
136c: sync
1370: delay -7
1374: %r10_1 = and %r10_1, 0xdff3ffff
137c: store_word %r10_1, 0xe4000210
1380: store_word 0x00000200, 0xe4000200
1388: store_word %r10_1, 0xe4000284
138c: %r10_1 = or %r10_1, 0x000c0000
1394: store_word %r10_1, 0xe4000284
1398: %r12_0 = *(0xe4000284)
139c: sync
13a0: delay -7
13a4: %r10_1 = and %r10_1, 0xdff3ffff
13ac: store_word %r10_1, 0xe4000284
13b0: call 0x3f4c
13b4: %r10_1 = 0x20000013
13bc: store_word %r10_1, 0xe4000244
13c0: %r10_1 = or %r10_1, 0x000c0000
13c8: store_word %r10_1, 0xe4000244
13cc: %r12_0 = *(0xe4000244)
13d0: sync
13d4: delay -7
13d8: %r10_1 = and %r10_1, 0xdff3ffff
13e0: store_word %r10_1, 0xe4000244
13e4: store_word 0, 0xe40001a8
13e8: %r10_0 = *(0xd0008000)
13ec: %r10_0 = rotlw_by_16_then_and %r10_0, 0x0000ffff
13f4: %r10_1 = rotlw_by_28_then_and %r10_0, 0x0000000f
13fc: store_word %r10_0, 0xe40015e0
1400: store_word %r10_1, 0xe40015e4
1404: %r10_1 = and %r10_1, 0x0000000f
140c: %r12_0 = *(0xe40015ec)
1410: %r10_0 = rotlw_by_24_then_and %r10_0, 0xfffffff0
1418: %r10_0 = or %r10_0, %r10_1
141c: %r10_0 = rotlw_by_8_then_and %r10_0, -1
1420: store_word %r10_0, 0xe40015ec
1424: %r10_0 = *(0xe40015e0)
1428: %r12_0 = load_word -6
142c: %r10_0 = *(0xd0008008)
1430: %r10_0 = and %r10_0, 0x000000ff
1438: store_word %r10_0, 0xe40015e0
143c: %r12_0 = *(0xe40015ec)
1440: %r10_0 = rotlw_by_24_then_and %r10_0, 0x0000000f
1448: bne %r10_0, 1 -> 0x1454 v
144c: %r10_0 = *(0xe40015e0)
1450: jmp 0x149c v
1454: %r10_0 = *(0xe40015e0)
1458: store_word %r10_0, 0xe40015e0
145c: %r12_0 = *(0xe40015ec)
1460: %r10_0 = rotlw_by_24_then_and %r10_0, 0x0000000f
1468: bne %r10_0, 2 -> 0x1474 v
146c: %r10_0 = *(0xe40015e0)
1470: jmp 0x149c v
1474: %r10_0 = *(0xe40015e0)
1478: store_word %r10_0, 0xe40015e0
147c: %r12_0 = *(0xe40015ec)
1480: %r10_0 = rotlw_by_24_then_and %r10_0, 0x0000000f
1488: bne %r10_0, 3 -> 0x1494 v
148c: %r10_0 = *(0xe40015e0)
1490: jmp 0x149c v
1494: %r10_0 = *(0xe40015e0)
1498: jmp 0x1498 ^
149c: store_word %r10_0, 0xe40015e0
14a0: %r12_0 = *(0xe40015ec)
14a4: %r10_0 = rotlw_by_24_then_and %r10_0, 0x0000000f
14ac: beq %r10_0, 2 -> 0x14b8 v
14b0: %r10_0 = *(0xe40015e0)
14b4: jmp 0x14f8 v
14b8: %r10_0 = *(0xe40015e0)
14bc: store_word 0x0000000e, 0xe1016100
14c4: delay -7
14c8: sync
14cc: store_word 0x00000009, 0xe1016000
14d4: %r10_0 = *(0xe1016000)
14d8: sync
14dc: store_word 0x00000401, 0xe1016100
14e4: delay -7
14e8: sync
14ec: store_word 3, 0xe1016000
14f0: %r10_0 = *(0xe1016000)
14f4: sync
14f8: store_word %r10_0, 0xe40015e0
14fc: %r12_0 = *(0xe40015ec)
1500: %r10_0 = rotlw_by_24_then_and %r10_0, 0x0000000f
1508: beq %r10_0, 3 -> 0x1514 v
150c: %r10_0 = *(0xe40015e0)
1510: jmp 0x157c v
1514: %r10_0 = *(0xe40015e0)
1518: %r10_0 = load_word -6
151c: %r10_1 = and %r10_1, 0xffefffff
1524: store_word %r10_1, 0xe4000248
1528: store_word 4, 0xe1016100
152c: delay -7
1530: sync
1534: store_word 4, 0xe1016000
1538: %r10_0 = *(0xe1016000)
153c: sync
1540: store_word 0x00001027, 0xe1016000
1548: %r10_0 = *(0xe1016000)
154c: sync
1550: %r10_0 = *(0xe1016200)
1554: sync
1558: %r10_0 = and %r10_0, 0xbfffffff
1560: store_word %r10_0, 0xe1016100
1564: delay -7
1568: sync
156c: store_word 0x00000027, 0xe1016000
1574: %r10_0 = *(0xe1016000)
1578: sync
157c: store_word 0x00024024, 0xe40002a0
1584: store_word 0x00024024, 0xe40002a8
158c: store_word_0_100 0x00000342, MC0_PAD_IF_CNTL
1594: %r10_0 = 0
1598: store_word %r10_0, 0xe40015e0
159c: %r12_0 = *(0xe40015ec)
15a0: %r10_0 = rotlw_by_24_then_and %r10_0, 0x0000000f
15a8: beq %r10_0, 3 -> 0x15b4 v
15ac: %r10_0 = *(0xe40015e0)
15b0: jmp 0x15c0 v
15b4: %r10_0 = *(0xe40015e0)
15b8: %r10_0 = 0x11111111
15c0: store_word_0_100 %r10_0, MC0_PAD_IF_CNTL_2
15c4: %r10_0 = 0x50505050
15cc: store_word_0_100 %r10_0, MC0_DLL_MASTER_ADJ_0
15d0: store_word_0_100 %r10_0, MC0_DLL_MASTER_ADJ_1
15d4: %r10_0 = 0x0a0a0a0a
15dc: store_word_0_100 %r10_0, MC0_RD_STR_DLY_0
15e0: store_word_0_100 %r10_0, MC0_RD_STR_DLY_1
15e4: %r10_0 = 0x0f0f0f0f
15ec: store_word_0_100 %r10_0, MC0_WR_STR_DLL_0
15f0: store_word_0_100 %r10_0, MC0_WR_STR_DLL_1
15f4: %r12_0 = *(MC1_WR_STR_DLL_1)
15f8: sync
15fc: delay -7
1600: call 0x3f4c
1604: %r10_0 = 0
1608: %r10_1 = -1
160c: store_word %r10_0, 0xe40015e0
1610: %r12_0 = *(0xe40015ec)
1614: %r10_0 = rotlw_by_24_then_and %r10_0, 0x0000000f
161c: beq %r10_0, 3 -> 0x1628 v
1620: %r10_0 = *(0xe40015e0)
1624: jmp 0x163c v
1628: %r10_0 = *(0xe40015e0)
162c: %r10_0 = 0x00009000
1634: %r10_1 = 0x22222222
163c: store_word_0_100 %r10_0, MC0_TERM_CNTL
1640: store_word_0_100 %r10_1, MC0_WR_STR_DLY
1644: store_word %r10_0, 0xe40015e0
1648: %r12_0 = *(0xe40015ec)
164c: %r10_0 = rotlw_by_24_then_and %r10_0, 0x0000000f
1654: bne %r10_0, 3 -> 0x1660 v
1658: %r10_0 = *(0xe40015e0)
165c: jmp 0x1684 v
1660: %r10_0 = *(0xe40015e0)
1664: store_word_0_100 1, MC0_PAD_CAL_CNTL
1668: %r10_0 = *(MC1_PAD_CAL_CNTL)
166c: sync
1670: delay -7
1674: store_word_0_100 0, MC0_PAD_CAL_CNTL
1678: %r11_1 = 0x000ff306
1680: call 0x0ba0
1684: store_word %r10_0, 0xe40015e0
1688: %r12_0 = *(0xe40015ec)
168c: %r10_0 = rotlw_by_24_then_and %r10_0, 0x0000000f
1694: beq %r10_0, 3 -> 0x16a0 v
1698: %r10_0 = *(0xe40015e0)
169c: jmp 0x16b0 v
16a0: %r10_0 = *(0xe40015e0)
16a4: store_word_0_100 1, MC0_PAD_CAL_CNTL
16a8: store_word_0_100 0x00000008, MC0_PAD_CAL_CNTL
16b0: store_word 0, 0xe40002a4
16b4: store_word_0_100 0, MC0_CNTL
16b8: store_word_0_100 0, MC0_POINTER
16bc: store_word_0_100 0x001c0000, MC0_DRAM_CMD
16c4: store_word_0_100 2, MC0_CNTL
16c8: %r10_0 = *(MC1_CNTL)
16cc: sync
16d0: delay -7
16d4: %r10_0 = 0x00000019
16dc: store_word %r10_0, 0xe40015e0
16e0: %r12_0 = *(0xe40015ec)
16e4: %r10_0 = rotlw_by_24_then_and %r10_0, 0x0000000f
16ec: beq %r10_0, 3 -> 0x16f8 v
16f0: %r10_0 = *(0xe40015e0)
16f4: jmp 0x1700 v
16f8: %r10_0 = *(0xe40015e0)
16fc: %r10_0 = 1
1700: store_word %r10_0, 0xe40002a4
1704: %r12_0 = *(0xe40002a4)
1708: sync
170c: delay -7
1710: store_word_0_100 0, MC0_POINTER
1714: store_word_0_100 0x423c0000, MC0_DRAM_CMD
171c: store_word_0_100 0x0a280100, MC0_DRAM_CMD
1724: store_word_0_100 0x06200221, MC0_DRAM_CMD
172c: store_word_0_100 0x0620808d, MC0_DRAM_CMD
1734: store_word_0_100 0x06200772, MC0_DRAM_CMD
173c: store_word_0_100 2, MC0_CNTL
1740: %r10_0 = *(MC1_CNTL)
1744: sync
1748: delay -7
174c: store_word_0_100 0, MC0_POINTER
1750: store_word_0_100 0x0a280100, MC0_DRAM_CMD
1758: store_word_0_100 0x2f240000, MC0_DRAM_CMD
1760: store_word_0_100 0x2f240000, MC0_DRAM_CMD
1768: store_word_0_100 0x0620c48d, MC0_DRAM_CMD
1770: store_word_0_100 2, MC0_CNTL
1774: %r10_0 = *(MC1_CNTL)
1778: sync
177c: %r12_0 = load_word -3
1780: %r12_0 = load_word -2
1784: store_word_0_100 0, MC0_POINTER
1788: store_word_0_100 0x0620c08d, MC0_DRAM_CMD
1790: store_word_0_100 2, MC0_CNTL
1794: store_word_0_100 0, MC0_POINTER
1798: store_word_0_100 0x0620a48d, MC0_DRAM_CMD
17a0: store_word_0_100 2, MC0_CNTL
17a4: %r10_0 = *(MC1_CNTL)
17a8: sync
17ac: %r12_0 = load_word -1
17b0: %r12_0 = load_word 0
17b4: store_word_0_100 0, MC0_POINTER
17b8: store_word_0_100 0x0620a08d, MC0_DRAM_CMD
17c0: store_word_0_100 2, MC0_CNTL
17c4: %r10_1 = rotlw_by_0_then_and %r12_0, 0x000000ff
17cc: %r10_0 = %r10_1
17d0: call 0x1124
17d4: %r10_1 = rotlw_by_16_then_and %r12_0, 0x000000ff
17dc: call 0x1124
17e0: %r10_1 = rotlw_by_0_then_and %r12_1, 0x000000ff
17e8: call 0x1124
17ec: %r10_1 = rotlw_by_16_then_and %r12_1, 0x000000ff
17f4: call 0x1124
17f8: store_word %r10_0, 0xe40015e0
17fc: %r10_0 = *(0xe40015e8)
1800: %r10_0 = and %r10_0, 0xffffffef
1808: %r10_0 = or %r10_0, 0
180c: store_word %r10_0, 0xe40015e8
1810: %r10_0 = *(0xe40015e0)
1814: %r10_1 = rotlw_by_24_then_and %r13_0, 0x000000ff
181c: bne %r10_1, 0x000000ff -> 0x184c v
1824: store_word %r10_0, 0xe40015e0
1828: %r10_0 = *(0xe40015e8)
182c: %r10_0 = and %r10_0, 0xffffffef
1834: %r10_0 = or %r10_0, 0x00000010
183c: store_word %r10_0, 0xe40015e8
1840: %r10_0 = *(0xe40015e0)
1844: %r10_0 = 0x000000ff
184c: %r10_1 = rotlw_by_24_then_and %r13_0, 0x000000ff
1854: call 0x1124
1858: %r10_1 = rotlw_by_8_then_and %r13_0, 0x000000ff
1860: call 0x1124
1864: %r10_1 = rotlw_by_24_then_and %r13_1, 0x000000ff
186c: call 0x1124
1870: %r10_1 = rotlw_by_8_then_and %r13_1, 0x000000ff
1878: call 0x1124
187c: bne %r11_1, 0 -> 0x0d1c ^
1880: %r10_1 = rotlw_by_28_then_and %r12_0, 0x0000000f
1888: store_word %r10_0, 0xe40015e0
188c: store_word %r10_1, 0xe40015e4
1890: %r10_1 = and %r10_1, 0x0000000f
1898: %r12_0 = *(0xe40015ec)
189c: %r10_0 = rotlw_by_28_then_and %r10_0, 0xfffffff0
18a4: %r10_0 = or %r10_0, %r10_1
18a8: %r10_0 = rotlw_by_4_then_and %r10_0, -1
18ac: store_word %r10_0, 0xe40015ec
18b0: %r10_0 = *(0xe40015e0)
18b4: %r12_0 = load_word -6
18b8: %r10_1 = and %r12_0, 0x0000000f
18c0: store_word %r10_0, 0xe40015e0
18c4: %r10_0 = *(0xe40015e8)
18c8: %r10_0 = and %r10_0, 0xfffffff7
18d0: %r10_0 = or %r10_0, 0
18d4: store_word %r10_0, 0xe40015e8
18d8: %r10_0 = *(0xe40015e0)
18dc: bne %r10_1, 1 -> 0x193c v
18e0: store_word %r10_0, 0xe40015e0
18e4: %r12_0 = *(0xe40015ec)
18e8: %r10_0 = and %r10_0, 0xfffffff0
18f0: %r10_0 = or %r10_0, 1
18f4: store_word %r10_0, 0xe40015ec
18f8: %r10_0 = *(0xe40015e0)
18fc: store_word %r10_0, 0xe40015e0
1900: %r12_0 = *(0xe40015ec)
1904: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
190c: beq %r10_0, 4 -> 0x1918 v
1910: %r10_0 = *(0xe40015e0)
1914: jmp 0x193c v
1918: %r10_0 = *(0xe40015e0)
191c: store_word %r10_0, 0xe40015e0
1920: %r10_0 = *(0xe40015e8)
1924: %r10_0 = and %r10_0, 0xfffffff7
192c: %r10_0 = or %r10_0, 0x00000008
1934: store_word %r10_0, 0xe40015e8
1938: %r10_0 = *(0xe40015e0)
193c: bne %r10_1, 2 -> 0x199c v
1940: store_word %r10_0, 0xe40015e0
1944: %r12_0 = *(0xe40015ec)
1948: %r10_0 = and %r10_0, 0xfffffff0
1950: %r10_0 = or %r10_0, 2
1954: store_word %r10_0, 0xe40015ec
1958: %r10_0 = *(0xe40015e0)
195c: store_word %r10_0, 0xe40015e0
1960: %r12_0 = *(0xe40015ec)
1964: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
196c: beq %r10_0, 4 -> 0x1978 v
1970: %r10_0 = *(0xe40015e0)
1974: jmp 0x199c v
1978: %r10_0 = *(0xe40015e0)
197c: store_word %r10_0, 0xe40015e0
1980: %r10_0 = *(0xe40015e8)
1984: %r10_0 = and %r10_0, 0xfffffff7
198c: %r10_0 = or %r10_0, 0x00000008
1994: store_word %r10_0, 0xe40015e8
1998: %r10_0 = *(0xe40015e0)
199c: bne %r10_1, 6 -> 0x19bc v
19a0: store_word %r10_0, 0xe40015e0
19a4: %r12_0 = *(0xe40015ec)
19a8: %r10_0 = and %r10_0, 0xfffffff0
19b0: %r10_0 = or %r10_0, 6
19b4: store_word %r10_0, 0xe40015ec
19b8: %r10_0 = *(0xe40015e0)
19bc: store_word %r10_0, 0xe40015e0
19c0: %r10_0 = *(0xe40015e8)
19c4: %r10_0 = and %r10_0, -5
19c8: %r10_0 = or %r10_0, 0
19cc: store_word %r10_0, 0xe40015e8
19d0: %r10_0 = *(0xe40015e0)
19d4: store_word %r10_0, 0xe40015e0
19d8: %r10_0 = *(0xe40015e8)
19dc: %r10_0 = rotlw_by_29_then_and %r10_0, 1
19e0: bne %r10_0, 1 -> 0x19ec v
19e4: %r10_0 = *(0xe40015e0)
19e8: jmp 0x1a24 v
19ec: %r10_0 = *(0xe40015e0)
19f0: store_word %r10_0, 0xe40015e0
19f4: %r10_0 = *(0xe40015e8)
19f8: %r10_0 = rotlw_by_28_then_and %r10_0, 1
19fc: bne %r10_0, 0 -> 0x1a08 v
1a00: %r10_0 = *(0xe40015e0)
1a04: jmp 0x1a24 v
1a08: %r10_0 = *(0xe40015e0)
1a0c: store_word %r10_0, 0xe40015e0
1a10: %r10_0 = *(0xe40015e8)
1a14: %r10_0 = and %r10_0, -5
1a18: %r10_0 = or %r10_0, 4
1a1c: store_word %r10_0, 0xe40015e8
1a20: %r10_0 = *(0xe40015e0)
1a24: %r10_0 = 0x10000000
1a2c: store_word %r10_0, 0xe40015e0
1a30: %r10_0 = *(0xe40015e8)
1a34: %r10_0 = rotlw_by_28_then_and %r10_0, 1
1a38: bne %r10_0, 1 -> 0x1a44 v
1a3c: %r10_0 = *(0xe40015e0)
1a40: jmp 0x1a4c v
1a44: %r10_0 = *(0xe40015e0)
1a48: %r10_0 = rotlw_by_1_then_and %r11_0, -2
1a4c: store_word %r10_0, 0xe40015e0
1a50: %r10_0 = *(0xe40015e8)
1a54: %r10_0 = rotlw_by_29_then_and %r10_0, 1
1a58: bne %r10_0, 0 -> 0x1a64 v
1a5c: %r10_0 = *(0xe40015e0)
1a60: jmp 0x1a6c v
1a64: %r10_0 = *(0xe40015e0)
1a68: %r10_0 = rotlw_by_1_then_and %r11_0, -2
1a6c: %r10_1 = 0
1a70: store_word %r10_0, 0xe40015e0
1a74: %r12_0 = *(0xe40015ec)
1a78: %r10_0 = rotlw_by_24_then_and %r10_0, 0x0000000f
1a80: bne %r10_0, 3 -> 0x1a8c v
1a84: %r10_0 = *(0xe40015e0)
1a88: jmp 0x1ad0 v
1a8c: %r10_0 = *(0xe40015e0)
1a90: store_word %r10_0, 0xe40015e0
1a94: %r10_0 = *(0xe40015e8)
1a98: %r10_0 = rotlw_by_29_then_and %r10_0, 1
1a9c: bne %r10_0, 1 -> 0x1aa8 v
1aa0: %r10_0 = *(0xe40015e0)
1aa4: jmp 0x1ad0 v
1aa8: %r10_0 = *(0xe40015e0)
1aac: store_word %r10_0, 0xe40015e0
1ab0: %r10_0 = *(0xe40015e8)
1ab4: %r10_0 = rotlw_by_28_then_and %r10_0, 1
1ab8: bne %r10_0, 0 -> 0x1ac4 v
1abc: %r10_0 = *(0xe40015e0)
1ac0: jmp 0x1ad0 v
1ac4: %r10_0 = *(0xe40015e0)
1ac8: %r10_1 = 0x00000018
1ad0: %r12_0 = load_word -4
1ad4: %r11_1 = and %r11_1, 0xffffffe7
1adc: %r11_1 = or %r11_1, %r10_1
1ae0: store_word %r11_1, 0xe40002a4
1ae4: store_word %r11_0, 0xe1020000
1ae8: store_word %r11_0, 0xe1040000
1aec: store_word %r10_0, 0xe40015e0
1af0: %r12_0 = *(0xe40015ec)
1af4: %r10_0 = rotlw_by_24_then_and %r10_0, 0x0000000f
1afc: bne %r10_0, 3 -> 0x1b08 v
1b00: %r10_0 = *(0xe40015e0)
1b04: jmp 0x1b1c v
1b08: %r10_0 = *(0xe40015e0)
1b0c: call 0x01ec
1b10: %r11_1 = %r10_1
1b14: call 0x0ba0
1b18: %r10_1 = %r11_1
1b1c: %r12_0 = load_word -6
1b20: %r10_1 = and %r10_1, -2
1b24: store_word %r10_1, 0xe40002a4
1b28: store_word_0_100 0, MC0_POINTER
1b2c: store_word_0_100 0x001c0000, MC0_DRAM_CMD
1b34: store_word_0_100 2, MC0_CNTL
1b38: %r10_0 = *(MC1_CNTL)
1b3c: sync
1b40: delay -7
1b44: %r10_1 = or %r10_1, 1
1b48: store_word %r10_1, 0xe40002a4
1b4c: %r12_0 = *(0xe40002a4)
1b50: sync
1b54: delay -7
1b58: %r10_1 = 0x040e3202
1b60: store_word %r10_0, 0xe40015e0
1b64: %r10_0 = *(0xe40015e8)
1b68: %r10_0 = rotlw_by_30_then_and %r10_0, 1
1b6c: bne %r10_0, 1 -> 0x1b78 v
1b70: %r10_0 = *(0xe40015e0)
1b74: jmp 0x1bc8 v
1b78: %r10_0 = *(0xe40015e0)
1b7c: %r10_1 = or %r10_1, 1
1b80: store_word %r10_0, 0xe40015e0
1b84: %r10_0 = *(0xe40015e8)
1b88: %r10_0 = rotlw_by_29_then_and %r10_0, 1
1b8c: bne %r10_0, 0 -> 0x1b98 v
1b90: %r10_0 = *(0xe40015e0)
1b94: jmp 0x1bc8 v
1b98: %r10_0 = *(0xe40015e0)
1b9c: store_word %r10_0, 0xe40015e0
1ba0: %r10_0 = *(0xe40015e8)
1ba4: %r10_0 = rotlw_by_28_then_and %r10_0, 1
1ba8: bne %r10_0, 1 -> 0x1bb4 v
1bac: %r10_0 = *(0xe40015e0)
1bb0: jmp 0x1bc8 v
1bb4: %r10_0 = *(0xe40015e0)
1bb8: %r10_1 = or %r10_1, 0x08000080
1bc0: %r10_1 = and %r10_1, 0xfbffffff
1bc8: store_word_0_100 %r10_1, MC0_DRAM_CONFIG
1bcc: store_word_0_100 0x00000080, MC0_BSB_SNOOPED_TIMER_CNTL
1bd4: store_word_0_100 0x00348084, MC0_TUNING_0
1bdc: store_word_0_100 0x0000007a, MC0_TUNING_1
1be4: store_word_0_100 0x00106514, MC0_RD_BUFFER_CNTL_0
1bec: store_word_0_100 0x00210414, MC0_RD_BUFFER_CNTL_1
1bf4: store_word_0_100 0x01283446, MC0_TIMING_CNTL_0
1bfc: store_word_0_100 0x03620991, MC0_TIMING_CNTL_1
1c04: store_word_0_100 0x0c958107, MC0_TIMING_CNTL_2
1c0c: store_word_0_100 0x00000018, MC0_WR_DATA_DLY_0
1c14: store_word %r10_0, 0xe40015e0
1c18: %r12_0 = *(0xe40015ec)
1c1c: %r10_0 = rotlw_by_24_then_and %r10_0, 0x0000000f
1c24: beq %r10_0, 3 -> 0x1c30 v
1c28: %r10_0 = *(0xe40015e0)
1c2c: jmp 0x1c4c v
1c30: %r10_0 = *(0xe40015e0)
1c34: delay -7
1c38: store_word 0x00000100, 0xe40000f0
1c40: delay -7
1c44: store_word 0, 0xe40000f0
1c48: delay -7
1c4c: store_word_0_100 0x00000030, MC0_INTERRUPT_MASK
1c54: store_word %r10_0, 0xe40015e0
1c58: %r12_0 = *(0xe40015ec)
1c5c: %r10_0 = rotlw_by_24_then_and %r10_0, 0x0000000f
1c64: beq %r10_0, 3 -> 0x1c70 v
1c68: %r10_0 = *(0xe40015e0)
1c6c: jmp 0x1c78 v
1c70: %r10_0 = *(0xe40015e0)
1c74: call 0x3f4c
1c78: store_word_0_100 0, MC0_POINTER
1c7c: store_word_0_100 0x423c0000, MC0_DRAM_CMD
1c84: store_word_0_100 0x0a280100, MC0_DRAM_CMD
1c8c: store_word_0_100 0x06200221, MC0_DRAM_CMD
1c94: call 0x0270
1c98: store_word_0_100 %r10_1, MC0_DRAM_CMD
1c9c: store_word_0_100 0x06200772, MC0_DRAM_CMD
1ca4: store_word %r10_0, 0xe40015e0
1ca8: %r12_0 = *(0xe40015ec)
1cac: %r10_0 = rotlw_by_24_then_and %r10_0, 0x0000000f
1cb4: bne %r10_0, 1 -> 0x1cc0 v
1cb8: %r10_0 = *(0xe40015e0)
1cbc: jmp 0x1cec v
1cc0: %r10_0 = *(0xe40015e0)
1cc4: store_word %r10_0, 0xe40015e0
1cc8: %r12_0 = *(0xe40015ec)
1ccc: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
1cd4: beq %r10_0, 6 -> 0x1ce0 v
1cd8: %r10_0 = *(0xe40015e0)
1cdc: jmp 0x1cec v
1ce0: %r10_0 = *(0xe40015e0)
1ce4: call 0x04f0
1ce8: store_word_0_100 %r10_1, MC0_DRAM_CMD
1cec: store_word_0_100 2, MC0_CNTL
1cf0: %r10_0 = *(MC1_CNTL)
1cf4: sync
1cf8: delay -7
1cfc: store_word_0_100 0, MC0_POINTER
1d00: store_word_0_100 0x0a280100, MC0_DRAM_CMD
1d08: store_word_0_100 0x2f240000, MC0_DRAM_CMD
1d10: store_word_0_100 0x2f240000, MC0_DRAM_CMD
1d18: store_word_0_100 0x003c0000, MC0_DRAM_CMD
1d20: store_word_0_100 2, MC0_CNTL
1d24: store_word_0_100 0x00001000, MC0_CNTL
1d2c: store_word_0_100 0x00000605, MC0_CNTL
1d34: %r10_0 = *(MC1_CNTL)
1d38: sync
1d3c: delay -7
1d40: store_word %r12_0, 4
1d44: store_word %r12_1, 0x00000008
1d48: store_word %r13_0, 0x0000000c
1d4c: store_word %r13_1, 0x00000010
1d50: call 0x3798
1d54: beq %r11_0, 0 -> 0x1d64 v
1d58: store_word 0x0011119a, 0xe4000024
1d60: call 0x109c
1d64: store_word_0_100 0, MC0_CNTL
1d68: store_word_0_100 0, MC0_POINTER
1d6c: store_word_0_100 0x00040000, MC0_DRAM_CMD
1d74: store_word_0_100 2, MC0_CNTL
1d78: %r10_0 = *(MC1_CNTL)
1d7c: sync
1d80: delay -7
1d84: %r10_0 = 0x040e3202
1d8c: %r12_0 = load_word -4
1d90: %r11_1 = and %r11_1, 0x0000000f
1d98: bne %r11_1, 0x0000000c -> 0x1db0 v
1da0: %r10_1 = 0x2000000b
1da8: %r10_0 = 0x04113202
1db0: bne %r11_1, 0x0000000d -> 0x1dc8 v
1db8: %r10_1 = 0x20007061
1dc0: %r10_0 = 0x04113202
1dc8: bne %r11_1, 0x0000000e -> 0x1de0 v
1dd0: %r10_1 = 0x20003031
1dd8: %r10_0 = 0x04123202
1de0: bne %r11_1, 0x0000000f -> 0x1df8 v
1de8: %r10_1 = 0x20007065
1df0: %r10_0 = 0x04123202
1df8: bne %r11_1, 0 -> 0x1e0c v
1dfc: %r10_1 = 0x20001019
1e04: %r10_0 = 0x04123202
1e0c: bne %r11_1, 1 -> 0x1e20 v
1e10: %r10_1 = 0x20007069
1e18: %r10_0 = 0x04133202
1e20: bne %r11_1, 2 -> 0x1e34 v
1e24: %r10_1 = 0x20003035
1e2c: %r10_0 = 0x04133202
1e34: bne %r11_1, 3 -> 0x1e48 v
1e38: %r10_1 = 0x2000706d
1e40: %r10_0 = 0x04133202
1e48: bne %r11_1, 4 -> 0x1e5c v
1e4c: %r10_1 = 0x2000000d
1e54: %r10_0 = 0x04143202
1e5c: bne %r11_1, 5 -> 0x1e70 v
1e60: %r10_1 = 0x20007071
1e68: %r10_0 = 0x04143202
1e70: bne %r11_1, 6 -> 0x1e84 v
1e74: %r10_1 = 0x20003039
1e7c: %r10_0 = 0x04153202
1e84: bne %r11_1, 7 -> 0x1e98 v
1e88: %r10_1 = 0x20007075
1e90: %r10_0 = 0x04153202
1e98: bne %r11_1, 0x00000008 -> 0x1eb0 v
1ea0: %r10_1 = 0x2000101d
1ea8: %r10_0 = 0x04153202
1eb0: bne %r11_1, 0x00000009 -> 0x1ec8 v
1eb8: %r10_1 = 0x20007079
1ec0: %r10_0 = 0x04163202
1ec8: bne %r11_1, 0x0000000a -> 0x1ee0 v
1ed0: %r10_1 = 0x2000303d
1ed8: %r10_0 = 0x04163202
1ee0: bne %r11_1, 0x0000000b -> 0x1ef8 v
1ee8: %r10_1 = 0x2000707d
1ef0: %r10_0 = 0x04163202
1ef8: store_word %r10_1, 0xe4000284
1efc: %r10_1 = or %r10_1, 0x000c0000
1f04: store_word %r10_1, 0xe4000284
1f08: %r12_0 = *(0xe4000284)
1f0c: sync
1f10: delay -7
1f14: %r10_1 = and %r10_1, 0xdff3ffff
1f1c: store_word %r10_1, 0xe4000284
1f20: call 0x3f4c
1f24: store_word %r10_0, 0xe40015e0
1f28: %r10_0 = *(0xe40015e8)
1f2c: %r10_0 = rotlw_by_30_then_and %r10_0, 1
1f30: bne %r10_0, 1 -> 0x1f3c v
1f34: %r10_0 = *(0xe40015e0)
1f38: jmp 0x1f8c v
1f3c: %r10_0 = *(0xe40015e0)
1f40: %r10_0 = or %r11_0, 1
1f44: store_word %r10_0, 0xe40015e0
1f48: %r10_0 = *(0xe40015e8)
1f4c: %r10_0 = rotlw_by_29_then_and %r10_0, 1
1f50: bne %r10_0, 0 -> 0x1f5c v
1f54: %r10_0 = *(0xe40015e0)
1f58: jmp 0x1f8c v
1f5c: %r10_0 = *(0xe40015e0)
1f60: store_word %r10_0, 0xe40015e0
1f64: %r10_0 = *(0xe40015e8)
1f68: %r10_0 = rotlw_by_28_then_and %r10_0, 1
1f6c: bne %r10_0, 1 -> 0x1f78 v
1f70: %r10_0 = *(0xe40015e0)
1f74: jmp 0x1f8c v
1f78: %r10_0 = *(0xe40015e0)
1f7c: %r10_0 = or %r11_0, 0x08000080
1f84: %r10_0 = and %r11_0, 0xfbffffff
1f8c: store_word_0_100 %r11_0, MC0_DRAM_CONFIG
1f90: store_word_0_100 0x00000080, MC0_BSB_SNOOPED_TIMER_CNTL
1f98: store_word_0_100 0x20988088, MC0_TUNING_0
1fa0: store_word_0_100 0x0000007a, MC0_TUNING_1
1fa8: store_word_0_100 1, MC0_ARBITRATION_CNTL
1fac: store_word_0_100 0x00106514, MC0_RD_BUFFER_CNTL_0
1fb4: store_word_0_100 0x00210414, MC0_RD_BUFFER_CNTL_1
1fbc: store_word_0_100 0x0128d87b, MC0_TIMING_CNTL_0
1fc4: store_word_0_100 0x03820edb, MC0_TIMING_CNTL_1
1fcc: store_word_0_100 0x0c97914b, MC0_TIMING_CNTL_2
1fd4: store_word_0_100 0x00000025, MC0_WR_DATA_DLY_0
1fdc: store_word %r10_0, 0xe40015e0
1fe0: %r12_0 = *(0xe40015ec)
1fe4: %r10_0 = rotlw_by_24_then_and %r10_0, 0x0000000f
1fec: beq %r10_0, 3 -> 0x1ff8 v
1ff0: %r10_0 = *(0xe40015e0)
1ff4: jmp 0x2014 v
1ff8: %r10_0 = *(0xe40015e0)
1ffc: delay -7
2000: store_word 0x00000100, 0xe40000f0
2008: delay -7
200c: store_word 0, 0xe40000f0
2010: delay -7
2014: store_word_0_100 0x00000030, MC0_INTERRUPT_MASK
201c: store_word_0_100 0, MC0_POINTER
2020: store_word_0_100 0x003c0000, MC0_DRAM_CMD
2028: store_word_0_100 2, MC0_CNTL
202c: %r10_0 = *(MC1_CNTL)
2030: sync
2034: delay -7
2038: store_word_0_100 0, MC0_POINTER
203c: store_word_0_100 0x0c280100, MC0_DRAM_CMD
2044: store_word_0_100 0x2f240000, MC0_DRAM_CMD
204c: call 0x0388
2050: store_word %r10_1, 0xe4000014
2054: store_word_0_100 %r10_1, MC0_DRAM_CMD
2058: %r10_1 = 0x06200712
2060: store_word %r10_1, 0xe4000010
2064: store_word_0_100 %r10_1, MC0_DRAM_CMD
2068: store_word %r10_0, 0xe40015e0
206c: %r12_0 = *(0xe40015ec)
2070: %r10_0 = rotlw_by_24_then_and %r10_0, 0x0000000f
2078: bne %r10_0, 1 -> 0x2084 v
207c: %r10_0 = *(0xe40015e0)
2080: jmp 0x20b0 v
2084: %r10_0 = *(0xe40015e0)
2088: store_word %r10_0, 0xe40015e0
208c: %r12_0 = *(0xe40015ec)
2090: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
2098: beq %r10_0, 6 -> 0x20a4 v
209c: %r10_0 = *(0xe40015e0)
20a0: jmp 0x20b0 v
20a4: %r10_0 = *(0xe40015e0)
20a8: call 0x04f0
20ac: store_word_0_100 %r10_1, MC0_DRAM_CMD
20b0: store_word_0_100 0x003c0000, MC0_DRAM_CMD
20b8: store_word_0_100 2, MC0_CNTL
20bc: store_word_0_100 0x00001000, MC0_CNTL
20c4: store_word_0_100 0x00000605, MC0_CNTL
20cc: %r10_0 = *(MC1_CNTL)
20d0: sync
20d4: delay -7
20d8: call 0x3848
20dc: op_1E 0, -7
20e0: store_word %r13_1, MC0_RD_STR_DLY_0
20e4: op_1E 0, -7
20e8: op_1E 1, -7
20ec: store_word %r13_1, MC0_RD_STR_DLY_1
20f0: op_1E 1, -7
20f4: op_1E 2, -7
20f8: store_word %r13_1, MC1_RD_STR_DLY_0
20fc: op_1E 2, -7
2100: op_1E 3, -7
2104: store_word %r13_1, MC1_RD_STR_DLY_1
2108: op_1E 3, -7
210c: store_word %r10_0, 0xe40015e0
2110: %r12_0 = *(0xe40015ec)
2114: %r10_0 = rotlw_by_24_then_and %r10_0, 0x0000000f
211c: beq %r10_0, 1 -> 0x2128 v
2120: %r10_0 = *(0xe40015e0)
2124: jmp 0x2298 v
2128: %r10_0 = *(0xe40015e0)
212c: store_word %r10_0, 0xe40015e0
2130: %r12_0 = *(0xe40015ec)
2134: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
213c: beq %r10_0, 1 -> 0x2148 v
2140: %r10_0 = *(0xe40015e0)
2144: jmp 0x21a4 v
2148: %r10_0 = *(0xe40015e0)
214c: %r10_0 = 0
2150: %r11_1 = 0
2154: %r10_0 = MC0_RD_STR_DLY_0
215c: %r10_1 = 0x0a0a0a0a
2164: call 0x0524
2168: %r10_0 = MC0_RD_STR_DLY_1
2170: %r10_1 = 0x0a0a0a0a
2178: call 0x0524
217c: %r10_0 = MC1_RD_STR_DLY_0
2184: %r10_1 = 0x0a0a0a0a
218c: call 0x0524
2190: %r10_0 = MC1_RD_STR_DLY_1
2198: %r10_1 = 0x0a0a0a0a
21a0: call 0x0524
21a4: store_word %r10_0, 0xe40015e0
21a8: %r12_0 = *(0xe40015ec)
21ac: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
21b4: beq %r10_0, 2 -> 0x21c0 v
21b8: %r10_0 = *(0xe40015e0)
21bc: jmp 0x221c v
21c0: %r10_0 = *(0xe40015e0)
21c4: %r10_0 = 0
21c8: %r11_1 = 0
21cc: %r10_0 = MC0_RD_STR_DLY_0
21d4: %r10_1 = 0x05060505
21dc: call 0x0524
21e0: %r10_0 = MC0_RD_STR_DLY_1
21e8: %r10_1 = 0x03060504
21f0: call 0x0524
21f4: %r10_0 = MC1_RD_STR_DLY_0
21fc: %r10_1 = 0x04060605
2204: call 0x0524
2208: %r10_0 = MC1_RD_STR_DLY_1
2210: %r10_1 = 0x05050605
2218: call 0x0524
221c: store_word %r10_0, 0xe40015e0
2220: %r12_0 = *(0xe40015ec)
2224: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
222c: beq %r10_0, 6 -> 0x2238 v
2230: %r10_0 = *(0xe40015e0)
2234: jmp 0x2294 v
2238: %r10_0 = *(0xe40015e0)
223c: %r10_0 = 0
2240: %r11_1 = 0
2244: %r10_0 = MC0_RD_STR_DLY_0
224c: %r10_1 = 0x10101011
2254: call 0x0524
2258: %r10_0 = MC0_RD_STR_DLY_1
2260: %r10_1 = 0x0e100f0e
2268: call 0x0524
226c: %r10_0 = MC1_RD_STR_DLY_0
2274: %r10_1 = 0x0d110f10
227c: call 0x0524
2280: %r10_0 = MC1_RD_STR_DLY_1
2288: %r10_1 = 0x0d0d100d
2290: call 0x0524
2294: jmp 0x2a58 v
2298: store_word %r10_0, 0xe40015e0
229c: %r12_0 = *(0xe40015ec)
22a0: %r10_0 = rotlw_by_24_then_and %r10_0, 0x0000000f
22a8: beq %r10_0, 2 -> 0x22b4 v
22ac: %r10_0 = *(0xe40015e0)
22b0: jmp 0x2780 v
22b4: %r10_0 = *(0xe40015e0)
22b8: store_word %r10_0, 0xe40015e0
22bc: %r12_0 = *(0xe40015ec)
22c0: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
22c8: beq %r10_0, 1 -> 0x22d4 v
22cc: %r10_0 = *(0xe40015e0)
22d0: jmp 0x2350 v
22d4: %r10_0 = *(0xe40015e0)
22d8: store_word %r10_0, 0xe40015e0
22dc: %r12_0 = *(0xe40015ec)
22e0: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
22e8: beq %r10_0, 0 -> 0x22f4 v
22ec: %r10_0 = *(0xe40015e0)
22f0: jmp 0x2350 v
22f4: %r10_0 = *(0xe40015e0)
22f8: %r10_0 = 0
22fc: %r11_1 = 0
2300: %r10_0 = MC0_RD_STR_DLY_0
2308: %r10_1 = 0x0a0a0a0a
2310: call 0x0524
2314: %r10_0 = MC0_RD_STR_DLY_1
231c: %r10_1 = 0x0a0a0a0a
2324: call 0x0524
2328: %r10_0 = MC1_RD_STR_DLY_0
2330: %r10_1 = 0x0a0a0a0a
2338: call 0x0524
233c: %r10_0 = MC1_RD_STR_DLY_1
2344: %r10_1 = 0x0a0a0a0a
234c: call 0x0524
2350: store_word %r10_0, 0xe40015e0
2354: %r12_0 = *(0xe40015ec)
2358: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
2360: beq %r10_0, 1 -> 0x236c v
2364: %r10_0 = *(0xe40015e0)
2368: jmp 0x23e8 v
236c: %r10_0 = *(0xe40015e0)
2370: store_word %r10_0, 0xe40015e0
2374: %r12_0 = *(0xe40015ec)
2378: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
2380: beq %r10_0, 4 -> 0x238c v
2384: %r10_0 = *(0xe40015e0)
2388: jmp 0x23e8 v
238c: %r10_0 = *(0xe40015e0)
2390: %r10_0 = 0
2394: %r11_1 = 0
2398: %r10_0 = MC0_RD_STR_DLY_0
23a0: %r10_1 = 0x0a0a0a0a
23a8: call 0x0524
23ac: %r10_0 = MC0_RD_STR_DLY_1
23b4: %r10_1 = 0x0a0a0a0a
23bc: call 0x0524
23c0: %r10_0 = MC1_RD_STR_DLY_0
23c8: %r10_1 = 0x0a0a0a0a
23d0: call 0x0524
23d4: %r10_0 = MC1_RD_STR_DLY_1
23dc: %r10_1 = 0x0a0a0a0a
23e4: call 0x0524
23e8: store_word %r10_0, 0xe40015e0
23ec: %r12_0 = *(0xe40015ec)
23f0: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
23f8: beq %r10_0, 1 -> 0x2404 v
23fc: %r10_0 = *(0xe40015e0)
2400: jmp 0x2484 v
2404: %r10_0 = *(0xe40015e0)
2408: store_word %r10_0, 0xe40015e0
240c: %r12_0 = *(0xe40015ec)
2410: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
2418: beq %r10_0, 0x00000009 -> 0x2428 v
2420: %r10_0 = *(0xe40015e0)
2424: jmp 0x2484 v
2428: %r10_0 = *(0xe40015e0)
242c: %r10_0 = 0
2430: %r11_1 = 0
2434: %r10_0 = MC0_RD_STR_DLY_0
243c: %r10_1 = 0x0a0a0a0a
2444: call 0x0524
2448: %r10_0 = MC0_RD_STR_DLY_1
2450: %r10_1 = 0x0a0a0a0a
2458: call 0x0524
245c: %r10_0 = MC1_RD_STR_DLY_0
2464: %r10_1 = 0x0a0a0a0a
246c: call 0x0524
2470: %r10_0 = MC1_RD_STR_DLY_1
2478: %r10_1 = 0x0a0a0a0a
2480: call 0x0524
2484: store_word %r10_0, 0xe40015e0
2488: %r12_0 = *(0xe40015ec)
248c: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
2494: beq %r10_0, 2 -> 0x24a0 v
2498: %r10_0 = *(0xe40015e0)
249c: jmp 0x251c v
24a0: %r10_0 = *(0xe40015e0)
24a4: store_word %r10_0, 0xe40015e0
24a8: %r12_0 = *(0xe40015ec)
24ac: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
24b4: beq %r10_0, 0 -> 0x24c0 v
24b8: %r10_0 = *(0xe40015e0)
24bc: jmp 0x251c v
24c0: %r10_0 = *(0xe40015e0)
24c4: %r10_0 = 0
24c8: %r11_1 = 0
24cc: %r10_0 = MC0_RD_STR_DLY_0
24d4: %r10_1 = 0x090c0907
24dc: call 0x0524
24e0: %r10_0 = MC0_RD_STR_DLY_1
24e8: %r10_1 = 0x0a0a0a09
24f0: call 0x0524
24f4: %r10_0 = MC1_RD_STR_DLY_0
24fc: %r10_1 = 0x06050505
2504: call 0x0524
2508: %r10_0 = MC1_RD_STR_DLY_1
2510: %r10_1 = 0x07050906
2518: call 0x0524
251c: store_word %r10_0, 0xe40015e0
2520: %r12_0 = *(0xe40015ec)
2524: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
252c: beq %r10_0, 2 -> 0x2538 v
2530: %r10_0 = *(0xe40015e0)
2534: jmp 0x25b4 v
2538: %r10_0 = *(0xe40015e0)
253c: store_word %r10_0, 0xe40015e0
2540: %r12_0 = *(0xe40015ec)
2544: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
254c: beq %r10_0, 3 -> 0x2558 v
2550: %r10_0 = *(0xe40015e0)
2554: jmp 0x25b4 v
2558: %r10_0 = *(0xe40015e0)
255c: %r10_0 = 0
2560: %r11_1 = 0
2564: %r10_0 = MC0_RD_STR_DLY_0
256c: %r10_1 = 0x06090605
2574: call 0x0524
2578: %r10_0 = MC0_RD_STR_DLY_1
2580: %r10_1 = 0x08050a08
2588: call 0x0524
258c: %r10_0 = MC1_RD_STR_DLY_0
2594: %r10_1 = 0x03040303
259c: call 0x0524
25a0: %r10_0 = MC1_RD_STR_DLY_1
25a8: %r10_1 = 0x05050706
25b0: call 0x0524
25b4: store_word %r10_0, 0xe40015e0
25b8: %r12_0 = *(0xe40015ec)
25bc: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
25c4: beq %r10_0, 2 -> 0x25d0 v
25c8: %r10_0 = *(0xe40015e0)
25cc: jmp 0x264c v
25d0: %r10_0 = *(0xe40015e0)
25d4: store_word %r10_0, 0xe40015e0
25d8: %r12_0 = *(0xe40015ec)
25dc: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
25e4: beq %r10_0, 4 -> 0x25f0 v
25e8: %r10_0 = *(0xe40015e0)
25ec: jmp 0x264c v
25f0: %r10_0 = *(0xe40015e0)
25f4: %r10_0 = 0
25f8: %r11_1 = 0
25fc: %r10_0 = MC0_RD_STR_DLY_0
2604: %r10_1 = 0x070a0706
260c: call 0x0524
2610: %r10_0 = MC0_RD_STR_DLY_1
2618: %r10_1 = 0x09060b09
2620: call 0x0524
2624: %r10_0 = MC1_RD_STR_DLY_0
262c: %r10_1 = 0x04050404
2634: call 0x0524
2638: %r10_0 = MC1_RD_STR_DLY_1
2640: %r10_1 = 0x06060807
2648: call 0x0524
264c: store_word %r10_0, 0xe40015e0
2650: %r12_0 = *(0xe40015ec)
2654: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
265c: beq %r10_0, 6 -> 0x2668 v
2660: %r10_0 = *(0xe40015e0)
2664: jmp 0x26e4 v
2668: %r10_0 = *(0xe40015e0)
266c: store_word %r10_0, 0xe40015e0
2670: %r12_0 = *(0xe40015ec)
2674: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
267c: beq %r10_0, 1 -> 0x2688 v
2680: %r10_0 = *(0xe40015e0)
2684: jmp 0x26e4 v
2688: %r10_0 = *(0xe40015e0)
268c: %r10_0 = 0
2690: %r11_1 = 0
2694: %r10_0 = MC0_RD_STR_DLY_0
269c: %r10_1 = 0x110f0f0f
26a4: call 0x0524
26a8: %r10_0 = MC0_RD_STR_DLY_1
26b0: %r10_1 = 0x0f100f0e
26b8: call 0x0524
26bc: %r10_0 = MC1_RD_STR_DLY_0
26c4: %r10_1 = 0x0a0b0d09
26cc: call 0x0524
26d0: %r10_0 = MC1_RD_STR_DLY_1
26d8: %r10_1 = 0x0f0d0d0d
26e0: call 0x0524
26e4: store_word %r10_0, 0xe40015e0
26e8: %r12_0 = *(0xe40015ec)
26ec: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
26f4: beq %r10_0, 6 -> 0x2700 v
26f8: %r10_0 = *(0xe40015e0)
26fc: jmp 0x277c v
2700: %r10_0 = *(0xe40015e0)
2704: store_word %r10_0, 0xe40015e0
2708: %r12_0 = *(0xe40015ec)
270c: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
2714: beq %r10_0, 2 -> 0x2720 v
2718: %r10_0 = *(0xe40015e0)
271c: jmp 0x277c v
2720: %r10_0 = *(0xe40015e0)
2724: %r10_0 = 0
2728: %r11_1 = 0
272c: %r10_0 = MC0_RD_STR_DLY_0
2734: %r10_1 = 0x110f0f0f
273c: call 0x0524
2740: %r10_0 = MC0_RD_STR_DLY_1
2748: %r10_1 = 0x0f100f0e
2750: call 0x0524
2754: %r10_0 = MC1_RD_STR_DLY_0
275c: %r10_1 = 0x0a0b0d09
2764: call 0x0524
2768: %r10_0 = MC1_RD_STR_DLY_1
2770: %r10_1 = 0x0f0d0d0d
2778: call 0x0524
277c: jmp 0x2a58 v
2780: store_word %r10_0, 0xe40015e0
2784: %r12_0 = *(0xe40015ec)
2788: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
2790: beq %r10_0, 1 -> 0x279c v
2794: %r10_0 = *(0xe40015e0)
2798: jmp 0x27f8 v
279c: %r10_0 = *(0xe40015e0)
27a0: %r10_0 = 0
27a4: %r11_1 = 0
27a8: %r10_0 = MC0_RD_STR_DLY_0
27b0: %r10_1 = 0x0a0a0a0a
27b8: call 0x0524
27bc: %r10_0 = MC0_RD_STR_DLY_1
27c4: %r10_1 = 0x0a0a0a0a
27cc: call 0x0524
27d0: %r10_0 = MC1_RD_STR_DLY_0
27d8: %r10_1 = 0x0a0a0a0a
27e0: call 0x0524
27e4: %r10_0 = MC1_RD_STR_DLY_1
27ec: %r10_1 = 0x0a0a0a0a
27f4: call 0x0524
27f8: store_word %r10_0, 0xe40015e0
27fc: %r12_0 = *(0xe40015ec)
2800: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
2808: beq %r10_0, 2 -> 0x2814 v
280c: %r10_0 = *(0xe40015e0)
2810: jmp 0x2890 v
2814: %r10_0 = *(0xe40015e0)
2818: store_word %r10_0, 0xe40015e0
281c: %r12_0 = *(0xe40015ec)
2820: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
2828: beq %r10_0, 3 -> 0x2834 v
282c: %r10_0 = *(0xe40015e0)
2830: jmp 0x2890 v
2834: %r10_0 = *(0xe40015e0)
2838: %r10_0 = 0
283c: %r11_1 = 0
2840: %r10_0 = MC0_RD_STR_DLY_0
2848: %r10_1 = 0x0b0b0909
2850: call 0x0524
2854: %r10_0 = MC0_RD_STR_DLY_1
285c: %r10_1 = 0x090a0a09
2864: call 0x0524
2868: %r10_0 = MC1_RD_STR_DLY_0
2870: %r10_1 = 0x0c0b0b09
2878: call 0x0524
287c: %r10_0 = MC1_RD_STR_DLY_1
2884: %r10_1 = 0x0a0e0c0f
288c: call 0x0524
2890: store_word %r10_0, 0xe40015e0
2894: %r12_0 = *(0xe40015ec)
2898: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
28a0: beq %r10_0, 2 -> 0x28ac v
28a4: %r10_0 = *(0xe40015e0)
28a8: jmp 0x2928 v
28ac: %r10_0 = *(0xe40015e0)
28b0: store_word %r10_0, 0xe40015e0
28b4: %r12_0 = *(0xe40015ec)
28b8: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
28c0: beq %r10_0, 4 -> 0x28cc v
28c4: %r10_0 = *(0xe40015e0)
28c8: jmp 0x2928 v
28cc: %r10_0 = *(0xe40015e0)
28d0: %r10_0 = 0
28d4: %r11_1 = 0
28d8: %r10_0 = MC0_RD_STR_DLY_0
28e0: %r10_1 = 0x0a0a0a0a
28e8: call 0x0524
28ec: %r10_0 = MC0_RD_STR_DLY_1
28f4: %r10_1 = 0x0a0a0a0a
28fc: call 0x0524
2900: %r10_0 = MC1_RD_STR_DLY_0
2908: %r10_1 = 0x0a0a0a0a
2910: call 0x0524
2914: %r10_0 = MC1_RD_STR_DLY_1
291c: %r10_1 = 0x0a0a0a0a
2924: call 0x0524
2928: store_word %r10_0, 0xe40015e0
292c: %r12_0 = *(0xe40015ec)
2930: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
2938: beq %r10_0, 6 -> 0x2944 v
293c: %r10_0 = *(0xe40015e0)
2940: jmp 0x29c0 v
2944: %r10_0 = *(0xe40015e0)
2948: store_word %r10_0, 0xe40015e0
294c: %r12_0 = *(0xe40015ec)
2950: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
2958: beq %r10_0, 1 -> 0x2964 v
295c: %r10_0 = *(0xe40015e0)
2960: jmp 0x29c0 v
2964: %r10_0 = *(0xe40015e0)
2968: %r10_0 = 0
296c: %r11_1 = 0
2970: %r10_0 = MC0_RD_STR_DLY_0
2978: %r10_1 = 0x0d0d0d0d
2980: call 0x0524
2984: %r10_0 = MC0_RD_STR_DLY_1
298c: %r10_1 = 0x0d0d0d0d
2994: call 0x0524
2998: %r10_0 = MC1_RD_STR_DLY_0
29a0: %r10_1 = 0x0d0d0d0d
29a8: call 0x0524
29ac: %r10_0 = MC1_RD_STR_DLY_1
29b4: %r10_1 = 0x0e0d0d0d
29bc: call 0x0524
29c0: store_word %r10_0, 0xe40015e0
29c4: %r12_0 = *(0xe40015ec)
29c8: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
29d0: beq %r10_0, 6 -> 0x29dc v
29d4: %r10_0 = *(0xe40015e0)
29d8: jmp 0x2a58 v
29dc: %r10_0 = *(0xe40015e0)
29e0: store_word %r10_0, 0xe40015e0
29e4: %r12_0 = *(0xe40015ec)
29e8: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
29f0: beq %r10_0, 2 -> 0x29fc v
29f4: %r10_0 = *(0xe40015e0)
29f8: jmp 0x2a58 v
29fc: %r10_0 = *(0xe40015e0)
2a00: %r10_0 = 0
2a04: %r11_1 = 0
2a08: %r10_0 = MC0_RD_STR_DLY_0
2a10: %r10_1 = 0x0f0f0f0f
2a18: call 0x0524
2a1c: %r10_0 = MC0_RD_STR_DLY_1
2a24: %r10_1 = 0x0f0f0f0f
2a2c: call 0x0524
2a30: %r10_0 = MC1_RD_STR_DLY_0
2a38: %r10_1 = 0x0f0f0f0f
2a40: call 0x0524
2a44: %r10_0 = MC1_RD_STR_DLY_1
2a4c: %r10_1 = 0x0e0f0f0f
2a54: call 0x0524
2a58: %r10_0 = *(MC1_RD_STR_DLY_1)
2a5c: sync
2a60: delay -7
2a64: store_word_0_100 0x00001605, MC0_CNTL
2a6c: store_word_0_100 0x00000605, MC0_CNTL
2a74: store_word 0, 0xe4000020
2a78: %r11_1 = 0
2a7c: store_word %r10_0, 0xe40015e0
2a80: %r12_0 = *(0xe40015ec)
2a84: %r10_0 = rotlw_by_24_then_and %r10_0, 0x0000000f
2a8c: beq %r10_0, 3 -> 0x2a98 v
2a90: %r10_0 = *(0xe40015e0)
2a94: jmp 0x2aa0 v
2a98: %r10_0 = *(0xe40015e0)
2a9c: %r11_1 = 1
2aa0: store_word %r11_1, 0xe4000028
2aa4: %r11_1 = and %r11_1, 0x0000000f
2aac: bne %r11_1, 0 -> 0x2ac4 v
2ab0: call 0x0d18
2ab4: store_word %r11_1, 0xe4000028
2ab8: %r10_0 = rotlw_by_28_then_and %r11_1, 7
2abc: call 0x0650
2ac0: call 0x0ba0
2ac4: call 0x3bb4
2ac8: op_1E 0, -7
2acc: store_word %r13_1, MC0_WR_STR_DLL_0
2ad0: op_1E 0, -7
2ad4: op_1E 1, -7
2ad8: store_word %r13_1, MC0_WR_STR_DLL_1
2adc: op_1E 1, -7
2ae0: op_1E 2, -7
2ae4: store_word %r13_1, MC1_WR_STR_DLL_0
2ae8: op_1E 2, -7
2aec: op_1E 3, -7
2af0: store_word %r13_1, MC1_WR_STR_DLL_1
2af4: op_1E 3, -7
2af8: store_word %r10_0, 0xe40015e0
2afc: %r12_0 = *(0xe40015ec)
2b00: %r10_0 = rotlw_by_24_then_and %r10_0, 0x0000000f
2b08: beq %r10_0, 1 -> 0x2b14 v
2b0c: %r10_0 = *(0xe40015e0)
2b10: jmp 0x2c74 v
2b14: %r10_0 = *(0xe40015e0)
2b18: store_word %r10_0, 0xe40015e0
2b1c: %r12_0 = *(0xe40015ec)
2b20: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
2b28: beq %r10_0, 1 -> 0x2b34 v
2b2c: %r10_0 = *(0xe40015e0)
2b30: jmp 0x2b80 v
2b34: %r10_0 = *(0xe40015e0)
2b38: %r10_0 = 0
2b3c: %r11_1 = 1
2b40: %r10_0 = MC0_WR_STR_DLL_0
2b48: %r10_1 = 0
2b4c: call 0x0524
2b50: %r10_0 = MC0_WR_STR_DLL_1
2b58: %r10_1 = 0
2b5c: call 0x0524
2b60: %r10_0 = MC1_WR_STR_DLL_0
2b68: %r10_1 = 0
2b6c: call 0x0524
2b70: %r10_0 = MC1_WR_STR_DLL_1
2b78: %r10_1 = 0
2b7c: call 0x0524
2b80: store_word %r10_0, 0xe40015e0
2b84: %r12_0 = *(0xe40015ec)
2b88: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
2b90: beq %r10_0, 2 -> 0x2b9c v
2b94: %r10_0 = *(0xe40015e0)
2b98: jmp 0x2bf8 v
2b9c: %r10_0 = *(0xe40015e0)
2ba0: %r10_0 = 0
2ba4: %r11_1 = 1
2ba8: %r10_0 = MC0_WR_STR_DLL_0
2bb0: %r10_1 = 0x01ff0301
2bb8: call 0x0524
2bbc: %r10_0 = MC0_WR_STR_DLL_1
2bc4: %r10_1 = 0x01000101
2bcc: call 0x0524
2bd0: %r10_0 = MC1_WR_STR_DLL_0
2bd8: %r10_1 = 0x01020201
2be0: call 0x0524
2be4: %r10_0 = MC1_WR_STR_DLL_1
2bec: %r10_1 = 0x01010101
2bf4: call 0x0524
2bf8: store_word %r10_0, 0xe40015e0
2bfc: %r12_0 = *(0xe40015ec)
2c00: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
2c08: beq %r10_0, 6 -> 0x2c14 v
2c0c: %r10_0 = *(0xe40015e0)
2c10: jmp 0x2c70 v
2c14: %r10_0 = *(0xe40015e0)
2c18: %r10_0 = 0
2c1c: %r11_1 = 1
2c20: %r10_0 = MC0_WR_STR_DLL_0
2c28: %r10_1 = 0xfafcfefe
2c30: call 0x0524
2c34: %r10_0 = MC0_WR_STR_DLL_1
2c3c: %r10_1 = 0xfdfefdfc
2c44: call 0x0524
2c48: %r10_0 = MC1_WR_STR_DLL_0
2c50: %r10_1 = 0xfdfdfe00
2c58: call 0x0524
2c5c: %r10_0 = MC1_WR_STR_DLL_1
2c64: %r10_1 = 0xfffdfefd
2c6c: call 0x0524
2c70: jmp 0x3404 v
2c74: store_word %r10_0, 0xe40015e0
2c78: %r12_0 = *(0xe40015ec)
2c7c: %r10_0 = rotlw_by_24_then_and %r10_0, 0x0000000f
2c84: beq %r10_0, 2 -> 0x2c90 v
2c88: %r10_0 = *(0xe40015e0)
2c8c: jmp 0x313c v
2c90: %r10_0 = *(0xe40015e0)
2c94: store_word %r10_0, 0xe40015e0
2c98: %r12_0 = *(0xe40015ec)
2c9c: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
2ca4: beq %r10_0, 1 -> 0x2cb0 v
2ca8: %r10_0 = *(0xe40015e0)
2cac: jmp 0x2d20 v
2cb0: %r10_0 = *(0xe40015e0)
2cb4: store_word %r10_0, 0xe40015e0
2cb8: %r12_0 = *(0xe40015ec)
2cbc: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
2cc4: beq %r10_0, 0 -> 0x2cd0 v
2cc8: %r10_0 = *(0xe40015e0)
2ccc: jmp 0x2d20 v
2cd0: %r10_0 = *(0xe40015e0)
2cd4: %r10_0 = 0
2cd8: %r11_1 = 1
2cdc: %r10_0 = MC0_WR_STR_DLL_0
2ce4: %r10_1 = 2
2ce8: call 0x0524
2cec: %r10_0 = MC0_WR_STR_DLL_1
2cf4: %r10_1 = 0
2cf8: call 0x0524
2cfc: %r10_0 = MC1_WR_STR_DLL_0
2d04: %r10_1 = 0
2d08: call 0x0524
2d0c: %r10_0 = MC1_WR_STR_DLL_1
2d14: %r10_1 = 0x0200ff00
2d1c: call 0x0524
2d20: store_word %r10_0, 0xe40015e0
2d24: %r12_0 = *(0xe40015ec)
2d28: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
2d30: beq %r10_0, 1 -> 0x2d3c v
2d34: %r10_0 = *(0xe40015e0)
2d38: jmp 0x2db0 v
2d3c: %r10_0 = *(0xe40015e0)
2d40: store_word %r10_0, 0xe40015e0
2d44: %r12_0 = *(0xe40015ec)
2d48: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
2d50: beq %r10_0, 4 -> 0x2d5c v
2d54: %r10_0 = *(0xe40015e0)
2d58: jmp 0x2db0 v
2d5c: %r10_0 = *(0xe40015e0)
2d60: %r10_0 = 0
2d64: %r11_1 = 1
2d68: %r10_0 = MC0_WR_STR_DLL_0
2d70: %r10_1 = 0
2d74: call 0x0524
2d78: %r10_0 = MC0_WR_STR_DLL_1
2d80: %r10_1 = 0
2d84: call 0x0524
2d88: %r10_0 = MC1_WR_STR_DLL_0
2d90: %r10_1 = 0xfdfe00fe
2d98: call 0x0524
2d9c: %r10_0 = MC1_WR_STR_DLL_1
2da4: %r10_1 = 0xff00fffe
2dac: call 0x0524
2db0: store_word %r10_0, 0xe40015e0
2db4: %r12_0 = *(0xe40015ec)
2db8: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
2dc0: beq %r10_0, 1 -> 0x2dcc v
2dc4: %r10_0 = *(0xe40015e0)
2dc8: jmp 0x2e44 v
2dcc: %r10_0 = *(0xe40015e0)
2dd0: store_word %r10_0, 0xe40015e0
2dd4: %r12_0 = *(0xe40015ec)
2dd8: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
2de0: beq %r10_0, 0x00000009 -> 0x2df0 v
2de8: %r10_0 = *(0xe40015e0)
2dec: jmp 0x2e44 v
2df0: %r10_0 = *(0xe40015e0)
2df4: %r10_0 = 0
2df8: %r11_1 = 1
2dfc: %r10_0 = MC0_WR_STR_DLL_0
2e04: %r10_1 = 0
2e08: call 0x0524
2e0c: %r10_0 = MC0_WR_STR_DLL_1
2e14: %r10_1 = 0
2e18: call 0x0524
2e1c: %r10_0 = MC1_WR_STR_DLL_0
2e24: %r10_1 = 0xfdfe00fe
2e2c: call 0x0524
2e30: %r10_0 = MC1_WR_STR_DLL_1
2e38: %r10_1 = 0xff00fffe
2e40: call 0x0524
2e44: store_word %r10_0, 0xe40015e0
2e48: %r12_0 = *(0xe40015ec)
2e4c: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
2e54: beq %r10_0, 2 -> 0x2e60 v
2e58: %r10_0 = *(0xe40015e0)
2e5c: jmp 0x2edc v
2e60: %r10_0 = *(0xe40015e0)
2e64: store_word %r10_0, 0xe40015e0
2e68: %r12_0 = *(0xe40015ec)
2e6c: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
2e74: beq %r10_0, 0 -> 0x2e80 v
2e78: %r10_0 = *(0xe40015e0)
2e7c: jmp 0x2edc v
2e80: %r10_0 = *(0xe40015e0)
2e84: %r10_0 = 0
2e88: %r11_1 = 1
2e8c: %r10_0 = MC0_WR_STR_DLL_0
2e94: %r10_1 = 0x00ff0202
2e9c: call 0x0524
2ea0: %r10_0 = MC0_WR_STR_DLL_1
2ea8: %r10_1 = 0x01000100
2eb0: call 0x0524
2eb4: %r10_0 = MC1_WR_STR_DLL_0
2ebc: %r10_1 = 0xfeff00ff
2ec4: call 0x0524
2ec8: %r10_0 = MC1_WR_STR_DLL_1
2ed0: %r10_1 = 0x0200ff00
2ed8: call 0x0524
2edc: store_word %r10_0, 0xe40015e0
2ee0: %r12_0 = *(0xe40015ec)
2ee4: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
2eec: beq %r10_0, 2 -> 0x2ef8 v
2ef0: %r10_0 = *(0xe40015e0)
2ef4: jmp 0x2f74 v
2ef8: %r10_0 = *(0xe40015e0)
2efc: store_word %r10_0, 0xe40015e0
2f00: %r12_0 = *(0xe40015ec)
2f04: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
2f0c: beq %r10_0, 3 -> 0x2f18 v
2f10: %r10_0 = *(0xe40015e0)
2f14: jmp 0x2f74 v
2f18: %r10_0 = *(0xe40015e0)
2f1c: %r10_0 = 0
2f20: %r11_1 = 1
2f24: %r10_0 = MC0_WR_STR_DLL_0
2f2c: %r10_1 = 0xfe030202
2f34: call 0x0524
2f38: %r10_0 = MC0_WR_STR_DLL_1
2f40: %r10_1 = 0x01000100
2f48: call 0x0524
2f4c: %r10_0 = MC1_WR_STR_DLL_0
2f54: %r10_1 = 0xfdff0000
2f5c: call 0x0524
2f60: %r10_0 = MC1_WR_STR_DLL_1
2f68: %r10_1 = 0x00ffffff
2f70: call 0x0524
2f74: store_word %r10_0, 0xe40015e0
2f78: %r12_0 = *(0xe40015ec)
2f7c: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
2f84: beq %r10_0, 2 -> 0x2f90 v
2f88: %r10_0 = *(0xe40015e0)
2f8c: jmp 0x3008 v
2f90: %r10_0 = *(0xe40015e0)
2f94: store_word %r10_0, 0xe40015e0
2f98: %r12_0 = *(0xe40015ec)
2f9c: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
2fa4: beq %r10_0, 4 -> 0x2fb0 v
2fa8: %r10_0 = *(0xe40015e0)
2fac: jmp 0x3008 v
2fb0: %r10_0 = *(0xe40015e0)
2fb4: %r10_0 = 0
2fb8: %r11_1 = 1
2fbc: %r10_0 = MC0_WR_STR_DLL_0
2fc4: %r10_1 = 0x00010000
2fcc: call 0x0524
2fd0: %r10_0 = MC0_WR_STR_DLL_1
2fd8: %r10_1 = 0
2fdc: call 0x0524
2fe0: %r10_0 = MC1_WR_STR_DLL_0
2fe8: %r10_1 = 0xfdfffefe
2ff0: call 0x0524
2ff4: %r10_0 = MC1_WR_STR_DLL_1
2ffc: %r10_1 = 0x00fffeff
3004: call 0x0524
3008: store_word %r10_0, 0xe40015e0
300c: %r12_0 = *(0xe40015ec)
3010: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
3018: beq %r10_0, 6 -> 0x3024 v
301c: %r10_0 = *(0xe40015e0)
3020: jmp 0x30a0 v
3024: %r10_0 = *(0xe40015e0)
3028: store_word %r10_0, 0xe40015e0
302c: %r12_0 = *(0xe40015ec)
3030: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
3038: beq %r10_0, 1 -> 0x3044 v
303c: %r10_0 = *(0xe40015e0)
3040: jmp 0x30a0 v
3044: %r10_0 = *(0xe40015e0)
3048: %r10_0 = 0
304c: %r11_1 = 1
3050: %r10_0 = MC0_WR_STR_DLL_0
3058: %r10_1 = 0xfcfafefc
3060: call 0x0524
3064: %r10_0 = MC0_WR_STR_DLL_1
306c: %r10_1 = 0xfbfcf8f8
3074: call 0x0524
3078: %r10_0 = MC1_WR_STR_DLL_0
3080: %r10_1 = 0xfcf9fbfc
3088: call 0x0524
308c: %r10_0 = MC1_WR_STR_DLL_1
3094: %r10_1 = 0xfcfbfafb
309c: call 0x0524
30a0: store_word %r10_0, 0xe40015e0
30a4: %r12_0 = *(0xe40015ec)
30a8: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
30b0: beq %r10_0, 6 -> 0x30bc v
30b4: %r10_0 = *(0xe40015e0)
30b8: jmp 0x3138 v
30bc: %r10_0 = *(0xe40015e0)
30c0: store_word %r10_0, 0xe40015e0
30c4: %r12_0 = *(0xe40015ec)
30c8: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
30d0: beq %r10_0, 2 -> 0x30dc v
30d4: %r10_0 = *(0xe40015e0)
30d8: jmp 0x3138 v
30dc: %r10_0 = *(0xe40015e0)
30e0: %r10_0 = 0
30e4: %r11_1 = 1
30e8: %r10_0 = MC0_WR_STR_DLL_0
30f0: %r10_1 = 0xfcfafefc
30f8: call 0x0524
30fc: %r10_0 = MC0_WR_STR_DLL_1
3104: %r10_1 = 0xfbfcf8f8
310c: call 0x0524
3110: %r10_0 = MC1_WR_STR_DLL_0
3118: %r10_1 = 0xfcf9fbfc
3120: call 0x0524
3124: %r10_0 = MC1_WR_STR_DLL_1
312c: %r10_1 = 0xfcfbfafb
3134: call 0x0524
3138: jmp 0x3404 v
313c: store_word %r10_0, 0xe40015e0
3140: %r12_0 = *(0xe40015ec)
3144: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
314c: beq %r10_0, 1 -> 0x3158 v
3150: %r10_0 = *(0xe40015e0)
3154: jmp 0x31b4 v
3158: %r10_0 = *(0xe40015e0)
315c: %r10_0 = 0
3160: %r11_1 = 1
3164: %r10_0 = MC0_WR_STR_DLL_0
316c: %r10_1 = 0x00000303
3174: call 0x0524
3178: %r10_0 = MC0_WR_STR_DLL_1
3180: %r10_1 = 0x03000000
3188: call 0x0524
318c: %r10_0 = MC1_WR_STR_DLL_0
3194: %r10_1 = 0x03010304
319c: call 0x0524
31a0: %r10_0 = MC1_WR_STR_DLL_1
31a8: %r10_1 = 0x04030003
31b0: call 0x0524
31b4: store_word %r10_0, 0xe40015e0
31b8: %r12_0 = *(0xe40015ec)
31bc: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
31c4: beq %r10_0, 2 -> 0x31d0 v
31c8: %r10_0 = *(0xe40015e0)
31cc: jmp 0x324c v
31d0: %r10_0 = *(0xe40015e0)
31d4: store_word %r10_0, 0xe40015e0
31d8: %r12_0 = *(0xe40015ec)
31dc: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
31e4: beq %r10_0, 3 -> 0x31f0 v
31e8: %r10_0 = *(0xe40015e0)
31ec: jmp 0x324c v
31f0: %r10_0 = *(0xe40015e0)
31f4: %r10_0 = 0
31f8: %r11_1 = 1
31fc: %r10_0 = MC0_WR_STR_DLL_0
3204: %r10_1 = 0xfe030202
320c: call 0x0524
3210: %r10_0 = MC0_WR_STR_DLL_1
3218: %r10_1 = 0x01000100
3220: call 0x0524
3224: %r10_0 = MC1_WR_STR_DLL_0
322c: %r10_1 = 0xfdff0000
3234: call 0x0524
3238: %r10_0 = MC1_WR_STR_DLL_1
3240: %r10_1 = 0x00ffffff
3248: call 0x0524
324c: store_word %r10_0, 0xe40015e0
3250: %r12_0 = *(0xe40015ec)
3254: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
325c: beq %r10_0, 2 -> 0x3268 v
3260: %r10_0 = *(0xe40015e0)
3264: jmp 0x32e4 v
3268: %r10_0 = *(0xe40015e0)
326c: store_word %r10_0, 0xe40015e0
3270: %r12_0 = *(0xe40015ec)
3274: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
327c: beq %r10_0, 4 -> 0x3288 v
3280: %r10_0 = *(0xe40015e0)
3284: jmp 0x32e4 v
3288: %r10_0 = *(0xe40015e0)
328c: %r10_0 = 0
3290: %r11_1 = 1
3294: %r10_0 = MC0_WR_STR_DLL_0
329c: %r10_1 = 0xfe030202
32a4: call 0x0524
32a8: %r10_0 = MC0_WR_STR_DLL_1
32b0: %r10_1 = 0x01000100
32b8: call 0x0524
32bc: %r10_0 = MC1_WR_STR_DLL_0
32c4: %r10_1 = 0xfdff0000
32cc: call 0x0524
32d0: %r10_0 = MC1_WR_STR_DLL_1
32d8: %r10_1 = 0x00ffffff
32e0: call 0x0524
32e4: store_word %r10_0, 0xe40015e0
32e8: %r12_0 = *(0xe40015ec)
32ec: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
32f4: beq %r10_0, 6 -> 0x3300 v
32f8: %r10_0 = *(0xe40015e0)
32fc: jmp 0x337c v
3300: %r10_0 = *(0xe40015e0)
3304: store_word %r10_0, 0xe40015e0
3308: %r12_0 = *(0xe40015ec)
330c: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
3314: beq %r10_0, 1 -> 0x3320 v
3318: %r10_0 = *(0xe40015e0)
331c: jmp 0x337c v
3320: %r10_0 = *(0xe40015e0)
3324: %r10_0 = 0
3328: %r11_1 = 1
332c: %r10_0 = MC0_WR_STR_DLL_0
3334: %r10_1 = 0xfcfafefc
333c: call 0x0524
3340: %r10_0 = MC0_WR_STR_DLL_1
3348: %r10_1 = 0xfbfcf8f8
3350: call 0x0524
3354: %r10_0 = MC1_WR_STR_DLL_0
335c: %r10_1 = 0xfcf9fbfc
3364: call 0x0524
3368: %r10_0 = MC1_WR_STR_DLL_1
3370: %r10_1 = 0xfcfbfafb
3378: call 0x0524
337c: store_word %r10_0, 0xe40015e0
3380: %r12_0 = *(0xe40015ec)
3384: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
338c: beq %r10_0, 6 -> 0x3398 v
3390: %r10_0 = *(0xe40015e0)
3394: jmp 0x3404 v
3398: %r10_0 = *(0xe40015e0)
339c: store_word %r10_0, 0xe40015e0
33a0: %r12_0 = *(0xe40015ec)
33a4: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
33ac: beq %r10_0, 2 -> 0x33b8 v
33b0: %r10_0 = *(0xe40015e0)
33b4: jmp 0x3404 v
33b8: %r10_0 = *(0xe40015e0)
33bc: %r10_0 = 0
33c0: %r11_1 = 1
33c4: %r10_0 = MC0_WR_STR_DLL_0
33cc: %r10_1 = 0
33d0: call 0x0524
33d4: %r10_0 = MC0_WR_STR_DLL_1
33dc: %r10_1 = 0
33e0: call 0x0524
33e4: %r10_0 = MC1_WR_STR_DLL_0
33ec: %r10_1 = 0
33f0: call 0x0524
33f4: %r10_0 = MC1_WR_STR_DLL_1
33fc: %r10_1 = 0
3400: call 0x0524
3404: %r12_0 = *(MC1_WR_STR_DLL_1)
3408: sync
340c: delay -7
3410: %r10_0 = load_word -4
3414: %r10_0 = and %r11_1, 0x0000000f
341c: bne %r11_0, 0 -> 0x34e4 v
3420: %r12_0 = load_word -4
3424: %r10_0 = load_word -5
3428: %r10_0 = and %r11_0, 0x0000ffff
3430: bgt? %r11_1, %r11_0 -> 0x3448 v
3434: %r10_0 = load_word -5
3438: %r10_0 = rotlw_by_12_then_and %r11_0, 0x00070000
3440: %r10_0 = or %r11_1, %r11_0
3444: store_word %r11_0, 0xe4000020
3448: %r10_0 = load_word -4
344c: %r11_1 = add %r11_1, 0x00000010
3454: %r10_0 = rotlw_by_28_then_and %r11_1, 7
3458: ble %r11_0, 4 -> 0x2ab0 ^
345c: %r10_0 = load_word -5
3460: %r10_0 = rotlw_by_16_then_and %r11_0, 7
3464: store_word %r10_0, 0xe40015e0
3468: %r12_0 = *(0xe40015ec)
346c: %r10_0 = rotlw_by_24_then_and %r10_0, 0x0000000f
3474: beq %r10_0, 1 -> 0x3480 v
3478: %r10_0 = *(0xe40015e0)
347c: jmp 0x34ac v
3480: %r10_0 = *(0xe40015e0)
3484: store_word %r10_0, 0xe40015e0
3488: %r12_0 = *(0xe40015ec)
348c: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
3494: beq %r10_0, 2 -> 0x34a0 v
3498: %r10_0 = *(0xe40015e0)
349c: jmp 0x34a8 v
34a0: %r10_0 = *(0xe40015e0)
34a4: %r10_0 = 1
34a8: jmp 0x34dc v
34ac: store_word %r10_0, 0xe40015e0
34b0: %r12_0 = *(0xe40015ec)
34b4: %r10_0 = rotlw_by_24_then_and %r10_0, 0x0000000f
34bc: beq %r10_0, 2 -> 0x34c8 v
34c0: %r10_0 = *(0xe40015e0)
34c4: jmp 0x34d0 v
34c8: %r10_0 = *(0xe40015e0)
34cc: jmp 0x34dc v
34d0: delay -7
34d8: jmp 0x34d0 ^
34dc: call 0x0650
34e0: call 0x0ba0
34e4: %r10_0 = load_word -4
34e8: %r11_1 = add %r11_1, 1
34ec: %r10_0 = and %r11_1, 0x0000000f
34f4: ble %r11_0, 2 -> 0x2aa0 ^
34f8: call 0x41a4
34fc: store_word_0_100 0, MC0_CNTL
3500: store_word_0_100 0, MC0_POINTER
3504: %r10_0 = load_word -6
3508: store_word_0_100 %r10_1, MC0_DRAM_CMD
350c: store_word_0_100 0x003c0000, MC0_DRAM_CMD
3514: store_word_0_100 2, MC0_CNTL
3518: store_word %r10_0, 0xe40015e0
351c: %r12_0 = *(0xe40015ec)
3520: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
3528: beq %r10_0, 6 -> 0x3534 v
352c: %r10_0 = *(0xe40015e0)
3530: jmp 0x361c v
3534: %r10_0 = *(0xe40015e0)
3538: store_word %r10_0, 0xe40015e0
353c: %r12_0 = *(0xe40015ec)
3540: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
3548: beq %r10_0, 1 -> 0x3554 v
354c: %r10_0 = *(0xe40015e0)
3550: jmp 0x361c v
3554: %r10_0 = *(0xe40015e0)
3558: store_word_0_100 0, MC0_POINTER
355c: store_word_0_100 0x062003da, MC0_DRAM_CMD
3564: store_word_0_100 0x062006da, MC0_DRAM_CMD
356c: store_word_0_100 0x062001da, MC0_DRAM_CMD
3574: store_word_0_100 0x062003e2, MC0_DRAM_CMD
357c: store_word_0_100 0x062006e2, MC0_DRAM_CMD
3584: store_word_0_100 0x062001e2, MC0_DRAM_CMD
358c: store_word_0_100 0x06200712, MC0_DRAM_CMD
3594: store_word_0_100 2, MC0_CNTL
3598: sync
359c: delay -7
35a0: store_word_0_100 0, MC0_POINTER
35a4: store_word_0_100 0x062003f6, MC0_DRAM_CMD
35ac: store_word_0_100 0x062006f6, MC0_DRAM_CMD
35b4: store_word_0_100 0x062001f6, MC0_DRAM_CMD
35bc: store_word_0_100 0x062003f2, MC0_DRAM_CMD
35c4: store_word_0_100 0x062006f2, MC0_DRAM_CMD
35cc: store_word_0_100 0x062001f2, MC0_DRAM_CMD
35d4: store_word_0_100 2, MC0_CNTL
35d8: sync
35dc: delay -7
35e0: store_word_0_100 0, MC0_POINTER
35e4: store_word_0_100 0x0620038e, MC0_DRAM_CMD
35ec: store_word_0_100 0x0620068e, MC0_DRAM_CMD
35f4: store_word_0_100 0x0620018e, MC0_DRAM_CMD
35fc: store_word_0_100 0x062003b2, MC0_DRAM_CMD
3604: store_word_0_100 0x062006b2, MC0_DRAM_CMD
360c: store_word_0_100 0x062001b2, MC0_DRAM_CMD
3614: store_word_0_100 2, MC0_CNTL
3618: store_word_0_100 0, MC0_POINTER
361c: store_word_0_100 0x00001605, MC0_CNTL
3624: store_word_0_100 0x00000605, MC0_CNTL
362c: %r10_0 = *(MC1_CNTL)
3630: sync
3634: delay -7
3638: store_word_0_100 0, MC0_POINTER
363c: store_word_0_100 0x003c0000, MC0_DRAM_CMD
3644: store_word_0_100 2, MC0_CNTL
3648: store_word_0_100 0x00001000, MC0_CNTL
3650: store_word_0_100 0x00000605, MC0_CNTL
3658: %r10_0 = *(MC1_CNTL)
365c: sync
3660: delay -7
3664: call 0x4fac
3668: %r10_0 = 0
366c: %r11_1 = 1
3670: %r12_0 = 3
3674: store_word 0, 0xe4000024
3678: store_word %r10_0, 0xe40015e0
367c: %r10_0 = *(0xe40015e8)
3680: %r10_0 = rotlw_by_30_then_and %r10_0, 1
3684: bne %r10_0, 1 -> 0x3690 v
3688: %r10_0 = *(0xe40015e0)
368c: jmp 0x3698 v
3690: %r10_0 = *(0xe40015e0)
3694: %r12_0 = 7
3698: call 0x36c0
369c: %r10_0 = add %r11_0, 1
36a0: %r11_1 = rotlw_by_1_then_and %r11_1, -2
36a4: bgt? %r11_0, %r12_0 -> 0x3698 ^
36a8: %r12_0 = *(0xe4000024)
36ac: beq %r10_0, 0 -> 0x36bc v
36b0: store_word 0x0014149a, 0xe4000024
36b8: call 0x109c
36bc: jmp 0x59a8 v
36c0: %r12_1 = rotlw_by_26_then_and %r11_0, 0x10000000
36c8: store_word %r10_0, 0xe40015e0
36cc: %r10_0 = *(0xe40015e8)
36d0: %r10_0 = rotlw_by_29_then_and %r10_0, 1
36d4: bne %r10_0, 0 -> 0x36e0 v
36d8: %r10_0 = *(0xe40015e0)
36dc: jmp 0x3704 v
36e0: %r10_0 = *(0xe40015e0)
36e4: store_word %r10_0, 0xe40015e0
36e8: %r10_0 = *(0xe40015e8)
36ec: %r10_0 = rotlw_by_28_then_and %r10_0, 1
36f0: bne %r10_0, 1 -> 0x36fc v
36f4: %r10_0 = *(0xe40015e0)
36f8: jmp 0x3704 v
36fc: %r10_0 = *(0xe40015e0)
3700: %r12_1 = rotlw_by_1_then_and %r12_1, -2
3704: %r10_0 = rotlw_by_6_then_and %r11_0, 0x00000080
370c: %r12_1 = add %r12_1, %r10_0
3710: %r10_0 = rotlw_by_2_then_and %r11_0, 4
3714: %r12_1 = add %r12_1, %r10_0
3718: %r12_0 = 0x10000000
3720: store_word %r10_0, 0xe40015e0
3724: %r10_0 = *(0xe40015e8)
3728: %r10_0 = rotlw_by_29_then_and %r10_0, 1
372c: bne %r10_0, 0 -> 0x3738 v
3730: %r10_0 = *(0xe40015e0)
3734: jmp 0x375c v
3738: %r10_0 = *(0xe40015e0)
373c: store_word %r10_0, 0xe40015e0
3740: %r10_0 = *(0xe40015e8)
3744: %r10_0 = rotlw_by_28_then_and %r10_0, 1
3748: bne %r10_0, 1 -> 0x3754 v
374c: %r10_0 = *(0xe40015e0)
3750: jmp 0x375c v
3754: %r10_0 = *(0xe40015e0)
3758: %r12_0 = rotlw_by_1_then_and %r13_0, -2
375c: %r12_0 = rotlw_by_31_then_and %r13_0, -1
3760: beq %r13_0, 4 -> 0x3794 v
3764: beq %r13_0, 0x00000080 -> 0x375c ^
376c: %r13_1 = add %r12_1, %r13_0
3770: store_word 0, %r12_1
3774: store_word -1, %r13_1
3778: %r10_0 = *(%r12_1)
377c: %r10_0 = load_word -6
3780: bne %r10_0, 0 -> 0x3788 v
3784: beq %r10_1, -1 -> 0x375c ^
3788: %r12_0 = *(0xe4000024)
378c: %r10_0 = or %r10_0, %r11_1
3790: store_word %r10_0, 0xe4000024
3794: return
3798: call 0x4fac
379c: %r10_0 = 0
37a0: op_1E 0, -7
37a4: %r10_1 = 0x00001800
37ac: call 0x50dc
37b0: beq %r12_0, 0 -> 0x37b8 v
37b4: %r10_0 = or %r11_0, 1
37b8: beq %r12_1, 0 -> 0x37c4 v
37bc: %r10_0 = or %r11_0, 0x00000010
37c4: op_1E 0, -7
37c8: op_1E 1, -7
37cc: %r10_1 = 0x00001804
37d4: call 0x50dc
37d8: beq %r12_0, 0 -> 0x37e0 v
37dc: %r10_0 = or %r11_0, 2
37e0: beq %r12_1, 0 -> 0x37ec v
37e4: %r10_0 = or %r11_0, 0x00000020
37ec: op_1E 1, -7
37f0: op_1E 2, -7
37f4: %r10_1 = 0x00001880
37fc: call 0x50dc
3800: beq %r12_0, 0 -> 0x3808 v
3804: %r10_0 = or %r11_0, 4
3808: beq %r12_1, 0 -> 0x3814 v
380c: %r10_0 = or %r11_0, 0x00000040
3814: op_1E 2, -7
3818: op_1E 3, -7
381c: %r10_1 = 0x00001884
3824: call 0x50dc
3828: beq %r12_0, 0 -> 0x3834 v
382c: %r10_0 = or %r11_0, 0x00000008
3834: beq %r12_1, 0 -> 0x3840 v
3838: %r10_0 = or %r11_0, 0x00000080
3840: op_1E 3, -7
3844: return
3848: %r10_0 = 0
384c: op_1E %r11_0, -7
3850: %r12_0 = 0
3854: %r12_1 = 0
3858: %r12_0 = 0
385c: op_1E %r11_0, -7
3860: %r10_0 = add %r11_0, 1
3864: bne %r11_0, 4 -> 0x384c ^
3868: %r10_0 = 0
386c: %r13_1 = 0
3870: store_word %r11_0, 0xe4000018
3874: store_word_0_100 %r11_0, MC0_RD_STR_DLY_0
3878: store_word_0_100 %r11_0, MC0_RD_STR_DLY_1
387c: %r10_0 = *(MC1_RD_STR_DLY_1)
3880: sync
3884: delay -7
3888: store_word_0_100 0x00001605, MC0_CNTL
3890: store_word_0_100 0x00000605, MC0_CNTL
3898: %r10_0 = 0
389c: %r11_1 = 0
38a0: %r10_1 = 0x00001808
38a8: call 0x52b4
38ac: call 0x1184
38b0: %r10_1 = rotlw_by_0_then_and %r10_1, -1
38b4: %r13_1 = or %r13_1, %r10_1
38b8: %r10_1 = 0x000000ff
38c0: store_word %r10_0, 0xe40015e0
38c4: %r10_0 = *(0xe40015e8)
38c8: %r10_0 = rotlw_by_30_then_and %r10_0, 1
38cc: bne %r10_0, 1 -> 0x38d8 v
38d0: %r10_0 = *(0xe40015e0)
38d4: jmp 0x38f4 v
38d8: %r10_0 = *(0xe40015e0)
38dc: %r10_0 = load_word -6
38e0: %r10_1 = rotlw_by_31_then_and %r10_1, -1
38e4: %r10_1 = add %r10_1, 0x00001808
38ec: call 0x52b4
38f0: call 0x1184
38f4: %r10_1 = rotlw_by_16_then_and %r10_1, -1
38f8: %r13_1 = or %r13_1, %r10_1
38fc: op_1E 0, -7
3900: call 0x5624
3904: call 0x56b4
3908: store_word %r10_0, 0xe40015e0
390c: %r10_0 = *(0xe40015e8)
3910: %r10_0 = rotlw_by_31_then_and %r10_0, 1
3914: bne %r10_0, 0 -> 0x3920 v
3918: %r10_0 = *(0xe40015e0)
391c: jmp 0x3928 v
3920: %r10_0 = *(0xe40015e0)
3924: call 0x12d0
3928: op_1E 0, -7
392c: %r10_0 = 0
3930: %r11_1 = 0
3934: %r10_1 = 0x0000180c
393c: call 0x52b4
3940: call 0x1184
3944: %r10_1 = rotlw_by_4_then_and %r10_1, -1
3948: %r13_1 = or %r13_1, %r10_1
394c: %r10_1 = 0x000000ff
3954: store_word %r10_0, 0xe40015e0
3958: %r10_0 = *(0xe40015e8)
395c: %r10_0 = rotlw_by_30_then_and %r10_0, 1
3960: bne %r10_0, 1 -> 0x396c v
3964: %r10_0 = *(0xe40015e0)
3968: jmp 0x3988 v
396c: %r10_0 = *(0xe40015e0)
3970: %r10_0 = load_word -6
3974: %r10_1 = rotlw_by_31_then_and %r10_1, -1
3978: %r10_1 = add %r10_1, 0x0000180c
3980: call 0x52b4
3984: call 0x1184
3988: %r10_1 = rotlw_by_20_then_and %r10_1, -1
398c: %r13_1 = or %r13_1, %r10_1
3990: op_1E 1, -7
3994: call 0x5624
3998: call 0x56b4
399c: store_word %r10_0, 0xe40015e0
39a0: %r10_0 = *(0xe40015e8)
39a4: %r10_0 = rotlw_by_31_then_and %r10_0, 1
39a8: bne %r10_0, 0 -> 0x39b4 v
39ac: %r10_0 = *(0xe40015e0)
39b0: jmp 0x39bc v
39b4: %r10_0 = *(0xe40015e0)
39b8: call 0x12d0
39bc: op_1E 1, -7
39c0: %r10_0 = 0
39c4: %r11_1 = 0
39c8: %r10_1 = 0x00001888
39d0: call 0x52b4
39d4: call 0x1184
39d8: %r10_1 = rotlw_by_8_then_and %r10_1, -1
39dc: %r13_1 = or %r13_1, %r10_1
39e0: %r10_1 = 0x000000ff
39e8: store_word %r10_0, 0xe40015e0
39ec: %r10_0 = *(0xe40015e8)
39f0: %r10_0 = rotlw_by_30_then_and %r10_0, 1
39f4: bne %r10_0, 1 -> 0x3a00 v
39f8: %r10_0 = *(0xe40015e0)
39fc: jmp 0x3a1c v
3a00: %r10_0 = *(0xe40015e0)
3a04: %r10_0 = load_word -6
3a08: %r10_1 = rotlw_by_31_then_and %r10_1, -1
3a0c: %r10_1 = add %r10_1, 0x00001888
3a14: call 0x52b4
3a18: call 0x1184
3a1c: %r10_1 = rotlw_by_24_then_and %r10_1, -1
3a20: %r13_1 = or %r13_1, %r10_1
3a24: op_1E 2, -7
3a28: call 0x5624
3a2c: call 0x56b4
3a30: store_word %r10_0, 0xe40015e0
3a34: %r10_0 = *(0xe40015e8)
3a38: %r10_0 = rotlw_by_31_then_and %r10_0, 1
3a3c: bne %r10_0, 0 -> 0x3a48 v
3a40: %r10_0 = *(0xe40015e0)
3a44: jmp 0x3a50 v
3a48: %r10_0 = *(0xe40015e0)
3a4c: call 0x12d0
3a50: op_1E 2, -7
3a54: %r10_0 = 0
3a58: %r11_1 = 0
3a5c: %r10_1 = 0x0000188c
3a64: call 0x52b4
3a68: call 0x1184
3a6c: %r10_1 = rotlw_by_12_then_and %r10_1, -1
3a70: %r13_1 = or %r13_1, %r10_1
3a74: %r10_1 = 0x000000ff
3a7c: store_word %r10_0, 0xe40015e0
3a80: %r10_0 = *(0xe40015e8)
3a84: %r10_0 = rotlw_by_30_then_and %r10_0, 1
3a88: bne %r10_0, 1 -> 0x3a94 v
3a8c: %r10_0 = *(0xe40015e0)
3a90: jmp 0x3ab0 v
3a94: %r10_0 = *(0xe40015e0)
3a98: %r10_0 = load_word -6
3a9c: %r10_1 = rotlw_by_31_then_and %r10_1, -1
3aa0: %r10_1 = add %r10_1, 0x0000188c
3aa8: call 0x52b4
3aac: call 0x1184
3ab0: %r10_1 = rotlw_by_28_then_and %r10_1, -1
3ab4: %r13_1 = or %r13_1, %r10_1
3ab8: op_1E 3, -7
3abc: call 0x5624
3ac0: call 0x56b4
3ac4: store_word %r10_0, 0xe40015e0
3ac8: %r10_0 = *(0xe40015e8)
3acc: %r10_0 = rotlw_by_31_then_and %r10_0, 1
3ad0: bne %r10_0, 0 -> 0x3adc v
3ad4: %r10_0 = *(0xe40015e0)
3ad8: jmp 0x3ae4 v
3adc: %r10_0 = *(0xe40015e0)
3ae0: call 0x12d0
3ae4: op_1E 3, -7
3ae8: %r10_0 = load_word -5
3aec: %r10_0 = add %r11_0, 0x01010101
3af4: bne %r11_0, 0x50505050 -> 0x3870 ^
3afc: %r10_0 = 0
3b00: op_1E %r10_0, -7
3b04: %r10_0 = rotlw_by_2_then_and %r10_0, 0x000000ff
3b0c: %r11_1 = add %r11_0, 0xe4001600
3b14: store_word %r13_0, %r11_1
3b18: %r11_1 = rotlw_by_0_then_and %r13_0, 0x000000ff
3b20: beq %r11_1, 0 -> 0x5764 v
3b24: %r10_0 = and %r12_0, 0x0000ffff
3b2c: %r10_0 = div %r11_0, %r11_1
3b30: %r13_1 = rotlw_by_0_then_and %r11_0, 0x000000ff
3b38: %r11_1 = rotlw_by_24_then_and %r13_0, 0x000000ff
3b40: beq %r11_1, 0 -> 0x5790 v
3b44: %r10_0 = rotlw_by_16_then_and %r12_0, 0x0000ffff
3b4c: %r10_0 = div %r11_0, %r11_1
3b50: %r10_0 = rotlw_by_8_then_and %r11_0, 0x0000ff00
3b58: %r13_1 = or %r13_1, %r11_0
3b5c: %r11_1 = rotlw_by_16_then_and %r13_0, 0x000000ff
3b64: beq %r11_1, 0 -> 0x57bc v
3b68: %r10_0 = and %r12_1, 0x0000ffff
3b70: %r10_0 = div %r11_0, %r11_1
3b74: %r10_0 = rotlw_by_16_then_and %r11_0, 0x00ff0000
3b7c: %r13_1 = or %r13_1, %r11_0
3b80: %r11_1 = rotlw_by_8_then_and %r13_0, 0x000000ff
3b88: beq %r11_1, 0 -> 0x57e8 v
3b8c: %r10_0 = rotlw_by_16_then_and %r12_1, 0x0000ffff
3b94: %r10_0 = div %r11_0, %r11_1
3b98: %r10_0 = rotlw_by_24_then_and %r11_0, 0xff000000
3ba0: %r13_1 = or %r13_1, %r11_0
3ba4: op_1E %r10_0, -7
3ba8: %r10_0 = add %r10_0, 1
3bac: bne %r10_0, 4 -> 0x3b00 ^
3bb0: return
3bb4: %r10_0 = 0
3bb8: op_1E %r11_0, -7
3bbc: %r12_0 = 0
3bc0: %r12_1 = 0
3bc4: %r12_0 = 0
3bc8: op_1E %r11_0, -7
3bcc: %r10_0 = add %r11_0, 1
3bd0: bne %r11_0, 4 -> 0x3bb8 ^
3bd4: store_word_0_100 0, MC0_WR_STR_DLL_0
3bd8: store_word_0_100 0, MC0_WR_STR_DLL_1
3bdc: call 0x3fdc
3be0: %r10_0 = 0
3be4: %r13_1 = 0
3be8: store_word %r11_0, 0xe4000018
3bec: call 0x4048
3bf0: call 0x4fac
3bf4: %r10_0 = 0
3bf8: %r11_1 = 0
3bfc: %r10_1 = 0x00001808
3c04: %r10_0 = load_word -3
3c08: call 0x546c
3c0c: call 0x1184
3c10: %r10_1 = rotlw_by_0_then_and %r10_1, -1
3c14: %r13_1 = or %r13_1, %r10_1
3c18: %r10_1 = 0x000000ff
3c20: store_word %r10_0, 0xe40015e0
3c24: %r10_0 = *(0xe40015e8)
3c28: %r10_0 = rotlw_by_30_then_and %r10_0, 1
3c2c: bne %r10_0, 1 -> 0x3c38 v
3c30: %r10_0 = *(0xe40015e0)
3c34: jmp 0x3c58 v
3c38: %r10_0 = *(0xe40015e0)
3c3c: %r10_0 = load_word -6
3c40: %r10_1 = rotlw_by_31_then_and %r10_1, -1
3c44: %r10_1 = add %r10_1, 0x00001808
3c4c: %r10_0 = load_word -3
3c50: call 0x546c
3c54: call 0x1184
3c58: %r10_1 = rotlw_by_16_then_and %r10_1, -1
3c5c: %r13_1 = or %r13_1, %r10_1
3c60: op_1E 0, -7
3c64: call 0x54e4
3c68: call 0x5574
3c6c: store_word %r10_0, 0xe40015e0
3c70: %r10_0 = *(0xe40015e8)
3c74: %r10_0 = rotlw_by_31_then_and %r10_0, 1
3c78: bne %r10_0, 0 -> 0x3c84 v
3c7c: %r10_0 = *(0xe40015e0)
3c80: jmp 0x3c8c v
3c84: %r10_0 = *(0xe40015e0)
3c88: call 0x12d0
3c8c: op_1E 0, -7
3c90: %r10_0 = 0
3c94: %r11_1 = 0
3c98: %r10_1 = 0x0000180c
3ca0: %r12_0 = load_word -3
3ca4: call 0x546c
3ca8: call 0x1184
3cac: %r10_1 = rotlw_by_4_then_and %r10_1, -1
3cb0: %r13_1 = or %r13_1, %r10_1
3cb4: %r10_1 = 0x000000ff
3cbc: store_word %r10_0, 0xe40015e0
3cc0: %r10_0 = *(0xe40015e8)
3cc4: %r10_0 = rotlw_by_30_then_and %r10_0, 1
3cc8: bne %r10_0, 1 -> 0x3cd4 v
3ccc: %r10_0 = *(0xe40015e0)
3cd0: jmp 0x3cf4 v
3cd4: %r10_0 = *(0xe40015e0)
3cd8: %r10_0 = load_word -6
3cdc: %r10_1 = rotlw_by_31_then_and %r10_1, -1
3ce0: %r10_1 = add %r10_1, 0x0000180c
3ce8: %r12_0 = load_word -3
3cec: call 0x546c
3cf0: call 0x1184
3cf4: %r10_1 = rotlw_by_20_then_and %r10_1, -1
3cf8: %r13_1 = or %r13_1, %r10_1
3cfc: op_1E 1, -7
3d00: call 0x54e4
3d04: call 0x5574
3d08: store_word %r10_0, 0xe40015e0
3d0c: %r10_0 = *(0xe40015e8)
3d10: %r10_0 = rotlw_by_31_then_and %r10_0, 1
3d14: bne %r10_0, 0 -> 0x3d20 v
3d18: %r10_0 = *(0xe40015e0)
3d1c: jmp 0x3d28 v
3d20: %r10_0 = *(0xe40015e0)
3d24: call 0x12d0
3d28: op_1E 1, -7
3d2c: %r10_0 = 0
3d30: %r11_1 = 0
3d34: %r10_1 = 0x00001888
3d3c: %r10_0 = load_word -3
3d40: call 0x546c
3d44: call 0x1184
3d48: %r10_1 = rotlw_by_8_then_and %r10_1, -1
3d4c: %r13_1 = or %r13_1, %r10_1
3d50: %r10_1 = 0x000000ff
3d58: store_word %r10_0, 0xe40015e0
3d5c: %r10_0 = *(0xe40015e8)
3d60: %r10_0 = rotlw_by_30_then_and %r10_0, 1
3d64: bne %r10_0, 1 -> 0x3d70 v
3d68: %r10_0 = *(0xe40015e0)
3d6c: jmp 0x3d90 v
3d70: %r10_0 = *(0xe40015e0)
3d74: %r10_0 = load_word -6
3d78: %r10_1 = rotlw_by_31_then_and %r10_1, -1
3d7c: %r10_1 = add %r10_1, 0x00001888
3d84: %r10_0 = load_word -3
3d88: call 0x546c
3d8c: call 0x1184
3d90: %r10_1 = rotlw_by_24_then_and %r10_1, -1
3d94: %r13_1 = or %r13_1, %r10_1
3d98: op_1E 2, -7
3d9c: call 0x54e4
3da0: call 0x5574
3da4: store_word %r10_0, 0xe40015e0
3da8: %r10_0 = *(0xe40015e8)
3dac: %r10_0 = rotlw_by_31_then_and %r10_0, 1
3db0: bne %r10_0, 0 -> 0x3dbc v
3db4: %r10_0 = *(0xe40015e0)
3db8: jmp 0x3dc4 v
3dbc: %r10_0 = *(0xe40015e0)
3dc0: call 0x12d0
3dc4: op_1E 2, -7
3dc8: %r10_0 = 0
3dcc: %r11_1 = 0
3dd0: %r10_1 = 0x0000188c
3dd8: %r12_0 = load_word -3
3ddc: call 0x546c
3de0: call 0x1184
3de4: %r10_1 = rotlw_by_12_then_and %r10_1, -1
3de8: %r13_1 = or %r13_1, %r10_1
3dec: %r10_1 = 0x000000ff
3df4: store_word %r10_0, 0xe40015e0
3df8: %r10_0 = *(0xe40015e8)
3dfc: %r10_0 = rotlw_by_30_then_and %r10_0, 1
3e00: bne %r10_0, 1 -> 0x3e0c v
3e04: %r10_0 = *(0xe40015e0)
3e08: jmp 0x3e2c v
3e0c: %r10_0 = *(0xe40015e0)
3e10: %r10_0 = load_word -6
3e14: %r10_1 = rotlw_by_31_then_and %r10_1, -1
3e18: %r10_1 = add %r10_1, 0x0000188c
3e20: %r12_0 = load_word -3
3e24: call 0x546c
3e28: call 0x1184
3e2c: %r10_1 = rotlw_by_28_then_and %r10_1, -1
3e30: %r13_1 = or %r13_1, %r10_1
3e34: op_1E 3, -7
3e38: call 0x54e4
3e3c: call 0x5574
3e40: store_word %r10_0, 0xe40015e0
3e44: %r10_0 = *(0xe40015e8)
3e48: %r10_0 = rotlw_by_31_then_and %r10_0, 1
3e4c: bne %r10_0, 0 -> 0x3e58 v
3e50: %r10_0 = *(0xe40015e0)
3e54: jmp 0x3e60 v
3e58: %r10_0 = *(0xe40015e0)
3e5c: call 0x12d0
3e60: op_1E 3, -7
3e64: %r10_0 = load_word -5
3e68: %r10_0 = add %r11_0, 0x01010101
3e70: bne %r11_0, 0x50505050 -> 0x3be8 ^
3e78: store_word 0x000000ff, 0xe4000024
3e80: %r10_0 = 0
3e84: op_1E %r10_0, -7
3e88: %r10_0 = rotlw_by_2_then_and %r10_0, 0x000000ff
3e90: %r11_1 = add %r11_0, 0xe4001610
3e98: store_word %r13_0, %r11_1
3e9c: call 0x0cc8
3ea0: %r11_1 = rotlw_by_0_then_and %r13_0, 0x000000ff
3ea8: beq %r11_1, 0 -> 0x5884 v
3eac: %r10_0 = and %r12_0, 0x0000ffff
3eb4: %r10_0 = div %r11_0, %r11_1
3eb8: %r13_1 = rotlw_by_0_then_and %r11_0, 0x000000ff
3ec0: %r11_1 = rotlw_by_24_then_and %r13_0, 0x000000ff
3ec8: beq %r11_1, 0 -> 0x58bc v
3ecc: %r10_0 = rotlw_by_16_then_and %r12_0, 0x0000ffff
3ed4: %r10_0 = div %r11_0, %r11_1
3ed8: %r10_0 = rotlw_by_8_then_and %r11_0, 0x0000ff00
3ee0: %r13_1 = or %r13_1, %r11_0
3ee4: %r11_1 = rotlw_by_16_then_and %r13_0, 0x000000ff
3eec: beq %r11_1, 0 -> 0x58f4 v
3ef0: %r10_0 = and %r12_1, 0x0000ffff
3ef8: %r10_0 = div %r11_0, %r11_1
3efc: %r10_0 = rotlw_by_16_then_and %r11_0, 0x00ff0000
3f04: %r13_1 = or %r13_1, %r11_0
3f08: %r11_1 = rotlw_by_8_then_and %r13_0, 0x000000ff
3f10: beq %r11_1, 0 -> 0x592c v
3f14: %r10_0 = rotlw_by_16_then_and %r12_1, 0x0000ffff
3f1c: %r10_0 = div %r11_0, %r11_1
3f20: %r10_0 = rotlw_by_24_then_and %r11_0, 0xff000000
3f28: %r13_1 = or %r13_1, %r11_0
3f2c: op_1E %r10_0, -7
3f30: %r10_0 = add %r10_0, 1
3f34: bne %r10_0, 4 -> 0x3e84 ^
3f38: return
3f3c: %r10_0 = *(0xe4000288)
3f40: sync
3f44: delay -7
3f48: return
3f4c: store_word 2, 0xe400028c
3f50: %r12_0 = *(0xe400028c)
3f54: sync
3f58: delay -7
3f5c: store_word 0, 0xe400028c
3f60: %r12_0 = *(0xe400028c)
3f64: sync
3f68: delay -7
3f6c: store_word 0, 0xe4000288
3f70: call 0x3f3c
3f74: store_word 1, 0xe4000288
3f78: call 0x3f3c
3f7c: store_word 5, 0xe4000288
3f80: call 0x3f3c
3f84: store_word 1, 0xe4000288
3f88: call 0x3f3c
3f8c: store_word 0, 0xe4000288
3f90: call 0x3f3c
3f94: return
3f98: %r10_0 = and %r10_1, 0x000000ff
3fa0: bge %r11_0, %r10_0 -> 0x3fa8 v
3fa4: %r10_0 = or %r11_0, %r11_0
3fa8: %r10_0 = rotlw_by_24_then_and %r10_1, 0x000000ff
3fb0: bge %r11_0, %r10_0 -> 0x3fb8 v
3fb4: %r10_0 = or %r11_0, %r11_0
3fb8: %r10_0 = rotlw_by_16_then_and %r10_1, 0x000000ff
3fc0: bge %r11_0, %r10_0 -> 0x3fc8 v
3fc4: %r10_0 = or %r11_0, %r11_0
3fc8: %r10_0 = rotlw_by_8_then_and %r10_1, 0x000000ff
3fd0: bge %r11_0, %r10_0 -> 0x3fd8 v
3fd4: %r10_0 = or %r11_0, %r11_0
3fd8: return
3fdc: %r10_0 = 0x00000050
3fe4: %r10_0 = load_word -6
3fe8: call 0x3f98
3fec: %r12_0 = load_word -6
3ff0: call 0x3f98
3ff4: %r10_0 = load_word -6
3ff8: call 0x3f98
3ffc: %r12_0 = load_word -6
4000: call 0x3f98
4004: %r10_1 = rotlw_by_8_then_and %r10_0, -1
4008: %r10_0 = or %r10_0, %r10_1
400c: %r10_1 = rotlw_by_16_then_and %r10_0, -1
4010: %r10_0 = or %r10_0, %r10_1
4014: %r10_0 = load_word -6
4018: %r10_1 = subf %r10_1, %r10_0
401c: store_word %r10_1, MC0_WR_STR_DLL_0
4020: %r12_0 = load_word -6
4024: %r10_1 = subf %r10_1, %r10_0
4028: store_word %r10_1, MC0_WR_STR_DLL_1
402c: %r10_0 = load_word -6
4030: %r10_1 = subf %r10_1, %r10_0
4034: store_word %r10_1, MC1_WR_STR_DLL_0
4038: %r12_0 = load_word -6
403c: %r10_1 = subf %r10_1, %r10_0
4040: store_word %r10_1, MC1_WR_STR_DLL_1
4044: return
4048: %r10_0 = load_word -6
404c: %r10_1 = add %r10_1, 0x01010101
4054: store_word %r10_1, MC0_WR_STR_DLL_0
4058: %r12_0 = load_word -6
405c: %r10_1 = add %r10_1, 0x01010101
4064: store_word %r10_1, MC0_WR_STR_DLL_1
4068: %r10_0 = load_word -6
406c: %r10_1 = add %r10_1, 0x01010101
4074: store_word %r10_1, MC1_WR_STR_DLL_0
4078: %r12_0 = load_word -6
407c: %r10_1 = add %r10_1, 0x01010101
4084: store_word %r10_1, MC1_WR_STR_DLL_1
4088: %r12_0 = *(MC1_WR_STR_DLL_1)
408c: sync
4090: delay -7
4094: call 0x3f4c
4098: store_word_0_100 0, MC0_CNTL
409c: %r12_0 = load_word -6
40a0: %r10_1 = and %r10_1, -2
40a4: store_word %r10_1, 0xe40002a4
40a8: store_word_0_100 0, MC0_POINTER
40ac: store_word_0_100 0x001c0000, MC0_DRAM_CMD
40b4: store_word_0_100 2, MC0_CNTL
40b8: %r10_0 = *(MC1_CNTL)
40bc: sync
40c0: delay -7
40c4: %r10_1 = or %r10_1, 1
40c8: store_word %r10_1, 0xe40002a4
40cc: %r12_0 = *(0xe40002a4)
40d0: sync
40d4: delay -7
40d8: store_word_0_100 0, MC0_POINTER
40dc: store_word_0_100 0x423c0000, MC0_DRAM_CMD
40e4: store_word_0_100 0x0c280100, MC0_DRAM_CMD
40ec: store_word_0_100 0x06200221, MC0_DRAM_CMD
40f4: %r12_0 = *(0xe4000014)
40f8: store_word_0_100 %r10_0, MC0_DRAM_CMD
40fc: %r10_0 = *(0xe4000010)
4100: store_word_0_100 %r10_0, MC0_DRAM_CMD
4104: store_word %r10_0, 0xe40015e0
4108: %r12_0 = *(0xe40015ec)
410c: %r10_0 = rotlw_by_24_then_and %r10_0, 0x0000000f
4114: bne %r10_0, 1 -> 0x4120 v
4118: %r10_0 = *(0xe40015e0)
411c: jmp 0x414c v
4120: %r10_0 = *(0xe40015e0)
4124: store_word %r10_0, 0xe40015e0
4128: %r12_0 = *(0xe40015ec)
412c: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
4134: beq %r10_0, 6 -> 0x4140 v
4138: %r10_0 = *(0xe40015e0)
413c: jmp 0x414c v
4140: %r10_0 = *(0xe40015e0)
4144: call 0x04f0
4148: store_word_0_100 %r10_1, MC0_DRAM_CMD
414c: store_word_0_100 2, MC0_CNTL
4150: %r10_0 = *(MC1_CNTL)
4154: sync
4158: delay -7
415c: store_word_0_100 0, MC0_POINTER
4160: store_word_0_100 0x0c280100, MC0_DRAM_CMD
4168: store_word_0_100 0x2f240000, MC0_DRAM_CMD
4170: store_word_0_100 0x2f240000, MC0_DRAM_CMD
4178: store_word_0_100 0x003c0000, MC0_DRAM_CMD
4180: store_word_0_100 2, MC0_CNTL
4184: store_word_0_100 0x00001605, MC0_CNTL
418c: store_word_0_100 0x00000605, MC0_CNTL
4194: %r10_0 = *(MC1_CNTL)
4198: sync
419c: delay -7
41a0: return
41a4: store_word_0_100 0, MC0_CNTL
41a8: store_word_0_100 0, MC0_POINTER
41ac: store_word_0_100 0x00040000, MC0_DRAM_CMD
41b4: store_word_0_100 2, MC0_CNTL
41b8: %r10_0 = *(MC1_CNTL)
41bc: sync
41c0: delay -7
41c4: call 0x3f4c
41c8: store_word_0_100 0, MC0_POINTER
41cc: store_word_0_100 0x003c0000, MC0_DRAM_CMD
41d4: store_word_0_100 2, MC0_CNTL
41d8: %r10_0 = *(MC1_CNTL)
41dc: sync
41e0: delay -7
41e4: return
41e8: store_word_0_100 0, MC0_CNTL
41ec: store_word_0_100 0, MC0_POINTER
41f0: %r10_0 = 0
41f4: %r11_1 = rotlw_by_25_then_and %r10_1, 1
41f8: beq %r11_1, 1 -> 0x4200 v
41fc: %r10_0 = -1
4200: store_word %r11_0, MC0_DRAM_DATA
4204: %r10_0 = xor %r11_0, -1
4208: store_word %r11_0, MC1_DRAM_DATA
420c: store_word_0_100 %r10_0, MC0_DRAM_DATA
4210: store_word_0_100 %r10_0, MC0_DRAM_DATA
4214: store_word_0_100 %r10_0, MC0_DRAM_DATA
4218: store_word_0_100 %r10_0, MC0_DRAM_DATA
421c: store_word_0_100 %r10_0, MC0_DRAM_DATA
4220: store_word_0_100 %r10_0, MC0_DRAM_DATA
4224: store_word_0_100 %r10_0, MC0_DRAM_DATA
4228: store_word_0_100 %r10_0, MC0_DRAM_DATA
422c: %r10_0 = 0
4230: %r11_1 = rotlw_by_25_then_and %r10_1, 1
4234: beq %r11_1, 1 -> 0x423c v
4238: %r10_0 = -1
423c: store_word %r11_0, MC0_DRAM_DATA
4240: %r10_0 = xor %r11_0, -1
4244: store_word %r11_0, MC1_DRAM_DATA
4248: store_word_0_100 %r10_0, MC0_DRAM_DATA
424c: store_word_0_100 %r10_0, MC0_DRAM_DATA
4250: %r10_0 = xor %r10_0, -1
4254: store_word_0_100 %r10_0, MC0_DRAM_DATA
4258: store_word_0_100 %r10_0, MC0_DRAM_DATA
425c: %r10_0 = xor %r10_0, -1
4260: store_word_0_100 %r10_0, MC0_DRAM_DATA
4264: store_word_0_100 %r10_0, MC0_DRAM_DATA
4268: %r10_0 = xor %r10_0, -1
426c: store_word_0_100 %r10_0, MC0_DRAM_DATA
4270: store_word_0_100 %r10_0, MC0_DRAM_DATA
4274: %r10_0 = 0x0f2c0000
427c: %r11_1 = rotlw_by_1_then_and %r10_1, 0x00008000
4284: %r10_0 = or %r11_0, %r11_1
4288: %r11_1 = rotlw_by_5_then_and %r10_1, 0x00010000
4290: %r10_0 = or %r11_0, %r11_1
4294: %r11_1 = rotlw_by_2_then_and %r10_1, 0x00020000
429c: %r10_0 = or %r11_0, %r11_1
42a0: %r11_1 = rotlw_by_16_then_and %r10_1, 0x00001fff
42a8: %r10_0 = or %r11_0, %r11_1
42ac: store_word_0_100 %r11_0, MC0_DRAM_CMD
42b0: %r10_0 = and %r11_0, 0x0003e000
42b8: %r10_0 = xor %r11_0, 0x00008000
42c0: %r10_0 = or %r11_0, 0x012c0000
42c8: store_word_0_100 %r11_0, MC0_DRAM_CMD
42cc: %r10_0 = xor %r11_0, 0x00008000
42d4: %r10_0 = and %r11_0, 0x0003e000
42dc: %r10_0 = or %r11_0, 0x01b00000
42e4: %r11_1 = rotlw_by_29_then_and %r10_1, 0x0000000f
42ec: %r10_0 = or %r11_0, %r11_1
42f0: %r11_1 = rotlw_by_28_then_and %r10_1, 0x00000070
42f8: %r10_0 = or %r11_0, %r11_1
42fc: %r11_1 = rotlw_by_27_then_and %r10_1, 0x00000080
4304: %r10_0 = or %r11_0, %r11_1
4308: %r11_1 = rotlw_by_28_then_and %r10_1, 0x00000200
4310: %r10_0 = or %r11_0, %r11_1
4314: store_word_0_100 %r11_0, MC0_DRAM_CMD
4318: %r10_0 = or %r11_0, 0x02000000
4320: store_word_0_100 %r11_0, MC0_DRAM_CMD
4324: %r10_0 = and %r11_0, 0x0003e000
432c: %r10_0 = xor %r11_0, 0x00010000
4334: %r10_0 = or %r11_0, 0x1f2c0000
433c: store_word_0_100 %r11_0, MC0_DRAM_CMD
4340: %r10_0 = xor %r11_0, 0x00010000
4348: %r10_0 = and %r11_0, 0x0003e000
4350: %r10_0 = or %r11_0, 0x1f280000
4358: store_word_0_100 %r11_0, MC0_DRAM_CMD
435c: %r10_0 = xor %r11_0, 0x00008000
4364: store_word_0_100 %r11_0, MC0_DRAM_CMD
4368: %r10_0 = xor %r11_0, 0x00008000
4370: %r10_0 = xor %r11_0, 0x00010000
4378: store_word_0_100 %r11_0, MC0_DRAM_CMD
437c: %r10_0 = xor %r11_0, 0x00010000
4384: store_word_0_100 2, MC0_CNTL
4388: store_word_0_100 0x00001605, MC0_CNTL
4390: store_word_0_100 0x00000605, MC0_CNTL
4398: %r10_1 = add %r10_1, 0x00000020
43a0: store_word_0_100 0, MC0_CNTL
43a4: store_word_0_100 0, MC0_POINTER
43a8: %r10_0 = 0
43ac: %r11_1 = rotlw_by_25_then_and %r10_1, 1
43b0: beq %r11_1, 1 -> 0x43b8 v
43b4: %r10_0 = -1
43b8: store_word %r11_0, MC0_DRAM_DATA
43bc: %r10_0 = xor %r11_0, -1
43c0: store_word %r11_0, MC1_DRAM_DATA
43c4: store_word_0_100 %r10_0, MC0_DRAM_DATA
43c8: store_word_0_100 %r10_0, MC0_DRAM_DATA
43cc: store_word_0_100 %r10_0, MC0_DRAM_DATA
43d0: store_word_0_100 %r10_0, MC0_DRAM_DATA
43d4: store_word_0_100 %r10_0, MC0_DRAM_DATA
43d8: store_word_0_100 %r10_0, MC0_DRAM_DATA
43dc: store_word_0_100 %r10_0, MC0_DRAM_DATA
43e0: store_word_0_100 %r10_0, MC0_DRAM_DATA
43e4: %r10_0 = 0
43e8: %r11_1 = rotlw_by_25_then_and %r10_1, 1
43ec: beq %r11_1, 1 -> 0x43f4 v
43f0: %r10_0 = -1
43f4: store_word %r11_0, MC0_DRAM_DATA
43f8: %r10_0 = xor %r11_0, -1
43fc: store_word %r11_0, MC1_DRAM_DATA
4400: store_word_0_100 %r10_0, MC0_DRAM_DATA
4404: store_word_0_100 %r10_0, MC0_DRAM_DATA
4408: %r10_0 = xor %r10_0, -1
440c: store_word_0_100 %r10_0, MC0_DRAM_DATA
4410: store_word_0_100 %r10_0, MC0_DRAM_DATA
4414: %r10_0 = xor %r10_0, -1
4418: store_word_0_100 %r10_0, MC0_DRAM_DATA
441c: store_word_0_100 %r10_0, MC0_DRAM_DATA
4420: %r10_0 = xor %r10_0, -1
4424: store_word_0_100 %r10_0, MC0_DRAM_DATA
4428: store_word_0_100 %r10_0, MC0_DRAM_DATA
442c: %r10_0 = 0x0f2c0000
4434: %r11_1 = rotlw_by_1_then_and %r10_1, 0x00008000
443c: %r10_0 = or %r11_0, %r11_1
4440: %r11_1 = rotlw_by_5_then_and %r10_1, 0x00010000
4448: %r10_0 = or %r11_0, %r11_1
444c: %r11_1 = rotlw_by_2_then_and %r10_1, 0x00020000
4454: %r10_0 = or %r11_0, %r11_1
4458: %r11_1 = rotlw_by_16_then_and %r10_1, 0x00001fff
4460: %r10_0 = or %r11_0, %r11_1
4464: store_word_0_100 %r11_0, MC0_DRAM_CMD
4468: %r10_0 = and %r11_0, 0x0003e000
4470: %r10_0 = xor %r11_0, 0x00008000
4478: %r10_0 = or %r11_0, 0x012c0000
4480: store_word_0_100 %r11_0, MC0_DRAM_CMD
4484: %r10_0 = xor %r11_0, 0x00008000
448c: %r10_0 = and %r11_0, 0x0003e000
4494: %r10_0 = or %r11_0, 0x01b00000
449c: %r11_1 = rotlw_by_29_then_and %r10_1, 0x0000000f
44a4: %r10_0 = or %r11_0, %r11_1
44a8: %r11_1 = rotlw_by_28_then_and %r10_1, 0x00000070
44b0: %r10_0 = or %r11_0, %r11_1
44b4: %r11_1 = rotlw_by_27_then_and %r10_1, 0x00000080
44bc: %r10_0 = or %r11_0, %r11_1
44c0: %r11_1 = rotlw_by_28_then_and %r10_1, 0x00000200
44c8: %r10_0 = or %r11_0, %r11_1
44cc: store_word_0_100 %r11_0, MC0_DRAM_CMD
44d0: %r10_0 = or %r11_0, 0x02000000
44d8: store_word_0_100 %r11_0, MC0_DRAM_CMD
44dc: %r10_0 = and %r11_0, 0x0003e000
44e4: %r10_0 = xor %r11_0, 0x00010000
44ec: %r10_0 = or %r11_0, 0x1f2c0000
44f4: store_word_0_100 %r11_0, MC0_DRAM_CMD
44f8: %r10_0 = xor %r11_0, 0x00010000
4500: %r10_0 = and %r11_0, 0x0003e000
4508: %r10_0 = or %r11_0, 0x1f280000
4510: store_word_0_100 %r11_0, MC0_DRAM_CMD
4514: %r10_0 = xor %r11_0, 0x00008000
451c: store_word_0_100 %r11_0, MC0_DRAM_CMD
4520: %r10_0 = xor %r11_0, 0x00008000
4528: %r10_0 = xor %r11_0, 0x00010000
4530: store_word_0_100 %r11_0, MC0_DRAM_CMD
4534: %r10_0 = xor %r11_0, 0x00010000
453c: store_word_0_100 2, MC0_CNTL
4540: store_word_0_100 0x00001605, MC0_CNTL
4548: store_word_0_100 0x00000605, MC0_CNTL
4550: %r10_1 = add %r10_1, 0x00000020
4558: store_word_0_100 0, MC0_CNTL
455c: store_word_0_100 0, MC0_POINTER
4560: %r10_0 = 0
4564: %r11_1 = rotlw_by_25_then_and %r10_1, 1
4568: beq %r11_1, 1 -> 0x4570 v
456c: %r10_0 = -1
4570: store_word %r11_0, MC0_DRAM_DATA
4574: %r10_0 = xor %r11_0, -1
4578: store_word %r11_0, MC1_DRAM_DATA
457c: store_word_0_100 %r10_0, MC0_DRAM_DATA
4580: store_word_0_100 %r10_0, MC0_DRAM_DATA
4584: store_word_0_100 %r10_0, MC0_DRAM_DATA
4588: store_word_0_100 %r10_0, MC0_DRAM_DATA
458c: store_word_0_100 %r10_0, MC0_DRAM_DATA
4590: store_word_0_100 %r10_0, MC0_DRAM_DATA
4594: store_word_0_100 %r10_0, MC0_DRAM_DATA
4598: store_word_0_100 %r10_0, MC0_DRAM_DATA
459c: %r10_0 = 0
45a0: %r11_1 = rotlw_by_25_then_and %r10_1, 1
45a4: beq %r11_1, 1 -> 0x45ac v
45a8: %r10_0 = -1
45ac: store_word %r11_0, MC0_DRAM_DATA
45b0: %r10_0 = xor %r11_0, -1
45b4: store_word %r11_0, MC1_DRAM_DATA
45b8: store_word_0_100 %r10_0, MC0_DRAM_DATA
45bc: store_word_0_100 %r10_0, MC0_DRAM_DATA
45c0: store_word_0_100 %r10_0, MC0_DRAM_DATA
45c4: store_word_0_100 %r10_0, MC0_DRAM_DATA
45c8: %r10_0 = xor %r10_0, -1
45cc: store_word_0_100 %r10_0, MC0_DRAM_DATA
45d0: store_word_0_100 %r10_0, MC0_DRAM_DATA
45d4: %r10_0 = xor %r10_0, -1
45d8: store_word_0_100 %r10_0, MC0_DRAM_DATA
45dc: store_word_0_100 %r10_0, MC0_DRAM_DATA
45e0: %r10_0 = xor %r10_0, -1
45e4: %r10_0 = 0x0f2c0000
45ec: %r11_1 = rotlw_by_1_then_and %r10_1, 0x00008000
45f4: %r10_0 = or %r11_0, %r11_1
45f8: %r11_1 = rotlw_by_5_then_and %r10_1, 0x00010000
4600: %r10_0 = or %r11_0, %r11_1
4604: %r11_1 = rotlw_by_2_then_and %r10_1, 0x00020000
460c: %r10_0 = or %r11_0, %r11_1
4610: %r11_1 = rotlw_by_16_then_and %r10_1, 0x00001fff
4618: %r10_0 = or %r11_0, %r11_1
461c: store_word_0_100 %r11_0, MC0_DRAM_CMD
4620: %r10_0 = and %r11_0, 0x0003e000
4628: %r10_0 = xor %r11_0, 0x00008000
4630: %r10_0 = or %r11_0, 0x012c0000
4638: store_word_0_100 %r11_0, MC0_DRAM_CMD
463c: %r10_0 = xor %r11_0, 0x00008000
4644: %r10_0 = and %r11_0, 0x0003e000
464c: %r10_0 = or %r11_0, 0x01b00000
4654: %r11_1 = rotlw_by_29_then_and %r10_1, 0x0000000f
465c: %r10_0 = or %r11_0, %r11_1
4660: %r11_1 = rotlw_by_28_then_and %r10_1, 0x00000070
4668: %r10_0 = or %r11_0, %r11_1
466c: %r11_1 = rotlw_by_27_then_and %r10_1, 0x00000080
4674: %r10_0 = or %r11_0, %r11_1
4678: %r11_1 = rotlw_by_28_then_and %r10_1, 0x00000200
4680: %r10_0 = or %r11_0, %r11_1
4684: store_word_0_100 %r11_0, MC0_DRAM_CMD
4688: %r10_0 = or %r11_0, 0x02000000
4690: store_word_0_100 %r11_0, MC0_DRAM_CMD
4694: %r10_0 = and %r11_0, 0x0003e000
469c: %r10_0 = xor %r11_0, 0x00010000
46a4: %r10_0 = or %r11_0, 0x1f2c0000
46ac: store_word_0_100 %r11_0, MC0_DRAM_CMD
46b0: %r10_0 = xor %r11_0, 0x00010000
46b8: %r10_0 = and %r11_0, 0x0003e000
46c0: %r10_0 = or %r11_0, 0x1f280000
46c8: store_word_0_100 %r11_0, MC0_DRAM_CMD
46cc: %r10_0 = xor %r11_0, 0x00008000
46d4: store_word_0_100 %r11_0, MC0_DRAM_CMD
46d8: %r10_0 = xor %r11_0, 0x00008000
46e0: %r10_0 = xor %r11_0, 0x00010000
46e8: store_word_0_100 %r11_0, MC0_DRAM_CMD
46ec: %r10_0 = xor %r11_0, 0x00010000
46f4: store_word_0_100 2, MC0_CNTL
46f8: store_word_0_100 0x00001605, MC0_CNTL
4700: store_word_0_100 0x00000605, MC0_CNTL
4708: %r10_1 = add %r10_1, 0x00000020
4710: store_word_0_100 0, MC0_CNTL
4714: store_word_0_100 0, MC0_POINTER
4718: %r10_0 = 0
471c: %r11_1 = rotlw_by_25_then_and %r10_1, 1
4720: beq %r11_1, 1 -> 0x4728 v
4724: %r10_0 = -1
4728: store_word %r11_0, MC0_DRAM_DATA
472c: %r10_0 = xor %r11_0, -1
4730: store_word %r11_0, MC1_DRAM_DATA
4734: store_word_0_100 %r10_0, MC0_DRAM_DATA
4738: store_word_0_100 %r10_0, MC0_DRAM_DATA
473c: store_word_0_100 %r10_0, MC0_DRAM_DATA
4740: store_word_0_100 %r10_0, MC0_DRAM_DATA
4744: store_word_0_100 %r10_0, MC0_DRAM_DATA
4748: store_word_0_100 %r10_0, MC0_DRAM_DATA
474c: store_word_0_100 %r10_0, MC0_DRAM_DATA
4750: store_word_0_100 %r10_0, MC0_DRAM_DATA
4754: %r10_0 = 0
4758: %r11_1 = rotlw_by_25_then_and %r10_1, 1
475c: beq %r11_1, 1 -> 0x4764 v
4760: %r10_0 = -1
4764: store_word %r11_0, MC0_DRAM_DATA
4768: %r10_0 = xor %r11_0, -1
476c: store_word %r11_0, MC1_DRAM_DATA
4770: store_word_0_100 %r10_0, MC0_DRAM_DATA
4774: store_word_0_100 %r10_0, MC0_DRAM_DATA
4778: store_word_0_100 %r10_0, MC0_DRAM_DATA
477c: store_word_0_100 %r10_0, MC0_DRAM_DATA
4780: %r10_0 = xor %r10_0, -1
4784: store_word_0_100 %r10_0, MC0_DRAM_DATA
4788: store_word_0_100 %r10_0, MC0_DRAM_DATA
478c: %r10_0 = xor %r10_0, -1
4790: store_word_0_100 %r10_0, MC0_DRAM_DATA
4794: store_word_0_100 %r10_0, MC0_DRAM_DATA
4798: %r10_0 = xor %r10_0, -1
479c: %r10_0 = 0x0f2c0000
47a4: %r11_1 = rotlw_by_1_then_and %r10_1, 0x00008000
47ac: %r10_0 = or %r11_0, %r11_1
47b0: %r11_1 = rotlw_by_5_then_and %r10_1, 0x00010000
47b8: %r10_0 = or %r11_0, %r11_1
47bc: %r11_1 = rotlw_by_2_then_and %r10_1, 0x00020000
47c4: %r10_0 = or %r11_0, %r11_1
47c8: %r11_1 = rotlw_by_16_then_and %r10_1, 0x00001fff
47d0: %r10_0 = or %r11_0, %r11_1
47d4: store_word_0_100 %r11_0, MC0_DRAM_CMD
47d8: %r10_0 = and %r11_0, 0x0003e000
47e0: %r10_0 = xor %r11_0, 0x00008000
47e8: %r10_0 = or %r11_0, 0x012c0000
47f0: store_word_0_100 %r11_0, MC0_DRAM_CMD
47f4: %r10_0 = xor %r11_0, 0x00008000
47fc: %r10_0 = and %r11_0, 0x0003e000
4804: %r10_0 = or %r11_0, 0x01b00000
480c: %r11_1 = rotlw_by_29_then_and %r10_1, 0x0000000f
4814: %r10_0 = or %r11_0, %r11_1
4818: %r11_1 = rotlw_by_28_then_and %r10_1, 0x00000070
4820: %r10_0 = or %r11_0, %r11_1
4824: %r11_1 = rotlw_by_27_then_and %r10_1, 0x00000080
482c: %r10_0 = or %r11_0, %r11_1
4830: %r11_1 = rotlw_by_28_then_and %r10_1, 0x00000200
4838: %r10_0 = or %r11_0, %r11_1
483c: store_word_0_100 %r11_0, MC0_DRAM_CMD
4840: %r10_0 = or %r11_0, 0x02000000
4848: store_word_0_100 %r11_0, MC0_DRAM_CMD
484c: %r10_0 = and %r11_0, 0x0003e000
4854: %r10_0 = xor %r11_0, 0x00010000
485c: %r10_0 = or %r11_0, 0x1f2c0000
4864: store_word_0_100 %r11_0, MC0_DRAM_CMD
4868: %r10_0 = xor %r11_0, 0x00010000
4870: %r10_0 = and %r11_0, 0x0003e000
4878: %r10_0 = or %r11_0, 0x1f280000
4880: store_word_0_100 %r11_0, MC0_DRAM_CMD
4884: %r10_0 = xor %r11_0, 0x00008000
488c: store_word_0_100 %r11_0, MC0_DRAM_CMD
4890: %r10_0 = xor %r11_0, 0x00008000
4898: %r10_0 = xor %r11_0, 0x00010000
48a0: store_word_0_100 %r11_0, MC0_DRAM_CMD
48a4: %r10_0 = xor %r11_0, 0x00010000
48ac: store_word_0_100 2, MC0_CNTL
48b0: store_word_0_100 0x00001605, MC0_CNTL
48b8: store_word_0_100 0x00000605, MC0_CNTL
48c0: %r10_1 = add %r10_1, 0x00000020
48c8: store_word_0_100 0, MC0_CNTL
48cc: store_word_0_100 0, MC0_POINTER
48d0: %r10_0 = 0
48d4: %r11_1 = rotlw_by_25_then_and %r10_1, 1
48d8: beq %r11_1, 1 -> 0x48e0 v
48dc: %r10_0 = -1
48e0: store_word %r11_0, MC0_DRAM_DATA
48e4: %r10_0 = xor %r11_0, -1
48e8: store_word %r11_0, MC1_DRAM_DATA
48ec: store_word_0_100 %r10_0, MC0_DRAM_DATA
48f0: store_word_0_100 %r10_0, MC0_DRAM_DATA
48f4: store_word_0_100 %r10_0, MC0_DRAM_DATA
48f8: store_word_0_100 %r10_0, MC0_DRAM_DATA
48fc: store_word_0_100 %r10_0, MC0_DRAM_DATA
4900: store_word_0_100 %r10_0, MC0_DRAM_DATA
4904: store_word_0_100 %r10_0, MC0_DRAM_DATA
4908: store_word_0_100 %r10_0, MC0_DRAM_DATA
490c: %r10_0 = 0
4910: %r11_1 = rotlw_by_25_then_and %r10_1, 1
4914: beq %r11_1, 1 -> 0x491c v
4918: %r10_0 = -1
491c: store_word %r11_0, MC0_DRAM_DATA
4920: %r10_0 = xor %r11_0, -1
4924: store_word %r11_0, MC1_DRAM_DATA
4928: store_word_0_100 %r10_0, MC0_DRAM_DATA
492c: store_word_0_100 %r10_0, MC0_DRAM_DATA
4930: %r10_0 = xor %r10_0, -1
4934: store_word_0_100 %r10_0, MC0_DRAM_DATA
4938: store_word_0_100 %r10_0, MC0_DRAM_DATA
493c: %r10_0 = xor %r10_0, -1
4940: store_word_0_100 %r10_0, MC0_DRAM_DATA
4944: store_word_0_100 %r10_0, MC0_DRAM_DATA
4948: %r10_0 = xor %r10_0, -1
494c: store_word_0_100 %r10_0, MC0_DRAM_DATA
4950: store_word_0_100 %r10_0, MC0_DRAM_DATA
4954: %r10_0 = 0x0f2c0000
495c: %r11_1 = rotlw_by_1_then_and %r10_1, 0x00008000
4964: %r10_0 = or %r11_0, %r11_1
4968: %r11_1 = rotlw_by_5_then_and %r10_1, 0x00010000
4970: %r10_0 = or %r11_0, %r11_1
4974: %r11_1 = rotlw_by_2_then_and %r10_1, 0x00020000
497c: %r10_0 = or %r11_0, %r11_1
4980: %r11_1 = rotlw_by_16_then_and %r10_1, 0x00001fff
4988: %r10_0 = or %r11_0, %r11_1
498c: store_word_0_100 %r11_0, MC0_DRAM_CMD
4990: %r10_0 = and %r11_0, 0x0003e000
4998: %r10_0 = xor %r11_0, 0x00008000
49a0: %r10_0 = or %r11_0, 0x012c0000
49a8: store_word_0_100 %r11_0, MC0_DRAM_CMD
49ac: %r10_0 = xor %r11_0, 0x00008000
49b4: %r10_0 = and %r11_0, 0x0003e000
49bc: %r10_0 = or %r11_0, 0x01b00000
49c4: %r11_1 = rotlw_by_29_then_and %r10_1, 0x0000000f
49cc: %r10_0 = or %r11_0, %r11_1
49d0: %r11_1 = rotlw_by_28_then_and %r10_1, 0x00000070
49d8: %r10_0 = or %r11_0, %r11_1
49dc: %r11_1 = rotlw_by_27_then_and %r10_1, 0x00000080
49e4: %r10_0 = or %r11_0, %r11_1
49e8: %r11_1 = rotlw_by_28_then_and %r10_1, 0x00000200
49f0: %r10_0 = or %r11_0, %r11_1
49f4: store_word_0_100 %r11_0, MC0_DRAM_CMD
49f8: %r10_0 = or %r11_0, 0x02000000
4a00: store_word_0_100 %r11_0, MC0_DRAM_CMD
4a04: %r10_0 = and %r11_0, 0x0003e000
4a0c: %r10_0 = xor %r11_0, 0x00010000
4a14: %r10_0 = or %r11_0, 0x1f2c0000
4a1c: store_word_0_100 %r11_0, MC0_DRAM_CMD
4a20: %r10_0 = xor %r11_0, 0x00010000
4a28: %r10_0 = and %r11_0, 0x0003e000
4a30: %r10_0 = or %r11_0, 0x1f280000
4a38: store_word_0_100 %r11_0, MC0_DRAM_CMD
4a3c: %r10_0 = xor %r11_0, 0x00008000
4a44: store_word_0_100 %r11_0, MC0_DRAM_CMD
4a48: %r10_0 = xor %r11_0, 0x00008000
4a50: %r10_0 = xor %r11_0, 0x00010000
4a58: store_word_0_100 %r11_0, MC0_DRAM_CMD
4a5c: %r10_0 = xor %r11_0, 0x00010000
4a64: store_word_0_100 2, MC0_CNTL
4a68: store_word_0_100 0x00001605, MC0_CNTL
4a70: store_word_0_100 0x00000605, MC0_CNTL
4a78: %r10_1 = add %r10_1, 0x00000020
4a80: store_word_0_100 0, MC0_CNTL
4a84: store_word_0_100 0, MC0_POINTER
4a88: %r10_0 = 0
4a8c: %r11_1 = rotlw_by_25_then_and %r10_1, 1
4a90: beq %r11_1, 1 -> 0x4a98 v
4a94: %r10_0 = -1
4a98: store_word %r11_0, MC0_DRAM_DATA
4a9c: %r10_0 = xor %r11_0, -1
4aa0: store_word %r11_0, MC1_DRAM_DATA
4aa4: store_word_0_100 %r10_0, MC0_DRAM_DATA
4aa8: store_word_0_100 %r10_0, MC0_DRAM_DATA
4aac: store_word_0_100 %r10_0, MC0_DRAM_DATA
4ab0: store_word_0_100 %r10_0, MC0_DRAM_DATA
4ab4: store_word_0_100 %r10_0, MC0_DRAM_DATA
4ab8: store_word_0_100 %r10_0, MC0_DRAM_DATA
4abc: store_word_0_100 %r10_0, MC0_DRAM_DATA
4ac0: store_word_0_100 %r10_0, MC0_DRAM_DATA
4ac4: %r10_0 = 0
4ac8: %r11_1 = rotlw_by_25_then_and %r10_1, 1
4acc: beq %r11_1, 1 -> 0x4ad4 v
4ad0: %r10_0 = -1
4ad4: store_word %r11_0, MC0_DRAM_DATA
4ad8: %r10_0 = xor %r11_0, -1
4adc: store_word %r11_0, MC1_DRAM_DATA
4ae0: store_word_0_100 %r10_0, MC0_DRAM_DATA
4ae4: store_word_0_100 %r10_0, MC0_DRAM_DATA
4ae8: %r10_0 = xor %r10_0, -1
4aec: store_word_0_100 %r10_0, MC0_DRAM_DATA
4af0: store_word_0_100 %r10_0, MC0_DRAM_DATA
4af4: %r10_0 = xor %r10_0, -1
4af8: store_word_0_100 %r10_0, MC0_DRAM_DATA
4afc: store_word_0_100 %r10_0, MC0_DRAM_DATA
4b00: %r10_0 = xor %r10_0, -1
4b04: store_word_0_100 %r10_0, MC0_DRAM_DATA
4b08: store_word_0_100 %r10_0, MC0_DRAM_DATA
4b0c: %r10_0 = 0x0f2c0000
4b14: %r11_1 = rotlw_by_1_then_and %r10_1, 0x00008000
4b1c: %r10_0 = or %r11_0, %r11_1
4b20: %r11_1 = rotlw_by_5_then_and %r10_1, 0x00010000
4b28: %r10_0 = or %r11_0, %r11_1
4b2c: %r11_1 = rotlw_by_2_then_and %r10_1, 0x00020000
4b34: %r10_0 = or %r11_0, %r11_1
4b38: %r11_1 = rotlw_by_16_then_and %r10_1, 0x00001fff
4b40: %r10_0 = or %r11_0, %r11_1
4b44: store_word_0_100 %r11_0, MC0_DRAM_CMD
4b48: %r10_0 = and %r11_0, 0x0003e000
4b50: %r10_0 = xor %r11_0, 0x00008000
4b58: %r10_0 = or %r11_0, 0x012c0000
4b60: store_word_0_100 %r11_0, MC0_DRAM_CMD
4b64: %r10_0 = xor %r11_0, 0x00008000
4b6c: %r10_0 = and %r11_0, 0x0003e000
4b74: %r10_0 = or %r11_0, 0x01b00000
4b7c: %r11_1 = rotlw_by_29_then_and %r10_1, 0x0000000f
4b84: %r10_0 = or %r11_0, %r11_1
4b88: %r11_1 = rotlw_by_28_then_and %r10_1, 0x00000070
4b90: %r10_0 = or %r11_0, %r11_1
4b94: %r11_1 = rotlw_by_27_then_and %r10_1, 0x00000080
4b9c: %r10_0 = or %r11_0, %r11_1
4ba0: %r11_1 = rotlw_by_28_then_and %r10_1, 0x00000200
4ba8: %r10_0 = or %r11_0, %r11_1
4bac: store_word_0_100 %r11_0, MC0_DRAM_CMD
4bb0: %r10_0 = or %r11_0, 0x02000000
4bb8: store_word_0_100 %r11_0, MC0_DRAM_CMD
4bbc: %r10_0 = and %r11_0, 0x0003e000
4bc4: %r10_0 = xor %r11_0, 0x00010000
4bcc: %r10_0 = or %r11_0, 0x1f2c0000
4bd4: store_word_0_100 %r11_0, MC0_DRAM_CMD
4bd8: %r10_0 = xor %r11_0, 0x00010000
4be0: %r10_0 = and %r11_0, 0x0003e000
4be8: %r10_0 = or %r11_0, 0x1f280000
4bf0: store_word_0_100 %r11_0, MC0_DRAM_CMD
4bf4: %r10_0 = xor %r11_0, 0x00008000
4bfc: store_word_0_100 %r11_0, MC0_DRAM_CMD
4c00: %r10_0 = xor %r11_0, 0x00008000
4c08: %r10_0 = xor %r11_0, 0x00010000
4c10: store_word_0_100 %r11_0, MC0_DRAM_CMD
4c14: %r10_0 = xor %r11_0, 0x00010000
4c1c: store_word_0_100 2, MC0_CNTL
4c20: store_word_0_100 0x00001605, MC0_CNTL
4c28: store_word_0_100 0x00000605, MC0_CNTL
4c30: %r10_1 = add %r10_1, 0x00000020
4c38: store_word_0_100 0, MC0_CNTL
4c3c: store_word_0_100 0, MC0_POINTER
4c40: %r10_0 = 0
4c44: %r11_1 = rotlw_by_25_then_and %r10_1, 1
4c48: beq %r11_1, 1 -> 0x4c50 v
4c4c: %r10_0 = -1
4c50: store_word %r11_0, MC0_DRAM_DATA
4c54: %r10_0 = xor %r11_0, -1
4c58: store_word %r11_0, MC1_DRAM_DATA
4c5c: store_word_0_100 %r10_0, MC0_DRAM_DATA
4c60: store_word_0_100 %r10_0, MC0_DRAM_DATA
4c64: store_word_0_100 %r10_0, MC0_DRAM_DATA
4c68: store_word_0_100 %r10_0, MC0_DRAM_DATA
4c6c: store_word_0_100 %r10_0, MC0_DRAM_DATA
4c70: store_word_0_100 %r10_0, MC0_DRAM_DATA
4c74: store_word_0_100 %r10_0, MC0_DRAM_DATA
4c78: store_word_0_100 %r10_0, MC0_DRAM_DATA
4c7c: %r10_0 = 0
4c80: %r11_1 = rotlw_by_25_then_and %r10_1, 1
4c84: beq %r11_1, 1 -> 0x4c8c v
4c88: %r10_0 = -1
4c8c: store_word %r11_0, MC0_DRAM_DATA
4c90: %r10_0 = xor %r11_0, -1
4c94: store_word %r11_0, MC1_DRAM_DATA
4c98: store_word_0_100 %r10_0, MC0_DRAM_DATA
4c9c: store_word_0_100 %r10_0, MC0_DRAM_DATA
4ca0: store_word_0_100 %r10_0, MC0_DRAM_DATA
4ca4: store_word_0_100 %r10_0, MC0_DRAM_DATA
4ca8: %r10_0 = xor %r10_0, -1
4cac: store_word_0_100 %r10_0, MC0_DRAM_DATA
4cb0: store_word_0_100 %r10_0, MC0_DRAM_DATA
4cb4: %r10_0 = xor %r10_0, -1
4cb8: store_word_0_100 %r10_0, MC0_DRAM_DATA
4cbc: store_word_0_100 %r10_0, MC0_DRAM_DATA
4cc0: %r10_0 = xor %r10_0, -1
4cc4: %r10_0 = 0x0f2c0000
4ccc: %r11_1 = rotlw_by_1_then_and %r10_1, 0x00008000
4cd4: %r10_0 = or %r11_0, %r11_1
4cd8: %r11_1 = rotlw_by_5_then_and %r10_1, 0x00010000
4ce0: %r10_0 = or %r11_0, %r11_1
4ce4: %r11_1 = rotlw_by_2_then_and %r10_1, 0x00020000
4cec: %r10_0 = or %r11_0, %r11_1
4cf0: %r11_1 = rotlw_by_16_then_and %r10_1, 0x00001fff
4cf8: %r10_0 = or %r11_0, %r11_1
4cfc: store_word_0_100 %r11_0, MC0_DRAM_CMD
4d00: %r10_0 = and %r11_0, 0x0003e000
4d08: %r10_0 = xor %r11_0, 0x00008000
4d10: %r10_0 = or %r11_0, 0x012c0000
4d18: store_word_0_100 %r11_0, MC0_DRAM_CMD
4d1c: %r10_0 = xor %r11_0, 0x00008000
4d24: %r10_0 = and %r11_0, 0x0003e000
4d2c: %r10_0 = or %r11_0, 0x01b00000
4d34: %r11_1 = rotlw_by_29_then_and %r10_1, 0x0000000f
4d3c: %r10_0 = or %r11_0, %r11_1
4d40: %r11_1 = rotlw_by_28_then_and %r10_1, 0x00000070
4d48: %r10_0 = or %r11_0, %r11_1
4d4c: %r11_1 = rotlw_by_27_then_and %r10_1, 0x00000080
4d54: %r10_0 = or %r11_0, %r11_1
4d58: %r11_1 = rotlw_by_28_then_and %r10_1, 0x00000200
4d60: %r10_0 = or %r11_0, %r11_1
4d64: store_word_0_100 %r11_0, MC0_DRAM_CMD
4d68: %r10_0 = or %r11_0, 0x02000000
4d70: store_word_0_100 %r11_0, MC0_DRAM_CMD
4d74: %r10_0 = and %r11_0, 0x0003e000
4d7c: %r10_0 = xor %r11_0, 0x00010000
4d84: %r10_0 = or %r11_0, 0x1f2c0000
4d8c: store_word_0_100 %r11_0, MC0_DRAM_CMD
4d90: %r10_0 = xor %r11_0, 0x00010000
4d98: %r10_0 = and %r11_0, 0x0003e000
4da0: %r10_0 = or %r11_0, 0x1f280000
4da8: store_word_0_100 %r11_0, MC0_DRAM_CMD
4dac: %r10_0 = xor %r11_0, 0x00008000
4db4: store_word_0_100 %r11_0, MC0_DRAM_CMD
4db8: %r10_0 = xor %r11_0, 0x00008000
4dc0: %r10_0 = xor %r11_0, 0x00010000
4dc8: store_word_0_100 %r11_0, MC0_DRAM_CMD
4dcc: %r10_0 = xor %r11_0, 0x00010000
4dd4: store_word_0_100 2, MC0_CNTL
4dd8: store_word_0_100 0x00001605, MC0_CNTL
4de0: store_word_0_100 0x00000605, MC0_CNTL
4de8: %r10_1 = add %r10_1, 0x00000020
4df0: store_word_0_100 0, MC0_CNTL
4df4: store_word_0_100 0, MC0_POINTER
4df8: %r10_0 = 0
4dfc: %r11_1 = rotlw_by_25_then_and %r10_1, 1
4e00: beq %r11_1, 1 -> 0x4e08 v
4e04: %r10_0 = -1
4e08: store_word %r11_0, MC0_DRAM_DATA
4e0c: %r10_0 = xor %r11_0, -1
4e10: store_word %r11_0, MC1_DRAM_DATA
4e14: store_word_0_100 %r10_0, MC0_DRAM_DATA
4e18: store_word_0_100 %r10_0, MC0_DRAM_DATA
4e1c: store_word_0_100 %r10_0, MC0_DRAM_DATA
4e20: store_word_0_100 %r10_0, MC0_DRAM_DATA
4e24: store_word_0_100 %r10_0, MC0_DRAM_DATA
4e28: store_word_0_100 %r10_0, MC0_DRAM_DATA
4e2c: store_word_0_100 %r10_0, MC0_DRAM_DATA
4e30: store_word_0_100 %r10_0, MC0_DRAM_DATA
4e34: %r10_0 = 0
4e38: %r11_1 = rotlw_by_25_then_and %r10_1, 1
4e3c: beq %r11_1, 1 -> 0x4e44 v
4e40: %r10_0 = -1
4e44: store_word %r11_0, MC0_DRAM_DATA
4e48: %r10_0 = xor %r11_0, -1
4e4c: store_word %r11_0, MC1_DRAM_DATA
4e50: store_word_0_100 %r10_0, MC0_DRAM_DATA
4e54: store_word_0_100 %r10_0, MC0_DRAM_DATA
4e58: store_word_0_100 %r10_0, MC0_DRAM_DATA
4e5c: store_word_0_100 %r10_0, MC0_DRAM_DATA
4e60: %r10_0 = xor %r10_0, -1
4e64: store_word_0_100 %r10_0, MC0_DRAM_DATA
4e68: store_word_0_100 %r10_0, MC0_DRAM_DATA
4e6c: %r10_0 = xor %r10_0, -1
4e70: store_word_0_100 %r10_0, MC0_DRAM_DATA
4e74: store_word_0_100 %r10_0, MC0_DRAM_DATA
4e78: %r10_0 = xor %r10_0, -1
4e7c: %r10_0 = 0x0f2c0000
4e84: %r11_1 = rotlw_by_1_then_and %r10_1, 0x00008000
4e8c: %r10_0 = or %r11_0, %r11_1
4e90: %r11_1 = rotlw_by_5_then_and %r10_1, 0x00010000
4e98: %r10_0 = or %r11_0, %r11_1
4e9c: %r11_1 = rotlw_by_2_then_and %r10_1, 0x00020000
4ea4: %r10_0 = or %r11_0, %r11_1
4ea8: %r11_1 = rotlw_by_16_then_and %r10_1, 0x00001fff
4eb0: %r10_0 = or %r11_0, %r11_1
4eb4: store_word_0_100 %r11_0, MC0_DRAM_CMD
4eb8: %r10_0 = and %r11_0, 0x0003e000
4ec0: %r10_0 = xor %r11_0, 0x00008000
4ec8: %r10_0 = or %r11_0, 0x012c0000
4ed0: store_word_0_100 %r11_0, MC0_DRAM_CMD
4ed4: %r10_0 = xor %r11_0, 0x00008000
4edc: %r10_0 = and %r11_0, 0x0003e000
4ee4: %r10_0 = or %r11_0, 0x01b00000
4eec: %r11_1 = rotlw_by_29_then_and %r10_1, 0x0000000f
4ef4: %r10_0 = or %r11_0, %r11_1
4ef8: %r11_1 = rotlw_by_28_then_and %r10_1, 0x00000070
4f00: %r10_0 = or %r11_0, %r11_1
4f04: %r11_1 = rotlw_by_27_then_and %r10_1, 0x00000080
4f0c: %r10_0 = or %r11_0, %r11_1
4f10: %r11_1 = rotlw_by_28_then_and %r10_1, 0x00000200
4f18: %r10_0 = or %r11_0, %r11_1
4f1c: store_word_0_100 %r11_0, MC0_DRAM_CMD
4f20: %r10_0 = or %r11_0, 0x02000000
4f28: store_word_0_100 %r11_0, MC0_DRAM_CMD
4f2c: %r10_0 = and %r11_0, 0x0003e000
4f34: %r10_0 = xor %r11_0, 0x00010000
4f3c: %r10_0 = or %r11_0, 0x1f2c0000
4f44: store_word_0_100 %r11_0, MC0_DRAM_CMD
4f48: %r10_0 = xor %r11_0, 0x00010000
4f50: %r10_0 = and %r11_0, 0x0003e000
4f58: %r10_0 = or %r11_0, 0x1f280000
4f60: store_word_0_100 %r11_0, MC0_DRAM_CMD
4f64: %r10_0 = xor %r11_0, 0x00008000
4f6c: store_word_0_100 %r11_0, MC0_DRAM_CMD
4f70: %r10_0 = xor %r11_0, 0x00008000
4f78: %r10_0 = xor %r11_0, 0x00010000
4f80: store_word_0_100 %r11_0, MC0_DRAM_CMD
4f84: %r10_0 = xor %r11_0, 0x00010000
4f8c: store_word_0_100 2, MC0_CNTL
4f90: store_word_0_100 0x00001605, MC0_CNTL
4f98: store_word_0_100 0x00000605, MC0_CNTL
4fa0: %r10_1 = add %r10_1, 0x00000020
4fa8: return
4fac: %r10_1 = 0x00001800
4fb4: %r10_0 = 0x01800180
4fbc: call 0x41e8
4fc0: %r10_0 = 0x02400240
4fc8: call 0x41e8
4fcc: %r10_0 = 0x04200420
4fd4: call 0x41e8
4fd8: %r10_0 = 0x08100810
4fe0: call 0x41e8
4fe4: %r10_0 = 0x10081008
4fec: call 0x41e8
4ff0: %r10_0 = 0x20042004
4ff8: call 0x41e8
4ffc: %r10_0 = 0x40024002
5004: call 0x41e8
5008: %r10_0 = 0x80018001
5010: call 0x41e8
5014: return
5018: %r10_0 = load_word -4
501c: %r11_1 = xor %r11_1, %r10_0
5020: %r12_1 = or %r12_1, %r11_1
5024: %r10_1 = add %r10_1, 0x00000008
502c: %r10_0 = xor %r10_0, -1
5030: %r10_0 = load_word -4
5034: %r11_1 = xor %r11_1, %r10_0
5038: %r12_1 = or %r12_1, %r11_1
503c: %r10_1 = add %r10_1, 0x00000008
5044: %r10_0 = xor %r10_0, -1
5048: %r10_0 = load_word -4
504c: %r11_1 = xor %r11_1, %r10_0
5050: %r12_1 = or %r12_1, %r11_1
5054: %r10_1 = add %r10_1, 0x00000008
505c: %r10_0 = xor %r10_0, -1
5060: %r10_0 = load_word -4
5064: %r11_1 = xor %r11_1, %r10_0
5068: %r12_1 = or %r12_1, %r11_1
506c: %r10_1 = add %r10_1, 0x00000008
5074: %r10_0 = load_word -4
5078: %r11_1 = xor %r11_1, %r10_0
507c: %r12_1 = or %r12_1, %r11_1
5080: %r10_1 = add %r10_1, 0x00000008
5088: %r10_0 = xor %r10_0, -1
508c: %r10_0 = load_word -4
5090: %r11_1 = xor %r11_1, %r10_0
5094: %r12_1 = or %r12_1, %r11_1
5098: %r10_1 = add %r10_1, 0x00000008
50a0: %r10_0 = xor %r10_0, -1
50a4: %r10_0 = load_word -4
50a8: %r11_1 = xor %r11_1, %r10_0
50ac: %r12_1 = or %r12_1, %r11_1
50b0: %r10_1 = add %r10_1, 0x00000008
50b8: %r10_0 = xor %r10_0, -1
50bc: %r10_0 = load_word -4
50c0: %r11_1 = xor %r11_1, %r10_0
50c4: %r12_1 = or %r12_1, %r11_1
50c8: %r10_1 = add %r10_1, 0x00000008
50d0: %r10_1 = add %r10_1, 0x000000c0
50d8: return
50dc: %r12_1 = 0
50e0: store_word_0_100 0x00001605, MC0_CNTL
50e8: store_word_0_100 0x00000605, MC0_CNTL
50f0: %r10_0 = 0x01800180
50f8: call 0x5018
50fc: %r10_0 = 0x02400240
5104: call 0x5018
5108: %r10_0 = 0x04200420
5110: call 0x5018
5114: %r10_0 = 0x08100810
511c: call 0x5018
5120: %r10_0 = 0x10081008
5128: call 0x5018
512c: %r10_0 = 0x20042004
5134: call 0x5018
5138: %r10_0 = 0x40024002
5140: call 0x5018
5144: %r10_0 = 0x80018001
514c: call 0x5018
5150: %r12_0 = %r12_1
5154: %r12_1 = 0
5158: store_word %r10_0, 0xe40015e0
515c: %r10_0 = *(0xe40015e8)
5160: %r10_0 = rotlw_by_30_then_and %r10_0, 1
5164: bne %r10_0, 1 -> 0x5170 v
5168: %r10_0 = *(0xe40015e0)
516c: jmp 0x520c v
5170: %r10_0 = *(0xe40015e0)
5174: %r10_0 = load_word -4
5178: %r11_1 = rotlw_by_31_then_and %r11_1, 0x7fffffff
5180: %r10_1 = add %r10_1, %r11_1
5184: %r10_1 = subf %r10_1, 0x00000800
518c: store_word_0_100 0x00001605, MC0_CNTL
5194: store_word_0_100 0x00000605, MC0_CNTL
519c: %r10_0 = 0x01800180
51a4: call 0x5018
51a8: %r10_0 = 0x02400240
51b0: call 0x5018
51b4: %r10_0 = 0x04200420
51bc: call 0x5018
51c0: %r10_0 = 0x08100810
51c8: call 0x5018
51cc: %r10_0 = 0x10081008
51d4: call 0x5018
51d8: %r10_0 = 0x20042004
51e0: call 0x5018
51e4: %r10_0 = 0x40024002
51ec: call 0x5018
51f0: %r10_0 = 0x80018001
51f8: call 0x5018
51fc: %r10_0 = load_word -4
5200: %r11_1 = rotlw_by_31_then_and %r11_1, 0x7fffffff
5208: %r10_1 = subf %r10_1, %r11_1
520c: return
5210: %r10_0 = xor %r10_0, -1
5214: %r10_0 = load_word -1
5218: %r12_0 = xor %r13_0, %r10_0
521c: %r12_1 = or %r12_1, %r13_0
5220: %r12_0 = xor %r13_0, -1
5224: %r12_0 = or %r12_0, %r13_0
5228: %r10_1 = add %r10_1, 0x00000008
5230: %r10_0 = xor %r10_0, -1
5234: %r10_0 = load_word -1
5238: %r12_0 = xor %r13_0, %r10_0
523c: %r12_1 = or %r12_1, %r13_0
5240: %r12_0 = xor %r13_0, -1
5244: %r12_0 = or %r12_0, %r13_0
5248: %r10_1 = add %r10_1, 0x00000008
5250: %r10_0 = xor %r10_0, -1
5254: %r10_1 = add %r10_1, 0x00000010
525c: %r10_0 = xor %r10_0, -1
5260: %r10_0 = load_word -1
5264: %r12_0 = xor %r13_0, %r10_0
5268: %r12_1 = or %r12_1, %r13_0
526c: %r12_0 = xor %r13_0, -1
5270: %r12_0 = or %r12_0, %r13_0
5274: %r10_1 = add %r10_1, 0x00000008
527c: %r10_0 = xor %r10_0, -1
5280: %r10_0 = load_word -1
5284: %r12_0 = xor %r13_0, %r10_0
5288: %r12_1 = or %r12_1, %r13_0
528c: %r12_0 = xor %r13_0, -1
5290: %r12_0 = or %r12_0, %r13_0
5294: %r10_1 = add %r10_1, 0x00000008
529c: %r10_0 = xor %r10_0, -1
52a0: %r10_1 = add %r10_1, 0x00000010
52a8: %r10_1 = add %r10_1, 0x000000c0
52b0: return
52b4: %r12_0 = 0
52b8: %r12_1 = 0
52bc: %r10_0 = 0x01800180
52c4: call 0x5210
52c8: %r10_0 = 0x02400240
52d0: call 0x5210
52d4: %r10_0 = 0x04200420
52dc: call 0x5210
52e0: %r10_0 = 0x08100810
52e8: call 0x5210
52ec: %r10_0 = 0x10081008
52f4: call 0x5210
52f8: %r10_0 = 0x20042004
5300: call 0x5210
5304: %r10_0 = 0x40024002
530c: call 0x5210
5310: %r10_0 = 0x80018001
5318: call 0x5210
531c: %r10_0 = or %r11_0, %r12_0
5320: %r11_1 = or %r11_1, %r12_1
5324: return
5328: %r10_0 = xor %r10_0, -1
532c: %r10_0 = load_word -1
5330: %r12_0 = xor %r13_0, %r10_0
5334: %r12_1 = or %r12_1, %r13_0
5338: %r12_0 = xor %r13_0, -1
533c: %r12_0 = or %r12_0, %r13_0
5340: %r10_1 = add %r10_1, 0x00000008
5348: %r10_0 = xor %r10_0, -1
534c: %r10_0 = load_word -1
5350: %r12_0 = xor %r13_0, %r10_0
5354: %r12_1 = or %r12_1, %r13_0
5358: %r12_0 = xor %r13_0, -1
535c: %r12_0 = or %r12_0, %r13_0
5360: %r10_1 = add %r10_1, 0x00000008
5368: %r10_0 = xor %r10_0, -1
536c: %r10_1 = add %r10_1, 0x00000010
5374: %r10_0 = xor %r10_0, -1
5378: %r10_0 = load_word -1
537c: %r12_0 = xor %r13_0, %r10_0
5380: %r12_1 = or %r12_1, %r13_0
5384: %r12_0 = xor %r13_0, -1
5388: %r12_0 = or %r12_0, %r13_0
538c: %r10_1 = add %r10_1, 0x00000008
5394: %r10_0 = xor %r10_0, -1
5398: %r10_0 = load_word -1
539c: %r12_0 = xor %r13_0, %r10_0
53a0: %r12_1 = or %r12_1, %r13_0
53a4: %r12_0 = xor %r13_0, -1
53a8: %r12_0 = or %r12_0, %r13_0
53ac: %r10_1 = add %r10_1, 0x00000008
53b4: %r10_0 = xor %r10_0, -1
53b8: %r10_1 = add %r10_1, 0x00000010
53c0: %r10_1 = add %r10_1, 0x00000008
53c8: %r10_0 = xor %r10_0, -1
53cc: %r10_0 = load_word -1
53d0: %r12_0 = xor %r13_0, %r10_0
53d4: %r12_1 = or %r12_1, %r13_0
53d8: %r12_0 = xor %r13_0, -1
53dc: %r12_0 = or %r12_0, %r13_0
53e0: %r10_1 = add %r10_1, 0x00000008
53e8: %r10_0 = xor %r10_0, -1
53ec: %r10_0 = load_word -1
53f0: %r12_0 = xor %r13_0, %r10_0
53f4: %r12_1 = or %r12_1, %r13_0
53f8: %r12_0 = xor %r13_0, -1
53fc: %r12_0 = or %r12_0, %r13_0
5400: %r10_1 = add %r10_1, 0x00000008
5408: %r10_0 = xor %r10_0, -1
540c: %r10_1 = add %r10_1, 0x00000010
5414: %r10_0 = xor %r10_0, -1
5418: %r10_0 = load_word -1
541c: %r12_0 = xor %r13_0, %r10_0
5420: %r12_1 = or %r12_1, %r13_0
5424: %r12_0 = xor %r13_0, -1
5428: %r12_0 = or %r12_0, %r13_0
542c: %r10_1 = add %r10_1, 0x00000008
5434: %r10_0 = xor %r10_0, -1
5438: %r10_0 = load_word -1
543c: %r12_0 = xor %r13_0, %r10_0
5440: %r12_1 = or %r12_1, %r13_0
5444: %r12_0 = xor %r13_0, -1
5448: %r12_0 = or %r12_0, %r13_0
544c: %r10_1 = add %r10_1, 0x00000008
5454: %r10_0 = xor %r10_0, -1
5458: %r10_1 = add %r10_1, 0x00000010
5460: %r10_1 = add %r10_1, 0x00000078
5468: return
546c: store_word %r12_0, 0xe400001c
5470: %r12_0 = 0
5474: %r12_1 = 0
5478: %r10_0 = 0x01800180
5480: call 0x5328
5484: %r10_0 = 0x02400240
548c: call 0x5328
5490: %r10_0 = 0x04200420
5498: call 0x5328
549c: %r10_0 = 0x08100810
54a4: call 0x5328
54a8: %r10_0 = 0x10081008
54b0: call 0x5328
54b4: %r10_0 = 0x20042004
54bc: call 0x5328
54c0: %r10_0 = 0x40024002
54c8: call 0x5328
54cc: %r10_0 = 0x80018001
54d4: call 0x5328
54d8: %r10_0 = or %r11_0, %r12_0
54dc: %r11_1 = or %r11_1, %r12_1
54e0: return
54e4: %r10_0 = and %r11_1, 0x000000ff
54ec: bne %r10_0, 0 -> 0x5504 v
54f0: %r12_0 = *(0xe400001c)
54f4: %r10_0 = and %r10_0, 0x000000ff
54fc: %r12_0 = add %r12_0, %r10_0
5500: %r12_0 = add %r13_0, 1
5504: %r10_0 = and %r11_1, 0x0000ff00
550c: bne %r10_0, 0 -> 0x5528 v
5510: %r12_0 = *(0xe400001c)
5514: %r10_0 = rotlw_by_8_then_and %r10_0, 0x00ff0000
551c: %r12_0 = add %r12_0, %r10_0
5520: %r12_0 = add %r13_0, 0x00000100
5528: %r10_0 = and %r11_1, 0x00ff0000
5530: bne %r10_0, 0 -> 0x554c v
5534: %r12_0 = *(0xe400001c)
5538: %r10_0 = rotlw_by_16_then_and %r10_0, 0x000000ff
5540: %r12_1 = add %r12_1, %r10_0
5544: %r12_0 = add %r13_0, 0x00010000
554c: %r10_0 = and %r11_1, 0xff000000
5554: bne %r10_0, 0 -> 0x5570 v
5558: %r12_0 = *(0xe400001c)
555c: %r10_0 = rotlw_by_24_then_and %r10_0, 0x00ff0000
5564: %r12_1 = add %r12_1, %r10_0
5568: %r12_0 = add %r13_0, 0x01000000
5570: return
5574: %r10_0 = and %r11_0, 0x000000ff
557c: bne %r10_0, 0 -> 0x559c v
5580: %r12_0 = *(0xe400001c)
5584: %r10_0 = and %r10_0, 0x000000ff
558c: %r12_0 = add %r12_0, %r10_0
5590: %r12_0 = subf %r12_0, 0x00000050
5598: %r12_0 = add %r13_0, 1
559c: %r10_0 = and %r11_0, 0x0000ff00
55a4: bne %r10_0, 0 -> 0x55c8 v
55a8: %r12_0 = *(0xe400001c)
55ac: %r10_0 = rotlw_by_8_then_and %r10_0, 0x00ff0000
55b4: %r12_0 = add %r12_0, %r10_0
55b8: %r12_0 = subf %r12_0, 0x00500000
55c0: %r12_0 = add %r13_0, 0x00000100
55c8: %r10_0 = and %r11_0, 0x00ff0000
55d0: bne %r10_0, 0 -> 0x55f4 v
55d4: %r12_0 = *(0xe400001c)
55d8: %r10_0 = rotlw_by_16_then_and %r10_0, 0x000000ff
55e0: %r12_1 = add %r12_1, %r10_0
55e4: %r12_1 = subf %r12_1, 0x00000050
55ec: %r12_0 = add %r13_0, 0x00010000
55f4: %r10_0 = and %r11_0, 0xff000000
55fc: bne %r10_0, 0 -> 0x5620 v
5600: %r12_0 = *(0xe400001c)
5604: %r10_0 = rotlw_by_24_then_and %r10_0, 0x00ff0000
560c: %r12_1 = add %r12_1, %r10_0
5610: %r12_1 = subf %r12_1, 0x00500000
5618: %r12_0 = add %r13_0, 0x01000000
5620: return
5624: %r10_0 = and %r11_1, 0x000000ff
562c: bne %r10_0, 0 -> 0x5644 v
5630: %r10_0 = *(0xe4000018)
5634: %r10_0 = and %r10_0, 0x000000ff
563c: %r12_0 = add %r12_0, %r10_0
5640: %r12_0 = add %r13_0, 1
5644: %r10_0 = and %r11_1, 0x0000ff00
564c: bne %r10_0, 0 -> 0x5668 v
5650: %r10_0 = *(0xe4000018)
5654: %r10_0 = and %r10_0, 0x00ff0000
565c: %r12_0 = add %r12_0, %r10_0
5660: %r12_0 = add %r13_0, 0x00000100
5668: %r10_0 = and %r11_1, 0x00ff0000
5670: bne %r10_0, 0 -> 0x568c v
5674: %r10_0 = *(0xe4000018)
5678: %r10_0 = and %r10_0, 0x000000ff
5680: %r12_1 = add %r12_1, %r10_0
5684: %r12_0 = add %r13_0, 0x00010000
568c: %r10_0 = and %r11_1, 0xff000000
5694: bne %r10_0, 0 -> 0x56b0 v
5698: %r10_0 = *(0xe4000018)
569c: %r10_0 = and %r10_0, 0x00ff0000
56a4: %r12_1 = add %r12_1, %r10_0
56a8: %r12_0 = add %r13_0, 0x01000000
56b0: return
56b4: %r10_0 = and %r11_0, 0x000000ff
56bc: bne %r10_0, 0 -> 0x56dc v
56c0: %r10_0 = *(0xe4000018)
56c4: %r10_0 = and %r10_0, 0x000000ff
56cc: %r12_0 = add %r12_0, %r10_0
56d0: %r12_0 = subf %r12_0, 0x00000050
56d8: %r12_0 = add %r13_0, 1
56dc: %r10_0 = and %r11_0, 0x0000ff00
56e4: bne %r10_0, 0 -> 0x5708 v
56e8: %r10_0 = *(0xe4000018)
56ec: %r10_0 = and %r10_0, 0x00ff0000
56f4: %r12_0 = add %r12_0, %r10_0
56f8: %r12_0 = subf %r12_0, 0x00500000
5700: %r12_0 = add %r13_0, 0x00000100
5708: %r10_0 = and %r11_0, 0x00ff0000
5710: bne %r10_0, 0 -> 0x5734 v
5714: %r10_0 = *(0xe4000018)
5718: %r10_0 = and %r10_0, 0x000000ff
5720: %r12_1 = add %r12_1, %r10_0
5724: %r12_1 = subf %r12_1, 0x00000050
572c: %r12_0 = add %r13_0, 0x00010000
5734: %r10_0 = and %r11_0, 0xff000000
573c: bne %r10_0, 0 -> 0x5760 v
5740: %r10_0 = *(0xe4000018)
5744: %r10_0 = and %r10_0, 0x00ff0000
574c: %r12_1 = add %r12_1, %r10_0
5750: %r12_1 = subf %r12_1, 0x00500000
5758: %r12_0 = add %r13_0, 0x01000000
5760: return
5764: store_word %r10_0, 0xe40015e0
5768: %r10_0 = *(0xe40015e8)
576c: %r10_0 = rotlw_by_31_then_and %r10_0, 1
5770: bne %r10_0, 1 -> 0x577c v
5774: %r10_0 = *(0xe40015e0)
5778: jmp 0x5784 v
577c: %r10_0 = *(0xe40015e0)
5780: jmp 0x5814 v
5784: %r13_1 = 0x0000000a
578c: jmp 0x3b38 ^
5790: store_word %r10_0, 0xe40015e0
5794: %r10_0 = *(0xe40015e8)
5798: %r10_0 = rotlw_by_31_then_and %r10_0, 1
579c: bne %r10_0, 1 -> 0x57a8 v
57a0: %r10_0 = *(0xe40015e0)
57a4: jmp 0x57b0 v
57a8: %r10_0 = *(0xe40015e0)
57ac: jmp 0x5814 v
57b0: %r13_1 = or %r13_1, 0x00000a00
57b8: jmp 0x3b5c ^
57bc: store_word %r10_0, 0xe40015e0
57c0: %r10_0 = *(0xe40015e8)
57c4: %r10_0 = rotlw_by_31_then_and %r10_0, 1
57c8: bne %r10_0, 1 -> 0x57d4 v
57cc: %r10_0 = *(0xe40015e0)
57d0: jmp 0x57dc v
57d4: %r10_0 = *(0xe40015e0)
57d8: jmp 0x5814 v
57dc: %r13_1 = or %r13_1, 0x000a0000
57e4: jmp 0x3b80 ^
57e8: store_word %r10_0, 0xe40015e0
57ec: %r10_0 = *(0xe40015e8)
57f0: %r10_0 = rotlw_by_31_then_and %r10_0, 1
57f4: bne %r10_0, 1 -> 0x5800 v
57f8: %r10_0 = *(0xe40015e0)
57fc: jmp 0x5808 v
5800: %r10_0 = *(0xe40015e0)
5804: jmp 0x5814 v
5808: %r13_1 = or %r13_1, 0x0a000000
5810: jmp 0x3ba4 ^
5814: op_1E %r10_0, -7
5818: op_1E 0, -7
581c: call 0x1140
5820: op_1E 0, -7
5824: op_1E 1, -7
5828: call 0x1140
582c: op_1E 1, -7
5830: op_1E 2, -7
5834: call 0x1140
5838: op_1E 2, -7
583c: op_1E 3, -7
5840: call 0x1140
5844: op_1E 3, -7
5848: store_word 0x0012129a, 0xe4000024
5850: call 0x109c
5854: %r10_0 = 0x0a0a0a0a
585c: store_word_0_100 %r10_0, MC0_RD_STR_DLY_0
5860: store_word_0_100 %r10_0, MC0_RD_STR_DLY_1
5864: %r10_0 = 0x0f0f0f0f
586c: store_word_0_100 %r10_0, MC0_WR_STR_DLL_0
5870: store_word_0_100 %r10_0, MC0_WR_STR_DLL_1
5874: %r12_0 = *(MC1_WR_STR_DLL_1)
5878: sync
587c: delay -7
5880: jmp 0x34f8 ^
5884: store_word %r10_0, 0xe40015e0
5888: %r10_0 = *(0xe40015e8)
588c: %r10_0 = rotlw_by_31_then_and %r10_0, 1
5890: bne %r10_0, 1 -> 0x589c v
5894: %r10_0 = *(0xe40015e0)
5898: jmp 0x58b0 v
589c: %r10_0 = *(0xe40015e0)
58a0: %r10_0 = load_word -4
58a4: %r11_1 = and %r11_1, 0x0000000f
58ac: bne %r11_1, 0 -> 0x5964 v
58b0: %r13_1 = 0x0000000f
58b8: jmp 0x3ec0 ^
58bc: store_word %r10_0, 0xe40015e0
58c0: %r10_0 = *(0xe40015e8)
58c4: %r10_0 = rotlw_by_31_then_and %r10_0, 1
58c8: bne %r10_0, 1 -> 0x58d4 v
58cc: %r10_0 = *(0xe40015e0)
58d0: jmp 0x58e8 v
58d4: %r10_0 = *(0xe40015e0)
58d8: %r10_0 = load_word -4
58dc: %r11_1 = and %r11_1, 0x0000000f
58e4: bne %r11_1, 0 -> 0x5964 v
58e8: %r13_1 = or %r13_1, 0x00000f00
58f0: jmp 0x3ee4 ^
58f4: store_word %r10_0, 0xe40015e0
58f8: %r10_0 = *(0xe40015e8)
58fc: %r10_0 = rotlw_by_31_then_and %r10_0, 1
5900: bne %r10_0, 1 -> 0x590c v
5904: %r10_0 = *(0xe40015e0)
5908: jmp 0x5920 v
590c: %r10_0 = *(0xe40015e0)
5910: %r10_0 = load_word -4
5914: %r11_1 = and %r11_1, 0x0000000f
591c: bne %r11_1, 0 -> 0x5964 v
5920: %r13_1 = or %r13_1, 0x000f0000
5928: jmp 0x3f08 ^
592c: store_word %r10_0, 0xe40015e0
5930: %r10_0 = *(0xe40015e8)
5934: %r10_0 = rotlw_by_31_then_and %r10_0, 1
5938: bne %r10_0, 1 -> 0x5944 v
593c: %r10_0 = *(0xe40015e0)
5940: jmp 0x5958 v
5944: %r10_0 = *(0xe40015e0)
5948: %r10_0 = load_word -4
594c: %r11_1 = and %r11_1, 0x0000000f
5954: bne %r11_1, 0 -> 0x5964 v
5958: %r13_1 = or %r13_1, 0x0f000000
5960: jmp 0x3f2c ^
5964: op_1E %r10_0, -7
5968: op_1E 0, -7
596c: call 0x1140
5970: op_1E 0, -7
5974: op_1E 1, -7
5978: call 0x1140
597c: op_1E 1, -7
5980: op_1E 2, -7
5984: call 0x1140
5988: op_1E 2, -7
598c: op_1E 3, -7
5990: call 0x1140
5994: op_1E 3, -7
5998: store_word 0x0013139a, 0xe4000024
59a0: call 0x109c
59a4: jmp 0x5854 ^
59a8: store_word 0x00000515, 0xe1020008
59b0: store_word 0x00000010, 0xe1060030
59b8: %r10_0 = load_word -5
59c0: %r10_0 = and %r11_0, 0xffffe3ff
59c8: %r10_0 = or %r11_0, 0x00001000
59d0: store_word %r11_0, 0xe1060034
59d8: %r12_0 = load_word -5
59dc: %r10_0 = or %r11_0, 0x08000000
59e4: store_word %r11_0, 0xe1040024
59e8: %r10_0 = 0x00356ca9
59f0: %r10_0 = or %r10_0, 0x02000000
59f8: store_word %r10_0, 0xe400001c
59fc: %r10_0 = *(0xe40015e8)
5a00: %r10_0 = rotlw_by_29_then_and %r10_0, 1
5a04: %r10_0 = load_word -6
5a08: %r10_1 = rotlw_by_30_then_and %r10_1, 1
5a0c: %r10_1 = rotlw_by_1_then_and %r10_1, -1
5a10: %r10_0 = or %r10_0, %r10_1
5a14: %r10_0 = load_word -6
5a18: %r10_1 = rotlw_by_28_then_and %r10_1, 1
5a1c: %r10_1 = rotlw_by_2_then_and %r10_1, -1
5a20: %r10_0 = or %r10_0, %r10_1
5a24: %r12_0 = load_word -6
5a28: %r10_1 = rotlw_by_0_then_and %r10_1, 0x0000000f
5a30: %r10_1 = rotlw_by_8_then_and %r10_1, -1
5a34: %r10_0 = or %r10_0, %r10_1
5a38: %r12_0 = load_word -6
5a3c: %r10_1 = rotlw_by_28_then_and %r10_1, 0x0000000f
5a44: %r10_1 = rotlw_by_12_then_and %r10_1, -1
5a48: %r10_0 = or %r10_0, %r10_1
5a4c: store_word %r10_0, 0xe4000020
5a50: return
