0000: store_word 0xe0000000, 0xd0008010
0008: store_half 2, 0xd0008004
000c: %r12_0 = load_half -7
0010: sync
0014: store_word 0, 0xe0020000
001c: %r10_0 = *(0xe0020000)
0024: sync
0028: store_word 0xc0000000, 0xe0020004
0034: %r10_0 = *(0xe0020004)
003c: sync
0040: store_word 0x00000018, 0xe1020004
0048: %r12_0 = *(0xe1020004)
004c: sync
0050: store_word 0x5f076009, 0xe1010000
0058: %r10_0 = *(0xe1010010)
005c: sync
0060: store_word 0x00004000, 0xe1018020
0068: %r10_0 = *(0xe1018000)
006c: sync
0070: store_word 0xe4000000, 0xd0010010
0078: store_half 2, 0xd0010004
007c: %r12_0 = load_half -7
0080: sync
0084: %r10_1 = 0x20000000
008c: store_word %r10_1, 0xe4000284
0090: %r12_0 = *(0xe4000284)
0094: sync
0098: store_word 0, 0xe4000200
009c: store_word %r10_1, 0xe4000210
00a0: store_word %r10_1, 0xe4000244
00a4: store_word_0_100 0, MC0_CNTL
00a8: store_word 0, 0xe40002a4
00ac: %r12_0 = *(0xe40002a4)
00b0: sync
00b4: store_word 0x00020100, 0xd0000018
00bc: store_word 0xea001000, 0xd0150010
00c8: store_half 2, 0xd0150004
00d0: %r10_0 = load_half -7
00d8: sync
00dc: store_word 0x000001e6, 0xea00101c
00e4: %r10_0 = *(0xea00101c)
00ec: sync
00f0: store_word 0, 0xe400002c
00f4: store_word 0x00000100, 0xe400002c
00fc: store_word 4, SMC_FIFO_INBOX_CTRL_STATUS
0104: store_word 0x00000012, SMC_FIFO_INBOX_DATA
010c: store_word 0, SMC_FIFO_INBOX_CTRL_STATUS
0114: %r10_0 = *(SMC_FIFO_OUTBOX_CTRL_STATUS)
011c: %r10_1 = and %r10_0, 4
0120: beq %r10_1, 0 -> 0x0114 ^
0124: store_word 4, SMC_FIFO_OUTBOX_CTRL_STATUS
012c: %r10_0 = *(SMC_FIFO_OUTBOX_DATA)
0134: %r10_0 = *(SMC_FIFO_OUTBOX_DATA)
013c: store_word 0, SMC_FIFO_OUTBOX_CTRL_STATUS
0144: %r10_0 = and %r10_0, 0x000000ff
014c: %r12_0 = load_word -6
0150: %r10_1 = and %r10_1, 0xffffff00
0158: %r10_1 = or %r10_1, %r10_0
015c: store_word %r10_1, 0xe400002c
0160: call 0x0328
0164: store_word 0, 0xe1020004
0168: store_half 6, 0xd0008004
016c: %r12_0 = load_half -7
0170: sync
0174: delay -7
0178: store_word 0xff60ffce, 0xe1013100
0180: store_word 0, 0xe1013000
0184: store_word 0, 0xe1013200
0188: store_word 0x001d0031, 0xe1013300
0190: store_word 0x00000030, 0xe1003100
0198: store_word 0, 0xe1003000
01a0: store_word 0, 0xe1003200
01a8: store_word 0xe0f7fd00, 0xe1003300
01b4: return
01b8: %r10_0 = 0
01bc: bne %r10_0, 5 -> 0x01cc v
01c0: store_word 0x0015159a, 0xe4000024
01c8: jmp 0x02e0 v
01cc: %r10_0 = add %r10_0, 1
01d0: store_word_0_100 %r11_1, MC0_PAD_CAL_CNTL
01d4: %r10_0 = load_word -6
01d8: sync
01dc: delay -7
01e0: %r10_1 = and %r11_1, -7
01e4: store_word_0_100 %r10_1, MC0_PAD_CAL_CNTL
01e8: %r10_0 = load_word -6
01ec: sync
01f0: delay -7
01f4: store_word 0x00000200, MC0_PAD_CAL_CNTL
01fc: %r10_0 = load_word -6
0200: %r10_0 = rotlw_by_20_then_and %r10_1, 0x00f00000
0208: store_word 0, MC0_PAD_CAL_CNTL
020c: %r10_0 = load_word -6
0210: %r10_1 = rotlw_by_5_then_and %r10_1, 0x00000200
0218: %r10_0 = or %r11_0, %r10_1
021c: %r10_0 = load_word -6
0220: %r10_1 = xor %r10_1, 0x0000000f
0228: %r10_1 = rotlw_by_16_then_and %r10_1, 0x000f0000
0230: %r10_0 = or %r11_0, %r10_1
0234: store_word 0x00000100, MC0_PAD_CAL_CNTL
023c: %r10_0 = load_word -6
0240: %r10_1 = rotlw_by_4_then_and %r10_1, 0x00000100
0248: %r10_0 = or %r11_0, %r10_1
024c: %r10_0 = load_word -6
0250: %r10_1 = rotlw_by_12_then_and %r10_1, 0x0000f000
0258: %r10_0 = or %r11_0, %r10_1
025c: %r10_1 = and %r11_1, 0x00fff300
0264: bne %r10_1, %r11_0 -> 0x01bc ^
0268: store_word 0x00000200, MC1_PAD_CAL_CNTL
0270: %r10_0 = load_word -6
0274: %r10_0 = rotlw_by_20_then_and %r10_1, 0x00f00000
027c: store_word 0, MC1_PAD_CAL_CNTL
0280: %r10_0 = load_word -6
0284: %r10_1 = rotlw_by_5_then_and %r10_1, 0x00000200
028c: %r10_0 = or %r11_0, %r10_1
0290: %r10_0 = load_word -6
0294: %r10_1 = xor %r10_1, 0x0000000f
029c: %r10_1 = rotlw_by_16_then_and %r10_1, 0x000f0000
02a4: %r10_0 = or %r11_0, %r10_1
02a8: store_word 0x00000100, MC1_PAD_CAL_CNTL
02b0: %r10_0 = load_word -6
02b4: %r10_1 = rotlw_by_4_then_and %r10_1, 0x00000100
02bc: %r10_0 = or %r11_0, %r10_1
02c0: %r10_0 = load_word -6
02c4: %r10_1 = rotlw_by_12_then_and %r10_1, 0x0000f000
02cc: %r10_0 = or %r11_0, %r10_1
02d0: %r10_1 = and %r11_1, 0x00fff300
02d8: bne %r10_1, %r11_0 -> 0x01bc ^
02dc: return
02e0: store_word %r10_0, 0xe4000028
02e4: %r12_0 = *(0xe400002c)
02e8: %r10_0 = and %r10_0, 0x00000100
02f0: beq %r10_0, 0 -> 0x0320 v
02f4: %r10_0 = *(SMC_FIFO_INBOX_CTRL_STATUS)
02fc: %r10_0 = and %r10_0, 4
0300: beq %r10_0, 0 -> 0x02f4 ^
0304: store_word 4, SMC_FIFO_INBOX_CTRL_STATUS
030c: %r12_0 = *(0xe4000024)
0310: store_word %r10_0, SMC_FIFO_INBOX_DATA
0318: store_word 0, SMC_FIFO_INBOX_CTRL_STATUS
0320: %r10_0 = *(0xe4000028)
0324: return
0328: store_word 0x20000000, 0xe1020000
0330: store_word 0x20000000, 0xe1040000
0338: store_word 0, 0xe4002800
033c: store_word 0x08000000, 0xe4002804
0344: %r12_0 = load_word -4
0348: %r11_1 = rotlw_by_28_then_and %r11_1, 7
034c: bne %r11_1, 5 -> 0x0358 v
0350: %r10_1 = 0x20003021
0358: bne %r11_1, 6 -> 0x0364 v
035c: %r10_1 = 0x20001011
0364: bne %r11_1, 7 -> 0x0370 v
0368: %r10_1 = 0x20003025
0370: bne %r11_1, 0 -> 0x037c v
0374: %r10_1 = 0x20000009
037c: bne %r11_1, 1 -> 0x0388 v
0380: %r10_1 = 0x20003029
0388: bne %r11_1, 2 -> 0x0394 v
038c: %r10_1 = 0x20001015
0394: bne %r11_1, 3 -> 0x03a0 v
0398: %r10_1 = 0x2000302d
03a0: bne %r11_1, 4 -> 0x03ac v
03a4: %r10_1 = 0x2000000b
03ac: store_word %r10_1, 0xe4000210
03b0: %r10_1 = or %r10_1, 0x000c0000
03b8: store_word %r10_1, 0xe4000210
03bc: %r10_0 = *(0xe4000210)
03c0: sync
03c4: delay -7
03c8: %r10_1 = and %r10_1, 0xdff3ffff
03d0: store_word %r10_1, 0xe4000210
03d4: store_word 0x00000200, 0xe4000200
03dc: store_word %r10_1, 0xe4000284
03e0: %r10_1 = or %r10_1, 0x000c0000
03e8: store_word %r10_1, 0xe4000284
03ec: %r12_0 = *(0xe4000284)
03f0: sync
03f4: delay -7
03f8: %r10_1 = and %r10_1, 0xdff3ffff
0400: store_word %r10_1, 0xe4000284
0404: call 0x10c4
0408: %r10_1 = 0x20000013
0410: %r10_0 = *(0xd0008008)
0414: %r10_0 = and %r10_0, 0x000000ff
041c: bne %r10_0, 0 -> 0x0428 v
0420: %r10_1 = 0x20000007
0428: store_word %r10_1, 0xe4000244
042c: %r10_1 = or %r10_1, 0x000c0000
0434: store_word %r10_1, 0xe4000244
0438: %r12_0 = *(0xe4000244)
043c: sync
0440: delay -7
0444: %r10_1 = and %r10_1, 0xdff3ffff
044c: store_word %r10_1, 0xe4000244
0450: store_word 0, 0xe40001a8
0454: store_word 0x00024024, 0xe40002a0
045c: store_word 0x00024024, 0xe40002a8
0464: store_word_0_100 0x00000342, MC0_PAD_IF_CNTL
046c: store_word_0_100 0, MC0_PAD_IF_CNTL_2
0470: %r10_0 = 0x50505050
0478: store_word_0_100 %r10_0, MC0_DLL_MASTER_ADJ_0
047c: store_word_0_100 %r10_0, MC0_DLL_MASTER_ADJ_1
0480: %r10_0 = load_word -6
0484: %r10_1 = and %r10_1, 0x000000ff
048c: %r10_0 = 0x06060606
0494: beq %r10_1, 0 -> 0x04a0 v
0498: %r10_0 = 0x0a0a0a0a
04a0: store_word_0_100 %r10_0, MC0_RD_STR_DLY_0
04a4: store_word_0_100 %r10_0, MC0_RD_STR_DLY_1
04a8: %r10_0 = 0x06060606
04b0: beq %r10_1, 0 -> 0x04bc v
04b4: %r10_0 = 0x0f0f0f0f
04bc: store_word_0_100 %r10_0, MC0_WR_STR_DLL_0
04c0: store_word_0_100 %r10_0, MC0_WR_STR_DLL_1
04c4: %r12_0 = *(MC1_WR_STR_DLL_1)
04c8: sync
04cc: delay -7
04d0: call 0x10c4
04d4: store_word_0_100 0, MC0_TERM_CNTL
04d8: store_word -1, MC0_WR_STR_DLY
04dc: store_word -1, MC1_WR_STR_DLY
04e0: store_word_0_100 1, MC0_PAD_CAL_CNTL
04e4: %r10_0 = *(MC1_PAD_CAL_CNTL)
04e8: sync
04ec: delay -7
04f0: store_word_0_100 0, MC0_PAD_CAL_CNTL
04f4: %r10_0 = *(0xd0008008)
04f8: %r10_0 = and %r10_0, 0x000000ff
0500: bne %r10_0, 0 -> 0x0518 v
0504: store_word_0_100 0x000000e6, MC0_PAD_CAL_CNTL
050c: store_word_0_100 0x000000e4, MC0_PAD_CAL_CNTL
0514: jmp 0x0524 v
0518: %r11_1 = 0x000ff306
0520: call 0x01b8
0524: store_word 0, 0xe40002a4
0528: store_word_0_100 0, MC0_CNTL
052c: store_word_0_100 0, MC0_POINTER
0530: store_word_0_100 0x001c0000, MC0_DRAM_CMD
0538: store_word_0_100 2, MC0_CNTL
053c: %r10_0 = *(MC1_CNTL)
0540: sync
0544: delay -7
0548: store_word 0x00000019, 0xe40002a4
0550: %r12_0 = *(0xe40002a4)
0554: sync
0558: delay -7
055c: store_word_0_100 0, MC0_POINTER
0560: store_word_0_100 0x423c0000, MC0_DRAM_CMD
0568: store_word_0_100 0x0a280100, MC0_DRAM_CMD
0570: store_word_0_100 0x06200221, MC0_DRAM_CMD
0578: store_word_0_100 0x0620808d, MC0_DRAM_CMD
0580: store_word_0_100 0x06200772, MC0_DRAM_CMD
0588: store_word_0_100 2, MC0_CNTL
058c: %r10_0 = *(MC1_CNTL)
0590: sync
0594: delay -7
0598: store_word_0_100 0, MC0_POINTER
059c: store_word_0_100 0x0a280100, MC0_DRAM_CMD
05a4: store_word_0_100 0x2f240000, MC0_DRAM_CMD
05ac: store_word_0_100 0x2f240000, MC0_DRAM_CMD
05b4: store_word_0_100 0x0620c48d, MC0_DRAM_CMD
05bc: store_word_0_100 2, MC0_CNTL
05c0: %r10_0 = *(MC1_CNTL)
05c4: sync
05c8: %r12_0 = load_word -3
05cc: %r12_0 = load_word -2
05d0: store_word_0_100 0, MC0_POINTER
05d4: store_word_0_100 0x0620c08d, MC0_DRAM_CMD
05dc: store_word_0_100 2, MC0_CNTL
05e0: store_word_0_100 0, MC0_POINTER
05e4: store_word_0_100 0x0620a48d, MC0_DRAM_CMD
05ec: store_word_0_100 2, MC0_CNTL
05f0: %r10_0 = *(MC1_CNTL)
05f4: sync
05f8: %r12_0 = load_word -1
05fc: %r12_0 = load_word 0
0600: store_word_0_100 0, MC0_POINTER
0604: store_word_0_100 0x0620a08d, MC0_DRAM_CMD
060c: store_word_0_100 2, MC0_CNTL
0610: %r12_0 = rotlw_by_0_then_and %r12_0, 0x00ff00ff
0618: %r12_1 = rotlw_by_0_then_and %r12_1, 0x00ff00ff
0620: %r12_0 = rotlw_by_24_then_and %r13_0, 0x00ff00ff
0628: %r12_0 = rotlw_by_16_then_and %r13_0, 0x00ff00ff
0630: %r13_1 = rotlw_by_24_then_and %r13_1, 0x00ff00ff
0638: %r13_1 = rotlw_by_16_then_and %r13_1, 0x00ff00ff
0640: bne %r12_0, %r12_1 -> 0x2b5c v
0644: %r12_0 = rotlw_by_16_then_and %r12_0, -1
0648: bne %r12_0, %r12_1 -> 0x2b5c v
064c: bne %r13_0, %r13_1 -> 0x2b5c v
0650: %r12_0 = rotlw_by_16_then_and %r13_0, -1
0654: bne %r13_0, %r13_1 -> 0x2b5c v
0658: %r10_1 = 0
065c: %r10_0 = 0x20000000
0664: beq %r12_0, %r13_0 -> 0x0694 v
0668: %r10_1 = 0x00000018
0670: %r10_0 = 0x10000000
0678: beq %r12_0, 0x00ff00ff -> 0x0694 v
0680: beq %r13_0, 0x00ff00ff -> 0x0694 v
0688: %r10_1 = 0
068c: %r10_0 = 0x20000000
0694: %r12_0 = load_word -4
0698: %r11_1 = and %r11_1, 0xffffffe7
06a0: %r11_1 = or %r11_1, %r10_1
06a4: store_word %r11_1, 0xe40002a4
06a8: store_word %r11_0, 0xe1020000
06ac: store_word %r11_0, 0xe1040000
06b0: %r10_0 = and %r12_0, 0x0000000f
06b8: bne %r10_0, 1 -> 0x3960 v
06bc: jmp 0x3960 v
06c0: %r10_0 = *(0xd0008008)
06c4: %r10_0 = and %r10_0, 0x000000ff
06cc: beq %r10_0, 0 -> 0x0704 v
06d0: %r10_1 = 0x001ff306
06d8: %r10_0 = and %r12_0, 0x0000000f
06e0: bne %r10_0, 2 -> 0x06ec v
06e4: %r10_1 = 0x001bb306
06ec: bne %r10_0, 6 -> 0x06f8 v
06f0: %r10_1 = 0x0007d306
06f8: %r11_1 = %r10_1
06fc: call 0x01b8
0700: %r10_1 = %r11_1
0704: %r12_0 = load_word -6
0708: %r10_1 = and %r10_1, -2
070c: store_word %r10_1, 0xe40002a4
0710: store_word_0_100 0, MC0_POINTER
0714: store_word_0_100 0x001c0000, MC0_DRAM_CMD
071c: store_word_0_100 2, MC0_CNTL
0720: %r10_0 = *(MC1_CNTL)
0724: sync
0728: delay -7
072c: %r10_1 = or %r10_1, 1
0730: store_word %r10_1, 0xe40002a4
0734: %r12_0 = *(0xe40002a4)
0738: sync
073c: delay -7
0740: %r10_1 = 0x040e3202
0748: %r12_0 = load_word -4
074c: blt? %r11_1, 0x00000018 -> 0x0758 v
0754: %r10_1 = or %r10_1, 1
0758: store_word_0_100 %r10_1, MC0_DRAM_CONFIG
075c: store_word_0_100 0x00000080, MC0_BSB_SNOOPED_TIMER_CNTL
0764: store_word_0_100 0x00348084, MC0_TUNING_0
076c: store_word_0_100 0x0000007a, MC0_TUNING_1
0774: store_word_0_100 0x00106514, MC0_RD_BUFFER_CNTL_0
077c: store_word_0_100 0x00210414, MC0_RD_BUFFER_CNTL_1
0784: store_word_0_100 0x01283446, MC0_TIMING_CNTL_0
078c: store_word_0_100 0x03620991, MC0_TIMING_CNTL_1
0794: store_word_0_100 0x0c958107, MC0_TIMING_CNTL_2
079c: store_word_0_100 0x00000018, MC0_WR_DATA_DLY_0
07a4: store_word_0_100 0x00000030, MC0_INTERRUPT_MASK
07ac: store_word_0_100 0, MC0_POINTER
07b0: store_word_0_100 0x423c0000, MC0_DRAM_CMD
07b8: store_word_0_100 0x0a280100, MC0_DRAM_CMD
07c0: store_word_0_100 0x06200221, MC0_DRAM_CMD
07c8: %r10_1 = 0x06208088
07d0: %r10_0 = *(0xd0008008)
07d4: %r10_0 = and %r10_0, 0x000000ff
07dc: beq %r10_0, 0 -> 0x0808 v
07e0: %r10_1 = 0x06208089
07e8: %r10_0 = and %r12_0, 0x0000000f
07f0: bne %r10_0, 2 -> 0x07fc v
07f4: %r10_1 = 0x0620808a
07fc: bne %r10_0, 6 -> 0x0808 v
0800: %r10_1 = 0x06208089
0808: %r12_0 = load_word -4
080c: blt? %r11_1, 0x00000018 -> 0x0818 v
0814: %r10_1 = or %r10_1, 4
0818: store_word_0_100 %r10_1, MC0_DRAM_CMD
081c: store_word_0_100 0x06200772, MC0_DRAM_CMD
0824: store_word_0_100 2, MC0_CNTL
0828: %r10_0 = *(MC1_CNTL)
082c: sync
0830: delay -7
0834: store_word_0_100 0, MC0_POINTER
0838: store_word_0_100 0x0a280100, MC0_DRAM_CMD
0840: store_word_0_100 0x2f240000, MC0_DRAM_CMD
0848: store_word_0_100 0x2f240000, MC0_DRAM_CMD
0850: store_word_0_100 0x003c0000, MC0_DRAM_CMD
0858: store_word_0_100 2, MC0_CNTL
085c: store_word_0_100 0x00001000, MC0_CNTL
0864: store_word_0_100 0x00000605, MC0_CNTL
086c: %r10_0 = *(MC1_CNTL)
0870: sync
0874: delay -7
0878: store_word 0, 0
087c: %r10_0 = *(0)
0880: sync
0884: store_word 0x00008000, 0x00008000
088c: %r10_0 = *(0x00008000)
0890: sync
0894: %r10_0 = *(0)
0898: beq %r10_0, 0 -> 0x08f0 v
089c: store_word %r12_0, 4
08a0: store_word %r12_1, 0x00000008
08a4: store_word %r13_0, 0x0000000c
08a8: store_word %r13_1, 0x00000010
08ac: store_word 0x08000000, 0xe1020000
08b4: store_word 0x08000000, 0xe1040000
08bc: store_word_0_100 0x020f1242, MC0_DRAM_CONFIG
08c4: store_word_0_100 0x00000080, MC0_BSB_SNOOPED_TIMER_CNTL
08cc: store_word_0_100 0x00344041, MC0_TUNING_0
08d4: store_word_0_100 0x0000007a, MC0_TUNING_1
08dc: store_word_0_100 0x00106514, MC0_RD_BUFFER_CNTL_0
08e4: store_word_0_100 0x00210414, MC0_RD_BUFFER_CNTL_1
08ec: jmp 0x1068 v
08f0: store_word %r12_0, 4
08f4: store_word %r12_1, 0x00000008
08f8: store_word %r13_0, 0x0000000c
08fc: store_word %r13_1, 0x00000010
0900: call 0x20dc
0904: op_1E 0, -7
0908: %r10_1 = 0x00001800
0910: call 0x220c
0914: %r10_0 = or %r13_1, %r13_1
0918: op_1E 0, -7
091c: op_1E 1, -7
0920: %r10_1 = 0x00001804
0928: call 0x220c
092c: %r10_0 = or %r11_0, %r13_1
0930: op_1E 1, -7
0934: op_1E 2, -7
0938: %r10_1 = 0x00001880
0940: call 0x220c
0944: %r10_0 = or %r11_0, %r13_1
0948: op_1E 2, -7
094c: op_1E 3, -7
0950: %r10_1 = 0x00001884
0958: call 0x220c
095c: %r10_0 = or %r11_0, %r13_1
0960: op_1E 3, -7
0964: beq %r11_0, 0 -> 0x0994 v
0968: op_1E 0, -7
096c: op_1E 0, -7
0970: op_1E 1, -7
0974: op_1E 1, -7
0978: op_1E 2, -7
097c: op_1E 2, -7
0980: op_1E 3, -7
0984: op_1E 3, -7
0988: store_word 0x0011119a, 0xe4000024
0990: call 0x02e0
0994: store_word_0_100 0, MC0_CNTL
0998: store_word_0_100 0, MC0_POINTER
099c: store_word_0_100 0x00040000, MC0_DRAM_CMD
09a4: store_word_0_100 2, MC0_CNTL
09a8: %r10_0 = *(MC1_CNTL)
09ac: sync
09b0: delay -7
09b4: %r10_0 = 0x040e3202
09bc: %r10_0 = *(0xd0008008)
09c0: %r10_0 = and %r10_0, 0x000000ff
09c8: beq %r10_0, 0 -> 0x0b74 v
09cc: %r12_0 = load_word -4
09d0: %r11_1 = and %r11_1, 0x0000000f
09d8: bne %r11_1, 0x0000000c -> 0x09f0 v
09e0: %r10_1 = 0x2000000b
09e8: %r10_0 = 0x04113202
09f0: bne %r11_1, 0x0000000d -> 0x0a08 v
09f8: %r10_1 = 0x20007061
0a00: %r10_0 = 0x04113202
0a08: bne %r11_1, 0x0000000e -> 0x0a20 v
0a10: %r10_1 = 0x20003031
0a18: %r10_0 = 0x04123202
0a20: bne %r11_1, 0x0000000f -> 0x0a38 v
0a28: %r10_1 = 0x20007065
0a30: %r10_0 = 0x04123202
0a38: bne %r11_1, 0 -> 0x0a4c v
0a3c: %r10_1 = 0x20001019
0a44: %r10_0 = 0x04123202
0a4c: bne %r11_1, 1 -> 0x0a60 v
0a50: %r10_1 = 0x20007069
0a58: %r10_0 = 0x04133202
0a60: bne %r11_1, 2 -> 0x0a74 v
0a64: %r10_1 = 0x20003035
0a6c: %r10_0 = 0x04133202
0a74: bne %r11_1, 3 -> 0x0a88 v
0a78: %r10_1 = 0x2000706d
0a80: %r10_0 = 0x04133202
0a88: bne %r11_1, 4 -> 0x0a9c v
0a8c: %r10_1 = 0x2000000d
0a94: %r10_0 = 0x04143202
0a9c: bne %r11_1, 5 -> 0x0ab0 v
0aa0: %r10_1 = 0x20007071
0aa8: %r10_0 = 0x04143202
0ab0: bne %r11_1, 6 -> 0x0ac4 v
0ab4: %r10_1 = 0x20003039
0abc: %r10_0 = 0x04153202
0ac4: bne %r11_1, 7 -> 0x0ad8 v
0ac8: %r10_1 = 0x20007075
0ad0: %r10_0 = 0x04153202
0ad8: bne %r11_1, 0x00000008 -> 0x0af0 v
0ae0: %r10_1 = 0x2000101d
0ae8: %r10_0 = 0x04153202
0af0: bne %r11_1, 0x00000009 -> 0x0b08 v
0af8: %r10_1 = 0x20007079
0b00: %r10_0 = 0x04163202
0b08: bne %r11_1, 0x0000000a -> 0x0b20 v
0b10: %r10_1 = 0x2000303d
0b18: %r10_0 = 0x04163202
0b20: bne %r11_1, 0x0000000b -> 0x0b38 v
0b28: %r10_1 = 0x2000707d
0b30: %r10_0 = 0x04163202
0b38: %r10_0 = and %r12_0, 0x0000000f
0b40: bne %r10_0, 2 -> 0x0b44 v
0b44: bne %r10_0, 6 -> 0x0b48 v
0b48: store_word %r10_1, 0xe4000284
0b4c: %r10_1 = or %r10_1, 0x000c0000
0b54: store_word %r10_1, 0xe4000284
0b58: %r12_0 = *(0xe4000284)
0b5c: sync
0b60: delay -7
0b64: %r10_1 = and %r10_1, 0xdff3ffff
0b6c: store_word %r10_1, 0xe4000284
0b70: call 0x10c4
0b74: %r12_0 = load_word -4
0b78: blt? %r11_1, 0x00000018 -> 0x0b84 v
0b80: %r10_0 = or %r11_0, 1
0b84: store_word_0_100 %r11_0, MC0_DRAM_CONFIG
0b88: store_word_0_100 0x00000080, MC0_BSB_SNOOPED_TIMER_CNTL
0b90: store_word_0_100 0x20b48088, MC0_TUNING_0
0b98: store_word_0_100 0x0000007a, MC0_TUNING_1
0ba0: store_word_0_100 1, MC0_ARBITRATION_CNTL
0ba4: store_word_0_100 0x00106514, MC0_RD_BUFFER_CNTL_0
0bac: store_word_0_100 0x00210414, MC0_RD_BUFFER_CNTL_1
0bb4: store_word_0_100 0x0128d87d, MC0_TIMING_CNTL_0
0bbc: store_word_0_100 0x03a20edb, MC0_TIMING_CNTL_1
0bc4: store_word_0_100 0x0c97914d, MC0_TIMING_CNTL_2
0bcc: store_word_0_100 0x00000025, MC0_WR_DATA_DLY_0
0bd4: store_word_0_100 0x00000030, MC0_INTERRUPT_MASK
0bdc: store_word_0_100 0, MC0_POINTER
0be0: store_word_0_100 0x003c0000, MC0_DRAM_CMD
0be8: store_word_0_100 2, MC0_CNTL
0bec: %r10_0 = *(MC1_CNTL)
0bf0: sync
0bf4: delay -7
0bf8: store_word_0_100 0, MC0_POINTER
0bfc: store_word_0_100 0x0a280100, MC0_DRAM_CMD
0c04: store_word_0_100 0x2f240000, MC0_DRAM_CMD
0c0c: %r10_1 = 0x062080b9
0c14: %r10_0 = *(0xd0008008)
0c18: %r10_0 = and %r10_0, 0x000000ff
0c20: beq %r10_0, 0 -> 0x0c4c v
0c24: %r10_1 = 0x06208009
0c2c: %r10_0 = and %r12_0, 0x0000000f
0c34: bne %r10_0, 2 -> 0x0c40 v
0c38: %r10_1 = 0x062080b8
0c40: bne %r10_0, 6 -> 0x0c4c v
0c44: %r10_1 = 0x062080b9
0c4c: %r12_0 = load_word -4
0c50: blt? %r11_1, 0x00000018 -> 0x0c5c v
0c58: %r10_1 = or %r10_1, 4
0c5c: store_word %r10_1, 0xe4000014
0c60: store_word_0_100 %r10_1, MC0_DRAM_CMD
0c64: %r10_1 = 0x06200732
0c6c: store_word %r10_1, 0xe4000010
0c70: store_word_0_100 %r10_1, MC0_DRAM_CMD
0c74: store_word_0_100 0x003c0000, MC0_DRAM_CMD
0c7c: store_word_0_100 2, MC0_CNTL
0c80: store_word_0_100 0x00001000, MC0_CNTL
0c88: store_word_0_100 0x00000605, MC0_CNTL
0c90: %r10_0 = *(MC1_CNTL)
0c94: sync
0c98: delay -7
0c9c: %r10_0 = *(0xd0008008)
0ca0: %r10_0 = and %r10_0, 0x000000ff
0ca8: beq %r10_0, 0 -> 0x1068 v
0cac: %r10_0 = 0
0cb0: op_1E %r11_0, -7
0cb4: %r12_0 = 0
0cb8: %r12_1 = 0
0cbc: %r12_0 = 0
0cc0: op_1E %r11_0, -7
0cc4: %r10_0 = add %r11_0, 1
0cc8: bne %r11_0, 4 -> 0x0cb0 ^
0ccc: %r10_0 = 0
0cd0: store_word %r11_0, 0xe4000018
0cd4: store_word_0_100 %r11_0, MC0_RD_STR_DLY_0
0cd8: store_word_0_100 %r11_0, MC0_RD_STR_DLY_1
0cdc: %r10_0 = *(MC1_RD_STR_DLY_1)
0ce0: sync
0ce4: delay -7
0ce8: store_word_0_100 0x00001605, MC0_CNTL
0cf0: store_word_0_100 0x00000605, MC0_CNTL
0cf8: op_1E 0, -7
0cfc: %r10_1 = 0x00001808
0d04: call 0x2490
0d08: op_1E 0, -7
0d0c: op_1E 1, -7
0d10: %r10_1 = 0x0000180c
0d18: call 0x2490
0d1c: op_1E 1, -7
0d20: op_1E 2, -7
0d24: %r10_1 = 0x00001888
0d2c: call 0x2490
0d30: op_1E 2, -7
0d34: op_1E 3, -7
0d38: %r10_1 = 0x0000188c
0d40: call 0x2490
0d44: op_1E 3, -7
0d48: %r10_0 = load_word -5
0d4c: %r10_0 = add %r11_0, 0x01010101
0d54: bne %r11_0, 0x50505050 -> 0x0cd0 ^
0d5c: %r10_0 = 0
0d60: op_1E %r10_0, -7
0d64: %r11_1 = rotlw_by_0_then_and %r13_0, 0x000000ff
0d6c: beq %r11_1, 0 -> 0x2aa4 v
0d70: %r10_0 = and %r12_0, 0x0000ffff
0d78: %r10_0 = div %r11_0, %r11_1
0d7c: %r13_1 = rotlw_by_0_then_and %r11_0, 0x000000ff
0d84: %r11_1 = rotlw_by_24_then_and %r13_0, 0x000000ff
0d8c: beq %r11_1, 0 -> 0x2aa4 v
0d90: %r10_0 = rotlw_by_16_then_and %r12_0, 0x0000ffff
0d98: %r10_0 = div %r11_0, %r11_1
0d9c: %r10_0 = rotlw_by_8_then_and %r11_0, 0x0000ff00
0da4: %r13_1 = or %r13_1, %r11_0
0da8: %r11_1 = rotlw_by_16_then_and %r13_0, 0x000000ff
0db0: beq %r11_1, 0 -> 0x2aa4 v
0db4: %r10_0 = and %r12_1, 0x0000ffff
0dbc: %r10_0 = div %r11_0, %r11_1
0dc0: %r10_0 = rotlw_by_16_then_and %r11_0, 0x00ff0000
0dc8: %r13_1 = or %r13_1, %r11_0
0dcc: %r11_1 = rotlw_by_8_then_and %r13_0, 0x000000ff
0dd4: beq %r11_1, 0 -> 0x2aa4 v
0dd8: %r10_0 = rotlw_by_16_then_and %r12_1, 0x0000ffff
0de0: %r10_0 = div %r11_0, %r11_1
0de4: %r10_0 = rotlw_by_24_then_and %r11_0, 0xff000000
0dec: %r13_1 = or %r13_1, %r11_0
0df0: op_1E %r10_0, -7
0df4: %r10_0 = add %r10_0, 1
0df8: bne %r10_0, 4 -> 0x0d60 ^
0dfc: op_1E 0, -7
0e00: store_word %r13_1, MC0_RD_STR_DLY_0
0e04: op_1E 0, -7
0e08: op_1E 1, -7
0e0c: store_word %r13_1, MC0_RD_STR_DLY_1
0e10: op_1E 1, -7
0e14: op_1E 2, -7
0e18: store_word %r13_1, MC1_RD_STR_DLY_0
0e1c: op_1E 2, -7
0e20: op_1E 3, -7
0e24: store_word %r13_1, MC1_RD_STR_DLY_1
0e28: op_1E 3, -7
0e2c: %r10_0 = 0x0a0a0a0a
0e34: store_word_0_100 %r10_0, MC0_RD_STR_DLY_0
0e38: store_word_0_100 %r10_0, MC0_RD_STR_DLY_1
0e3c: %r10_0 = *(MC1_RD_STR_DLY_1)
0e40: sync
0e44: delay -7
0e48: store_word_0_100 0x00001605, MC0_CNTL
0e50: store_word_0_100 0x00000605, MC0_CNTL
0e58: %r10_0 = 0
0e5c: store_word_0_100 %r11_0, MC0_WR_STR_DLL_0
0e60: store_word_0_100 %r11_0, MC0_WR_STR_DLL_1
0e64: %r11_1 = 1
0e68: store_word %r11_1, 0xe4000028
0e6c: %r10_0 = 0
0e70: op_1E %r11_0, -7
0e74: %r12_0 = 0
0e78: %r12_1 = 0
0e7c: %r12_0 = 0
0e80: op_1E %r11_0, -7
0e84: %r10_0 = add %r11_0, 1
0e88: bne %r11_0, 4 -> 0x0e70 ^
0e8c: call 0x1154
0e90: %r10_0 = 0
0e94: store_word %r11_0, 0xe4000018
0e98: call 0x11c0
0e9c: call 0x20dc
0ea0: op_1E 0, -7
0ea4: %r10_1 = 0x00001808
0eac: %r10_0 = load_word -4
0eb0: call 0x27ac
0eb4: op_1E 0, -7
0eb8: op_1E 1, -7
0ebc: %r10_1 = 0x0000180c
0ec4: %r12_0 = load_word -4
0ec8: call 0x27ac
0ecc: op_1E 1, -7
0ed0: op_1E 2, -7
0ed4: %r10_1 = 0x00001888
0edc: %r10_0 = load_word -4
0ee0: call 0x27ac
0ee4: op_1E 2, -7
0ee8: op_1E 3, -7
0eec: %r10_1 = 0x0000188c
0ef4: %r12_0 = load_word -4
0ef8: call 0x27ac
0efc: op_1E 3, -7
0f00: %r10_0 = load_word -5
0f04: %r10_0 = add %r11_0, 0x01010101
0f0c: bne %r11_0, 0x50505050 -> 0x0e94 ^
0f14: %r10_0 = 0
0f18: op_1E %r10_0, -7
0f1c: %r11_1 = rotlw_by_0_then_and %r13_0, 0x000000ff
0f24: beq %r11_1, 0 -> 0x2b28 v
0f28: %r10_0 = and %r12_0, 0x0000ffff
0f30: %r10_0 = div %r11_0, %r11_1
0f34: %r13_1 = rotlw_by_0_then_and %r11_0, 0x000000ff
0f3c: %r11_1 = rotlw_by_24_then_and %r13_0, 0x000000ff
0f44: beq %r11_1, 0 -> 0x2b28 v
0f48: %r10_0 = rotlw_by_16_then_and %r12_0, 0x0000ffff
0f50: %r10_0 = div %r11_0, %r11_1
0f54: %r10_0 = rotlw_by_8_then_and %r11_0, 0x0000ff00
0f5c: %r13_1 = or %r13_1, %r11_0
0f60: %r11_1 = rotlw_by_16_then_and %r13_0, 0x000000ff
0f68: beq %r11_1, 0 -> 0x2b28 v
0f6c: %r10_0 = and %r12_1, 0x0000ffff
0f74: %r10_0 = div %r11_0, %r11_1
0f78: %r10_0 = rotlw_by_16_then_and %r11_0, 0x00ff0000
0f80: %r13_1 = or %r13_1, %r11_0
0f84: %r11_1 = rotlw_by_8_then_and %r13_0, 0x000000ff
0f8c: beq %r11_1, 0 -> 0x2b28 v
0f90: %r10_0 = rotlw_by_16_then_and %r12_1, 0x0000ffff
0f98: %r10_0 = div %r11_0, %r11_1
0f9c: %r10_0 = rotlw_by_24_then_and %r11_0, 0xff000000
0fa4: %r13_1 = or %r13_1, %r11_0
0fa8: op_1E %r10_0, -7
0fac: %r10_0 = add %r10_0, 1
0fb0: bne %r10_0, 4 -> 0x0f18 ^
0fb4: op_1E 0, -7
0fb8: store_word %r13_1, MC0_WR_STR_DLL_0
0fbc: op_1E 0, -7
0fc0: op_1E 1, -7
0fc4: store_word %r13_1, MC0_WR_STR_DLL_1
0fc8: op_1E 1, -7
0fcc: op_1E 2, -7
0fd0: store_word %r13_1, MC1_WR_STR_DLL_0
0fd4: op_1E 2, -7
0fd8: op_1E 3, -7
0fdc: store_word %r13_1, MC1_WR_STR_DLL_1
0fe0: op_1E 3, -7
0fe4: %r12_0 = *(MC1_WR_STR_DLL_1)
0fe8: sync
0fec: delay -7
0ff0: %r10_0 = load_word -4
0ff4: %r11_1 = subf %r11_1, 1
0ff8: bge %r11_1, 0 -> 0x0e68 ^
0ffc: call 0x12d4
1000: store_word_0_100 0, MC0_CNTL
1004: store_word_0_100 0, MC0_POINTER
1008: %r10_0 = load_word -6
100c: store_word_0_100 %r10_1, MC0_DRAM_CMD
1010: store_word_0_100 0x003c0000, MC0_DRAM_CMD
1018: store_word_0_100 2, MC0_CNTL
101c: store_word_0_100 0x00001605, MC0_CNTL
1024: store_word_0_100 0x00000605, MC0_CNTL
102c: %r10_0 = *(MC1_CNTL)
1030: sync
1034: delay -7
1038: store_word_0_100 0, MC0_POINTER
103c: store_word_0_100 0x003c0000, MC0_DRAM_CMD
1044: store_word_0_100 2, MC0_CNTL
1048: store_word_0_100 0x00001000, MC0_CNTL
1050: store_word_0_100 0x00000605, MC0_CNTL
1058: %r10_0 = *(MC1_CNTL)
105c: sync
1060: delay -7
1064: call 0x20dc
1068: %r10_0 = load_word -6
106c: %r10_1 = rotlw_by_31_then_and %r10_1, 0x7fffffff
1074: bgt? %r10_1, 0x00000080 -> 0x2b6c v
107c: store_word 0, 0
1080: %r10_0 = *(0)
1084: sync
1088: store_word %r10_1, %r10_1
108c: %r10_0 = *(%r10_1)
1090: sync
1094: %r10_0 = *(0)
1098: bne %r10_0, 0 -> 0x10a4 v
109c: %r10_0 = load_word -5
10a0: beq %r11_0, %r10_1 -> 0x106c ^
10a4: store_word 0x0014149a, 0xe4000024
10ac: call 0x02e0
10b0: jmp 0x2b6c v
10b4: %r10_0 = *(0xe4000288)
10b8: sync
10bc: delay -7
10c0: return
10c4: store_word 2, 0xe400028c
10c8: %r12_0 = *(0xe400028c)
10cc: sync
10d0: delay -7
10d4: store_word 0, 0xe400028c
10d8: %r12_0 = *(0xe400028c)
10dc: sync
10e0: delay -7
10e4: store_word 0, 0xe4000288
10e8: call 0x10b4
10ec: store_word 1, 0xe4000288
10f0: call 0x10b4
10f4: store_word 5, 0xe4000288
10f8: call 0x10b4
10fc: store_word 1, 0xe4000288
1100: call 0x10b4
1104: store_word 0, 0xe4000288
1108: call 0x10b4
110c: return
1110: %r10_0 = and %r10_1, 0x000000ff
1118: bge %r11_0, %r10_0 -> 0x1120 v
111c: %r10_0 = or %r11_0, %r11_0
1120: %r10_0 = rotlw_by_24_then_and %r10_1, 0x000000ff
1128: bge %r11_0, %r10_0 -> 0x1130 v
112c: %r10_0 = or %r11_0, %r11_0
1130: %r10_0 = rotlw_by_16_then_and %r10_1, 0x000000ff
1138: bge %r11_0, %r10_0 -> 0x1140 v
113c: %r10_0 = or %r11_0, %r11_0
1140: %r10_0 = rotlw_by_8_then_and %r10_1, 0x000000ff
1148: bge %r11_0, %r10_0 -> 0x1150 v
114c: %r10_0 = or %r11_0, %r11_0
1150: return
1154: %r10_0 = 0x00000050
115c: %r10_0 = load_word -6
1160: call 0x1110
1164: %r12_0 = load_word -6
1168: call 0x1110
116c: %r10_0 = load_word -6
1170: call 0x1110
1174: %r12_0 = load_word -6
1178: call 0x1110
117c: %r10_1 = rotlw_by_8_then_and %r10_0, -1
1180: %r10_0 = or %r10_0, %r10_1
1184: %r10_1 = rotlw_by_16_then_and %r10_0, -1
1188: %r10_0 = or %r10_0, %r10_1
118c: %r10_0 = load_word -6
1190: %r10_1 = subf %r10_1, %r10_0
1194: store_word %r10_1, MC0_WR_STR_DLL_0
1198: %r12_0 = load_word -6
119c: %r10_1 = subf %r10_1, %r10_0
11a0: store_word %r10_1, MC0_WR_STR_DLL_1
11a4: %r10_0 = load_word -6
11a8: %r10_1 = subf %r10_1, %r10_0
11ac: store_word %r10_1, MC1_WR_STR_DLL_0
11b0: %r12_0 = load_word -6
11b4: %r10_1 = subf %r10_1, %r10_0
11b8: store_word %r10_1, MC1_WR_STR_DLL_1
11bc: return
11c0: %r10_0 = load_word -6
11c4: %r10_1 = add %r10_1, 0x01010101
11cc: store_word %r10_1, MC0_WR_STR_DLL_0
11d0: %r12_0 = load_word -6
11d4: %r10_1 = add %r10_1, 0x01010101
11dc: store_word %r10_1, MC0_WR_STR_DLL_1
11e0: %r10_0 = load_word -6
11e4: %r10_1 = add %r10_1, 0x01010101
11ec: store_word %r10_1, MC1_WR_STR_DLL_0
11f0: %r12_0 = load_word -6
11f4: %r10_1 = add %r10_1, 0x01010101
11fc: store_word %r10_1, MC1_WR_STR_DLL_1
1200: %r12_0 = *(MC1_WR_STR_DLL_1)
1204: sync
1208: delay -7
120c: call 0x10c4
1210: store_word_0_100 0, MC0_CNTL
1214: %r12_0 = load_word -6
1218: %r10_1 = and %r10_1, -2
121c: store_word %r10_1, 0xe40002a4
1220: store_word_0_100 0, MC0_POINTER
1224: store_word_0_100 0x001c0000, MC0_DRAM_CMD
122c: store_word_0_100 2, MC0_CNTL
1230: %r10_0 = *(MC1_CNTL)
1234: sync
1238: delay -7
123c: %r10_1 = or %r10_1, 1
1240: store_word %r10_1, 0xe40002a4
1244: %r12_0 = *(0xe40002a4)
1248: sync
124c: delay -7
1250: store_word_0_100 0, MC0_POINTER
1254: store_word_0_100 0x423c0000, MC0_DRAM_CMD
125c: store_word_0_100 0x0a280100, MC0_DRAM_CMD
1264: store_word_0_100 0x06200221, MC0_DRAM_CMD
126c: %r12_0 = *(0xe4000014)
1270: store_word_0_100 %r10_0, MC0_DRAM_CMD
1274: %r10_0 = *(0xe4000010)
1278: store_word_0_100 %r10_0, MC0_DRAM_CMD
127c: store_word_0_100 2, MC0_CNTL
1280: %r10_0 = *(MC1_CNTL)
1284: sync
1288: delay -7
128c: store_word_0_100 0, MC0_POINTER
1290: store_word_0_100 0x0a280100, MC0_DRAM_CMD
1298: store_word_0_100 0x2f240000, MC0_DRAM_CMD
12a0: store_word_0_100 0x2f240000, MC0_DRAM_CMD
12a8: store_word_0_100 0x003c0000, MC0_DRAM_CMD
12b0: store_word_0_100 2, MC0_CNTL
12b4: store_word_0_100 0x00001605, MC0_CNTL
12bc: store_word_0_100 0x00000605, MC0_CNTL
12c4: %r10_0 = *(MC1_CNTL)
12c8: sync
12cc: delay -7
12d0: return
12d4: store_word_0_100 0, MC0_CNTL
12d8: store_word_0_100 0, MC0_POINTER
12dc: store_word_0_100 0x00040000, MC0_DRAM_CMD
12e4: store_word_0_100 2, MC0_CNTL
12e8: %r10_0 = *(MC1_CNTL)
12ec: sync
12f0: delay -7
12f4: call 0x10c4
12f8: store_word_0_100 0, MC0_POINTER
12fc: store_word_0_100 0x003c0000, MC0_DRAM_CMD
1304: store_word_0_100 2, MC0_CNTL
1308: %r10_0 = *(MC1_CNTL)
130c: sync
1310: delay -7
1314: return
1318: store_word_0_100 0, MC0_CNTL
131c: store_word_0_100 0, MC0_POINTER
1320: %r10_0 = 0
1324: %r11_1 = rotlw_by_25_then_and %r10_1, 1
1328: beq %r11_1, 1 -> 0x1330 v
132c: %r10_0 = -1
1330: store_word %r11_0, MC0_DRAM_DATA
1334: %r10_0 = xor %r11_0, -1
1338: store_word %r11_0, MC1_DRAM_DATA
133c: store_word_0_100 %r10_0, MC0_DRAM_DATA
1340: store_word_0_100 %r10_0, MC0_DRAM_DATA
1344: store_word_0_100 %r10_0, MC0_DRAM_DATA
1348: store_word_0_100 %r10_0, MC0_DRAM_DATA
134c: store_word_0_100 %r10_0, MC0_DRAM_DATA
1350: store_word_0_100 %r10_0, MC0_DRAM_DATA
1354: store_word_0_100 %r10_0, MC0_DRAM_DATA
1358: store_word_0_100 %r10_0, MC0_DRAM_DATA
135c: %r10_0 = 0
1360: %r11_1 = rotlw_by_25_then_and %r10_1, 1
1364: beq %r11_1, 1 -> 0x136c v
1368: %r10_0 = -1
136c: store_word %r11_0, MC0_DRAM_DATA
1370: %r10_0 = xor %r11_0, -1
1374: store_word %r11_0, MC1_DRAM_DATA
1378: store_word_0_100 %r10_0, MC0_DRAM_DATA
137c: store_word_0_100 %r10_0, MC0_DRAM_DATA
1380: %r10_0 = xor %r10_0, -1
1384: store_word_0_100 %r10_0, MC0_DRAM_DATA
1388: store_word_0_100 %r10_0, MC0_DRAM_DATA
138c: %r10_0 = xor %r10_0, -1
1390: store_word_0_100 %r10_0, MC0_DRAM_DATA
1394: store_word_0_100 %r10_0, MC0_DRAM_DATA
1398: %r10_0 = xor %r10_0, -1
139c: store_word_0_100 %r10_0, MC0_DRAM_DATA
13a0: store_word_0_100 %r10_0, MC0_DRAM_DATA
13a4: %r10_0 = 0x0f2c0000
13ac: %r11_1 = rotlw_by_1_then_and %r10_1, 0x00008000
13b4: %r10_0 = or %r11_0, %r11_1
13b8: %r11_1 = rotlw_by_5_then_and %r10_1, 0x00010000
13c0: %r10_0 = or %r11_0, %r11_1
13c4: %r11_1 = rotlw_by_2_then_and %r10_1, 0x00020000
13cc: %r10_0 = or %r11_0, %r11_1
13d0: %r11_1 = rotlw_by_16_then_and %r10_1, 0x00001fff
13d8: %r10_0 = or %r11_0, %r11_1
13dc: store_word_0_100 %r11_0, MC0_DRAM_CMD
13e0: %r10_0 = and %r11_0, 0x0003e000
13e8: %r10_0 = xor %r11_0, 0x00008000
13f0: %r10_0 = or %r11_0, 0x012c0000
13f8: store_word_0_100 %r11_0, MC0_DRAM_CMD
13fc: %r10_0 = xor %r11_0, 0x00008000
1404: %r10_0 = and %r11_0, 0x0003e000
140c: %r10_0 = or %r11_0, 0x01b00000
1414: %r11_1 = rotlw_by_29_then_and %r10_1, 0x0000000f
141c: %r10_0 = or %r11_0, %r11_1
1420: %r11_1 = rotlw_by_28_then_and %r10_1, 0x00000070
1428: %r10_0 = or %r11_0, %r11_1
142c: %r11_1 = rotlw_by_27_then_and %r10_1, 0x00000080
1434: %r10_0 = or %r11_0, %r11_1
1438: %r11_1 = rotlw_by_28_then_and %r10_1, 0x00000200
1440: %r10_0 = or %r11_0, %r11_1
1444: store_word_0_100 %r11_0, MC0_DRAM_CMD
1448: %r10_0 = or %r11_0, 0x02000000
1450: store_word_0_100 %r11_0, MC0_DRAM_CMD
1454: %r10_0 = and %r11_0, 0x0003e000
145c: %r10_0 = xor %r11_0, 0x00010000
1464: %r10_0 = or %r11_0, 0x1f2c0000
146c: store_word_0_100 %r11_0, MC0_DRAM_CMD
1470: %r10_0 = xor %r11_0, 0x00010000
1478: %r10_0 = and %r11_0, 0x0003e000
1480: %r10_0 = or %r11_0, 0x1f280000
1488: store_word_0_100 %r11_0, MC0_DRAM_CMD
148c: %r10_0 = xor %r11_0, 0x00008000
1494: store_word_0_100 %r11_0, MC0_DRAM_CMD
1498: %r10_0 = xor %r11_0, 0x00008000
14a0: %r10_0 = xor %r11_0, 0x00010000
14a8: store_word_0_100 %r11_0, MC0_DRAM_CMD
14ac: %r10_0 = xor %r11_0, 0x00010000
14b4: store_word_0_100 2, MC0_CNTL
14b8: store_word_0_100 0x00001605, MC0_CNTL
14c0: store_word_0_100 0x00000605, MC0_CNTL
14c8: %r10_1 = add %r10_1, 0x00000020
14d0: store_word_0_100 0, MC0_CNTL
14d4: store_word_0_100 0, MC0_POINTER
14d8: %r10_0 = 0
14dc: %r11_1 = rotlw_by_25_then_and %r10_1, 1
14e0: beq %r11_1, 1 -> 0x14e8 v
14e4: %r10_0 = -1
14e8: store_word %r11_0, MC0_DRAM_DATA
14ec: %r10_0 = xor %r11_0, -1
14f0: store_word %r11_0, MC1_DRAM_DATA
14f4: store_word_0_100 %r10_0, MC0_DRAM_DATA
14f8: store_word_0_100 %r10_0, MC0_DRAM_DATA
14fc: store_word_0_100 %r10_0, MC0_DRAM_DATA
1500: store_word_0_100 %r10_0, MC0_DRAM_DATA
1504: store_word_0_100 %r10_0, MC0_DRAM_DATA
1508: store_word_0_100 %r10_0, MC0_DRAM_DATA
150c: store_word_0_100 %r10_0, MC0_DRAM_DATA
1510: store_word_0_100 %r10_0, MC0_DRAM_DATA
1514: %r10_0 = 0
1518: %r11_1 = rotlw_by_25_then_and %r10_1, 1
151c: beq %r11_1, 1 -> 0x1524 v
1520: %r10_0 = -1
1524: store_word %r11_0, MC0_DRAM_DATA
1528: %r10_0 = xor %r11_0, -1
152c: store_word %r11_0, MC1_DRAM_DATA
1530: store_word_0_100 %r10_0, MC0_DRAM_DATA
1534: store_word_0_100 %r10_0, MC0_DRAM_DATA
1538: %r10_0 = xor %r10_0, -1
153c: store_word_0_100 %r10_0, MC0_DRAM_DATA
1540: store_word_0_100 %r10_0, MC0_DRAM_DATA
1544: %r10_0 = xor %r10_0, -1
1548: store_word_0_100 %r10_0, MC0_DRAM_DATA
154c: store_word_0_100 %r10_0, MC0_DRAM_DATA
1550: %r10_0 = xor %r10_0, -1
1554: store_word_0_100 %r10_0, MC0_DRAM_DATA
1558: store_word_0_100 %r10_0, MC0_DRAM_DATA
155c: %r10_0 = 0x0f2c0000
1564: %r11_1 = rotlw_by_1_then_and %r10_1, 0x00008000
156c: %r10_0 = or %r11_0, %r11_1
1570: %r11_1 = rotlw_by_5_then_and %r10_1, 0x00010000
1578: %r10_0 = or %r11_0, %r11_1
157c: %r11_1 = rotlw_by_2_then_and %r10_1, 0x00020000
1584: %r10_0 = or %r11_0, %r11_1
1588: %r11_1 = rotlw_by_16_then_and %r10_1, 0x00001fff
1590: %r10_0 = or %r11_0, %r11_1
1594: store_word_0_100 %r11_0, MC0_DRAM_CMD
1598: %r10_0 = and %r11_0, 0x0003e000
15a0: %r10_0 = xor %r11_0, 0x00008000
15a8: %r10_0 = or %r11_0, 0x012c0000
15b0: store_word_0_100 %r11_0, MC0_DRAM_CMD
15b4: %r10_0 = xor %r11_0, 0x00008000
15bc: %r10_0 = and %r11_0, 0x0003e000
15c4: %r10_0 = or %r11_0, 0x01b00000
15cc: %r11_1 = rotlw_by_29_then_and %r10_1, 0x0000000f
15d4: %r10_0 = or %r11_0, %r11_1
15d8: %r11_1 = rotlw_by_28_then_and %r10_1, 0x00000070
15e0: %r10_0 = or %r11_0, %r11_1
15e4: %r11_1 = rotlw_by_27_then_and %r10_1, 0x00000080
15ec: %r10_0 = or %r11_0, %r11_1
15f0: %r11_1 = rotlw_by_28_then_and %r10_1, 0x00000200
15f8: %r10_0 = or %r11_0, %r11_1
15fc: store_word_0_100 %r11_0, MC0_DRAM_CMD
1600: %r10_0 = or %r11_0, 0x02000000
1608: store_word_0_100 %r11_0, MC0_DRAM_CMD
160c: %r10_0 = and %r11_0, 0x0003e000
1614: %r10_0 = xor %r11_0, 0x00010000
161c: %r10_0 = or %r11_0, 0x1f2c0000
1624: store_word_0_100 %r11_0, MC0_DRAM_CMD
1628: %r10_0 = xor %r11_0, 0x00010000
1630: %r10_0 = and %r11_0, 0x0003e000
1638: %r10_0 = or %r11_0, 0x1f280000
1640: store_word_0_100 %r11_0, MC0_DRAM_CMD
1644: %r10_0 = xor %r11_0, 0x00008000
164c: store_word_0_100 %r11_0, MC0_DRAM_CMD
1650: %r10_0 = xor %r11_0, 0x00008000
1658: %r10_0 = xor %r11_0, 0x00010000
1660: store_word_0_100 %r11_0, MC0_DRAM_CMD
1664: %r10_0 = xor %r11_0, 0x00010000
166c: store_word_0_100 2, MC0_CNTL
1670: store_word_0_100 0x00001605, MC0_CNTL
1678: store_word_0_100 0x00000605, MC0_CNTL
1680: %r10_1 = add %r10_1, 0x00000020
1688: store_word_0_100 0, MC0_CNTL
168c: store_word_0_100 0, MC0_POINTER
1690: %r10_0 = 0
1694: %r11_1 = rotlw_by_25_then_and %r10_1, 1
1698: beq %r11_1, 1 -> 0x16a0 v
169c: %r10_0 = -1
16a0: store_word %r11_0, MC0_DRAM_DATA
16a4: %r10_0 = xor %r11_0, -1
16a8: store_word %r11_0, MC1_DRAM_DATA
16ac: store_word_0_100 %r10_0, MC0_DRAM_DATA
16b0: store_word_0_100 %r10_0, MC0_DRAM_DATA
16b4: store_word_0_100 %r10_0, MC0_DRAM_DATA
16b8: store_word_0_100 %r10_0, MC0_DRAM_DATA
16bc: store_word_0_100 %r10_0, MC0_DRAM_DATA
16c0: store_word_0_100 %r10_0, MC0_DRAM_DATA
16c4: store_word_0_100 %r10_0, MC0_DRAM_DATA
16c8: store_word_0_100 %r10_0, MC0_DRAM_DATA
16cc: %r10_0 = 0
16d0: %r11_1 = rotlw_by_25_then_and %r10_1, 1
16d4: beq %r11_1, 1 -> 0x16dc v
16d8: %r10_0 = -1
16dc: store_word %r11_0, MC0_DRAM_DATA
16e0: %r10_0 = xor %r11_0, -1
16e4: store_word %r11_0, MC1_DRAM_DATA
16e8: store_word_0_100 %r10_0, MC0_DRAM_DATA
16ec: store_word_0_100 %r10_0, MC0_DRAM_DATA
16f0: store_word_0_100 %r10_0, MC0_DRAM_DATA
16f4: store_word_0_100 %r10_0, MC0_DRAM_DATA
16f8: %r10_0 = xor %r10_0, -1
16fc: store_word_0_100 %r10_0, MC0_DRAM_DATA
1700: store_word_0_100 %r10_0, MC0_DRAM_DATA
1704: %r10_0 = xor %r10_0, -1
1708: store_word_0_100 %r10_0, MC0_DRAM_DATA
170c: store_word_0_100 %r10_0, MC0_DRAM_DATA
1710: %r10_0 = xor %r10_0, -1
1714: %r10_0 = 0x0f2c0000
171c: %r11_1 = rotlw_by_1_then_and %r10_1, 0x00008000
1724: %r10_0 = or %r11_0, %r11_1
1728: %r11_1 = rotlw_by_5_then_and %r10_1, 0x00010000
1730: %r10_0 = or %r11_0, %r11_1
1734: %r11_1 = rotlw_by_2_then_and %r10_1, 0x00020000
173c: %r10_0 = or %r11_0, %r11_1
1740: %r11_1 = rotlw_by_16_then_and %r10_1, 0x00001fff
1748: %r10_0 = or %r11_0, %r11_1
174c: store_word_0_100 %r11_0, MC0_DRAM_CMD
1750: %r10_0 = and %r11_0, 0x0003e000
1758: %r10_0 = xor %r11_0, 0x00008000
1760: %r10_0 = or %r11_0, 0x012c0000
1768: store_word_0_100 %r11_0, MC0_DRAM_CMD
176c: %r10_0 = xor %r11_0, 0x00008000
1774: %r10_0 = and %r11_0, 0x0003e000
177c: %r10_0 = or %r11_0, 0x01b00000
1784: %r11_1 = rotlw_by_29_then_and %r10_1, 0x0000000f
178c: %r10_0 = or %r11_0, %r11_1
1790: %r11_1 = rotlw_by_28_then_and %r10_1, 0x00000070
1798: %r10_0 = or %r11_0, %r11_1
179c: %r11_1 = rotlw_by_27_then_and %r10_1, 0x00000080
17a4: %r10_0 = or %r11_0, %r11_1
17a8: %r11_1 = rotlw_by_28_then_and %r10_1, 0x00000200
17b0: %r10_0 = or %r11_0, %r11_1
17b4: store_word_0_100 %r11_0, MC0_DRAM_CMD
17b8: %r10_0 = or %r11_0, 0x02000000
17c0: store_word_0_100 %r11_0, MC0_DRAM_CMD
17c4: %r10_0 = and %r11_0, 0x0003e000
17cc: %r10_0 = xor %r11_0, 0x00010000
17d4: %r10_0 = or %r11_0, 0x1f2c0000
17dc: store_word_0_100 %r11_0, MC0_DRAM_CMD
17e0: %r10_0 = xor %r11_0, 0x00010000
17e8: %r10_0 = and %r11_0, 0x0003e000
17f0: %r10_0 = or %r11_0, 0x1f280000
17f8: store_word_0_100 %r11_0, MC0_DRAM_CMD
17fc: %r10_0 = xor %r11_0, 0x00008000
1804: store_word_0_100 %r11_0, MC0_DRAM_CMD
1808: %r10_0 = xor %r11_0, 0x00008000
1810: %r10_0 = xor %r11_0, 0x00010000
1818: store_word_0_100 %r11_0, MC0_DRAM_CMD
181c: %r10_0 = xor %r11_0, 0x00010000
1824: store_word_0_100 2, MC0_CNTL
1828: store_word_0_100 0x00001605, MC0_CNTL
1830: store_word_0_100 0x00000605, MC0_CNTL
1838: %r10_1 = add %r10_1, 0x00000020
1840: store_word_0_100 0, MC0_CNTL
1844: store_word_0_100 0, MC0_POINTER
1848: %r10_0 = 0
184c: %r11_1 = rotlw_by_25_then_and %r10_1, 1
1850: beq %r11_1, 1 -> 0x1858 v
1854: %r10_0 = -1
1858: store_word %r11_0, MC0_DRAM_DATA
185c: %r10_0 = xor %r11_0, -1
1860: store_word %r11_0, MC1_DRAM_DATA
1864: store_word_0_100 %r10_0, MC0_DRAM_DATA
1868: store_word_0_100 %r10_0, MC0_DRAM_DATA
186c: store_word_0_100 %r10_0, MC0_DRAM_DATA
1870: store_word_0_100 %r10_0, MC0_DRAM_DATA
1874: store_word_0_100 %r10_0, MC0_DRAM_DATA
1878: store_word_0_100 %r10_0, MC0_DRAM_DATA
187c: store_word_0_100 %r10_0, MC0_DRAM_DATA
1880: store_word_0_100 %r10_0, MC0_DRAM_DATA
1884: %r10_0 = 0
1888: %r11_1 = rotlw_by_25_then_and %r10_1, 1
188c: beq %r11_1, 1 -> 0x1894 v
1890: %r10_0 = -1
1894: store_word %r11_0, MC0_DRAM_DATA
1898: %r10_0 = xor %r11_0, -1
189c: store_word %r11_0, MC1_DRAM_DATA
18a0: store_word_0_100 %r10_0, MC0_DRAM_DATA
18a4: store_word_0_100 %r10_0, MC0_DRAM_DATA
18a8: store_word_0_100 %r10_0, MC0_DRAM_DATA
18ac: store_word_0_100 %r10_0, MC0_DRAM_DATA
18b0: %r10_0 = xor %r10_0, -1
18b4: store_word_0_100 %r10_0, MC0_DRAM_DATA
18b8: store_word_0_100 %r10_0, MC0_DRAM_DATA
18bc: %r10_0 = xor %r10_0, -1
18c0: store_word_0_100 %r10_0, MC0_DRAM_DATA
18c4: store_word_0_100 %r10_0, MC0_DRAM_DATA
18c8: %r10_0 = xor %r10_0, -1
18cc: %r10_0 = 0x0f2c0000
18d4: %r11_1 = rotlw_by_1_then_and %r10_1, 0x00008000
18dc: %r10_0 = or %r11_0, %r11_1
18e0: %r11_1 = rotlw_by_5_then_and %r10_1, 0x00010000
18e8: %r10_0 = or %r11_0, %r11_1
18ec: %r11_1 = rotlw_by_2_then_and %r10_1, 0x00020000
18f4: %r10_0 = or %r11_0, %r11_1
18f8: %r11_1 = rotlw_by_16_then_and %r10_1, 0x00001fff
1900: %r10_0 = or %r11_0, %r11_1
1904: store_word_0_100 %r11_0, MC0_DRAM_CMD
1908: %r10_0 = and %r11_0, 0x0003e000
1910: %r10_0 = xor %r11_0, 0x00008000
1918: %r10_0 = or %r11_0, 0x012c0000
1920: store_word_0_100 %r11_0, MC0_DRAM_CMD
1924: %r10_0 = xor %r11_0, 0x00008000
192c: %r10_0 = and %r11_0, 0x0003e000
1934: %r10_0 = or %r11_0, 0x01b00000
193c: %r11_1 = rotlw_by_29_then_and %r10_1, 0x0000000f
1944: %r10_0 = or %r11_0, %r11_1
1948: %r11_1 = rotlw_by_28_then_and %r10_1, 0x00000070
1950: %r10_0 = or %r11_0, %r11_1
1954: %r11_1 = rotlw_by_27_then_and %r10_1, 0x00000080
195c: %r10_0 = or %r11_0, %r11_1
1960: %r11_1 = rotlw_by_28_then_and %r10_1, 0x00000200
1968: %r10_0 = or %r11_0, %r11_1
196c: store_word_0_100 %r11_0, MC0_DRAM_CMD
1970: %r10_0 = or %r11_0, 0x02000000
1978: store_word_0_100 %r11_0, MC0_DRAM_CMD
197c: %r10_0 = and %r11_0, 0x0003e000
1984: %r10_0 = xor %r11_0, 0x00010000
198c: %r10_0 = or %r11_0, 0x1f2c0000
1994: store_word_0_100 %r11_0, MC0_DRAM_CMD
1998: %r10_0 = xor %r11_0, 0x00010000
19a0: %r10_0 = and %r11_0, 0x0003e000
19a8: %r10_0 = or %r11_0, 0x1f280000
19b0: store_word_0_100 %r11_0, MC0_DRAM_CMD
19b4: %r10_0 = xor %r11_0, 0x00008000
19bc: store_word_0_100 %r11_0, MC0_DRAM_CMD
19c0: %r10_0 = xor %r11_0, 0x00008000
19c8: %r10_0 = xor %r11_0, 0x00010000
19d0: store_word_0_100 %r11_0, MC0_DRAM_CMD
19d4: %r10_0 = xor %r11_0, 0x00010000
19dc: store_word_0_100 2, MC0_CNTL
19e0: store_word_0_100 0x00001605, MC0_CNTL
19e8: store_word_0_100 0x00000605, MC0_CNTL
19f0: %r10_1 = add %r10_1, 0x00000020
19f8: store_word_0_100 0, MC0_CNTL
19fc: store_word_0_100 0, MC0_POINTER
1a00: %r10_0 = 0
1a04: %r11_1 = rotlw_by_25_then_and %r10_1, 1
1a08: beq %r11_1, 1 -> 0x1a10 v
1a0c: %r10_0 = -1
1a10: store_word %r11_0, MC0_DRAM_DATA
1a14: %r10_0 = xor %r11_0, -1
1a18: store_word %r11_0, MC1_DRAM_DATA
1a1c: store_word_0_100 %r10_0, MC0_DRAM_DATA
1a20: store_word_0_100 %r10_0, MC0_DRAM_DATA
1a24: store_word_0_100 %r10_0, MC0_DRAM_DATA
1a28: store_word_0_100 %r10_0, MC0_DRAM_DATA
1a2c: store_word_0_100 %r10_0, MC0_DRAM_DATA
1a30: store_word_0_100 %r10_0, MC0_DRAM_DATA
1a34: store_word_0_100 %r10_0, MC0_DRAM_DATA
1a38: store_word_0_100 %r10_0, MC0_DRAM_DATA
1a3c: %r10_0 = 0
1a40: %r11_1 = rotlw_by_25_then_and %r10_1, 1
1a44: beq %r11_1, 1 -> 0x1a4c v
1a48: %r10_0 = -1
1a4c: store_word %r11_0, MC0_DRAM_DATA
1a50: %r10_0 = xor %r11_0, -1
1a54: store_word %r11_0, MC1_DRAM_DATA
1a58: store_word_0_100 %r10_0, MC0_DRAM_DATA
1a5c: store_word_0_100 %r10_0, MC0_DRAM_DATA
1a60: %r10_0 = xor %r10_0, -1
1a64: store_word_0_100 %r10_0, MC0_DRAM_DATA
1a68: store_word_0_100 %r10_0, MC0_DRAM_DATA
1a6c: %r10_0 = xor %r10_0, -1
1a70: store_word_0_100 %r10_0, MC0_DRAM_DATA
1a74: store_word_0_100 %r10_0, MC0_DRAM_DATA
1a78: %r10_0 = xor %r10_0, -1
1a7c: store_word_0_100 %r10_0, MC0_DRAM_DATA
1a80: store_word_0_100 %r10_0, MC0_DRAM_DATA
1a84: %r10_0 = 0x0f2c0000
1a8c: %r11_1 = rotlw_by_1_then_and %r10_1, 0x00008000
1a94: %r10_0 = or %r11_0, %r11_1
1a98: %r11_1 = rotlw_by_5_then_and %r10_1, 0x00010000
1aa0: %r10_0 = or %r11_0, %r11_1
1aa4: %r11_1 = rotlw_by_2_then_and %r10_1, 0x00020000
1aac: %r10_0 = or %r11_0, %r11_1
1ab0: %r11_1 = rotlw_by_16_then_and %r10_1, 0x00001fff
1ab8: %r10_0 = or %r11_0, %r11_1
1abc: store_word_0_100 %r11_0, MC0_DRAM_CMD
1ac0: %r10_0 = and %r11_0, 0x0003e000
1ac8: %r10_0 = xor %r11_0, 0x00008000
1ad0: %r10_0 = or %r11_0, 0x012c0000
1ad8: store_word_0_100 %r11_0, MC0_DRAM_CMD
1adc: %r10_0 = xor %r11_0, 0x00008000
1ae4: %r10_0 = and %r11_0, 0x0003e000
1aec: %r10_0 = or %r11_0, 0x01b00000
1af4: %r11_1 = rotlw_by_29_then_and %r10_1, 0x0000000f
1afc: %r10_0 = or %r11_0, %r11_1
1b00: %r11_1 = rotlw_by_28_then_and %r10_1, 0x00000070
1b08: %r10_0 = or %r11_0, %r11_1
1b0c: %r11_1 = rotlw_by_27_then_and %r10_1, 0x00000080
1b14: %r10_0 = or %r11_0, %r11_1
1b18: %r11_1 = rotlw_by_28_then_and %r10_1, 0x00000200
1b20: %r10_0 = or %r11_0, %r11_1
1b24: store_word_0_100 %r11_0, MC0_DRAM_CMD
1b28: %r10_0 = or %r11_0, 0x02000000
1b30: store_word_0_100 %r11_0, MC0_DRAM_CMD
1b34: %r10_0 = and %r11_0, 0x0003e000
1b3c: %r10_0 = xor %r11_0, 0x00010000
1b44: %r10_0 = or %r11_0, 0x1f2c0000
1b4c: store_word_0_100 %r11_0, MC0_DRAM_CMD
1b50: %r10_0 = xor %r11_0, 0x00010000
1b58: %r10_0 = and %r11_0, 0x0003e000
1b60: %r10_0 = or %r11_0, 0x1f280000
1b68: store_word_0_100 %r11_0, MC0_DRAM_CMD
1b6c: %r10_0 = xor %r11_0, 0x00008000
1b74: store_word_0_100 %r11_0, MC0_DRAM_CMD
1b78: %r10_0 = xor %r11_0, 0x00008000
1b80: %r10_0 = xor %r11_0, 0x00010000
1b88: store_word_0_100 %r11_0, MC0_DRAM_CMD
1b8c: %r10_0 = xor %r11_0, 0x00010000
1b94: store_word_0_100 2, MC0_CNTL
1b98: store_word_0_100 0x00001605, MC0_CNTL
1ba0: store_word_0_100 0x00000605, MC0_CNTL
1ba8: %r10_1 = add %r10_1, 0x00000020
1bb0: store_word_0_100 0, MC0_CNTL
1bb4: store_word_0_100 0, MC0_POINTER
1bb8: %r10_0 = 0
1bbc: %r11_1 = rotlw_by_25_then_and %r10_1, 1
1bc0: beq %r11_1, 1 -> 0x1bc8 v
1bc4: %r10_0 = -1
1bc8: store_word %r11_0, MC0_DRAM_DATA
1bcc: %r10_0 = xor %r11_0, -1
1bd0: store_word %r11_0, MC1_DRAM_DATA
1bd4: store_word_0_100 %r10_0, MC0_DRAM_DATA
1bd8: store_word_0_100 %r10_0, MC0_DRAM_DATA
1bdc: store_word_0_100 %r10_0, MC0_DRAM_DATA
1be0: store_word_0_100 %r10_0, MC0_DRAM_DATA
1be4: store_word_0_100 %r10_0, MC0_DRAM_DATA
1be8: store_word_0_100 %r10_0, MC0_DRAM_DATA
1bec: store_word_0_100 %r10_0, MC0_DRAM_DATA
1bf0: store_word_0_100 %r10_0, MC0_DRAM_DATA
1bf4: %r10_0 = 0
1bf8: %r11_1 = rotlw_by_25_then_and %r10_1, 1
1bfc: beq %r11_1, 1 -> 0x1c04 v
1c00: %r10_0 = -1
1c04: store_word %r11_0, MC0_DRAM_DATA
1c08: %r10_0 = xor %r11_0, -1
1c0c: store_word %r11_0, MC1_DRAM_DATA
1c10: store_word_0_100 %r10_0, MC0_DRAM_DATA
1c14: store_word_0_100 %r10_0, MC0_DRAM_DATA
1c18: %r10_0 = xor %r10_0, -1
1c1c: store_word_0_100 %r10_0, MC0_DRAM_DATA
1c20: store_word_0_100 %r10_0, MC0_DRAM_DATA
1c24: %r10_0 = xor %r10_0, -1
1c28: store_word_0_100 %r10_0, MC0_DRAM_DATA
1c2c: store_word_0_100 %r10_0, MC0_DRAM_DATA
1c30: %r10_0 = xor %r10_0, -1
1c34: store_word_0_100 %r10_0, MC0_DRAM_DATA
1c38: store_word_0_100 %r10_0, MC0_DRAM_DATA
1c3c: %r10_0 = 0x0f2c0000
1c44: %r11_1 = rotlw_by_1_then_and %r10_1, 0x00008000
1c4c: %r10_0 = or %r11_0, %r11_1
1c50: %r11_1 = rotlw_by_5_then_and %r10_1, 0x00010000
1c58: %r10_0 = or %r11_0, %r11_1
1c5c: %r11_1 = rotlw_by_2_then_and %r10_1, 0x00020000
1c64: %r10_0 = or %r11_0, %r11_1
1c68: %r11_1 = rotlw_by_16_then_and %r10_1, 0x00001fff
1c70: %r10_0 = or %r11_0, %r11_1
1c74: store_word_0_100 %r11_0, MC0_DRAM_CMD
1c78: %r10_0 = and %r11_0, 0x0003e000
1c80: %r10_0 = xor %r11_0, 0x00008000
1c88: %r10_0 = or %r11_0, 0x012c0000
1c90: store_word_0_100 %r11_0, MC0_DRAM_CMD
1c94: %r10_0 = xor %r11_0, 0x00008000
1c9c: %r10_0 = and %r11_0, 0x0003e000
1ca4: %r10_0 = or %r11_0, 0x01b00000
1cac: %r11_1 = rotlw_by_29_then_and %r10_1, 0x0000000f
1cb4: %r10_0 = or %r11_0, %r11_1
1cb8: %r11_1 = rotlw_by_28_then_and %r10_1, 0x00000070
1cc0: %r10_0 = or %r11_0, %r11_1
1cc4: %r11_1 = rotlw_by_27_then_and %r10_1, 0x00000080
1ccc: %r10_0 = or %r11_0, %r11_1
1cd0: %r11_1 = rotlw_by_28_then_and %r10_1, 0x00000200
1cd8: %r10_0 = or %r11_0, %r11_1
1cdc: store_word_0_100 %r11_0, MC0_DRAM_CMD
1ce0: %r10_0 = or %r11_0, 0x02000000
1ce8: store_word_0_100 %r11_0, MC0_DRAM_CMD
1cec: %r10_0 = and %r11_0, 0x0003e000
1cf4: %r10_0 = xor %r11_0, 0x00010000
1cfc: %r10_0 = or %r11_0, 0x1f2c0000
1d04: store_word_0_100 %r11_0, MC0_DRAM_CMD
1d08: %r10_0 = xor %r11_0, 0x00010000
1d10: %r10_0 = and %r11_0, 0x0003e000
1d18: %r10_0 = or %r11_0, 0x1f280000
1d20: store_word_0_100 %r11_0, MC0_DRAM_CMD
1d24: %r10_0 = xor %r11_0, 0x00008000
1d2c: store_word_0_100 %r11_0, MC0_DRAM_CMD
1d30: %r10_0 = xor %r11_0, 0x00008000
1d38: %r10_0 = xor %r11_0, 0x00010000
1d40: store_word_0_100 %r11_0, MC0_DRAM_CMD
1d44: %r10_0 = xor %r11_0, 0x00010000
1d4c: store_word_0_100 2, MC0_CNTL
1d50: store_word_0_100 0x00001605, MC0_CNTL
1d58: store_word_0_100 0x00000605, MC0_CNTL
1d60: %r10_1 = add %r10_1, 0x00000020
1d68: store_word_0_100 0, MC0_CNTL
1d6c: store_word_0_100 0, MC0_POINTER
1d70: %r10_0 = 0
1d74: %r11_1 = rotlw_by_25_then_and %r10_1, 1
1d78: beq %r11_1, 1 -> 0x1d80 v
1d7c: %r10_0 = -1
1d80: store_word %r11_0, MC0_DRAM_DATA
1d84: %r10_0 = xor %r11_0, -1
1d88: store_word %r11_0, MC1_DRAM_DATA
1d8c: store_word_0_100 %r10_0, MC0_DRAM_DATA
1d90: store_word_0_100 %r10_0, MC0_DRAM_DATA
1d94: store_word_0_100 %r10_0, MC0_DRAM_DATA
1d98: store_word_0_100 %r10_0, MC0_DRAM_DATA
1d9c: store_word_0_100 %r10_0, MC0_DRAM_DATA
1da0: store_word_0_100 %r10_0, MC0_DRAM_DATA
1da4: store_word_0_100 %r10_0, MC0_DRAM_DATA
1da8: store_word_0_100 %r10_0, MC0_DRAM_DATA
1dac: %r10_0 = 0
1db0: %r11_1 = rotlw_by_25_then_and %r10_1, 1
1db4: beq %r11_1, 1 -> 0x1dbc v
1db8: %r10_0 = -1
1dbc: store_word %r11_0, MC0_DRAM_DATA
1dc0: %r10_0 = xor %r11_0, -1
1dc4: store_word %r11_0, MC1_DRAM_DATA
1dc8: store_word_0_100 %r10_0, MC0_DRAM_DATA
1dcc: store_word_0_100 %r10_0, MC0_DRAM_DATA
1dd0: store_word_0_100 %r10_0, MC0_DRAM_DATA
1dd4: store_word_0_100 %r10_0, MC0_DRAM_DATA
1dd8: %r10_0 = xor %r10_0, -1
1ddc: store_word_0_100 %r10_0, MC0_DRAM_DATA
1de0: store_word_0_100 %r10_0, MC0_DRAM_DATA
1de4: %r10_0 = xor %r10_0, -1
1de8: store_word_0_100 %r10_0, MC0_DRAM_DATA
1dec: store_word_0_100 %r10_0, MC0_DRAM_DATA
1df0: %r10_0 = xor %r10_0, -1
1df4: %r10_0 = 0x0f2c0000
1dfc: %r11_1 = rotlw_by_1_then_and %r10_1, 0x00008000
1e04: %r10_0 = or %r11_0, %r11_1
1e08: %r11_1 = rotlw_by_5_then_and %r10_1, 0x00010000
1e10: %r10_0 = or %r11_0, %r11_1
1e14: %r11_1 = rotlw_by_2_then_and %r10_1, 0x00020000
1e1c: %r10_0 = or %r11_0, %r11_1
1e20: %r11_1 = rotlw_by_16_then_and %r10_1, 0x00001fff
1e28: %r10_0 = or %r11_0, %r11_1
1e2c: store_word_0_100 %r11_0, MC0_DRAM_CMD
1e30: %r10_0 = and %r11_0, 0x0003e000
1e38: %r10_0 = xor %r11_0, 0x00008000
1e40: %r10_0 = or %r11_0, 0x012c0000
1e48: store_word_0_100 %r11_0, MC0_DRAM_CMD
1e4c: %r10_0 = xor %r11_0, 0x00008000
1e54: %r10_0 = and %r11_0, 0x0003e000
1e5c: %r10_0 = or %r11_0, 0x01b00000
1e64: %r11_1 = rotlw_by_29_then_and %r10_1, 0x0000000f
1e6c: %r10_0 = or %r11_0, %r11_1
1e70: %r11_1 = rotlw_by_28_then_and %r10_1, 0x00000070
1e78: %r10_0 = or %r11_0, %r11_1
1e7c: %r11_1 = rotlw_by_27_then_and %r10_1, 0x00000080
1e84: %r10_0 = or %r11_0, %r11_1
1e88: %r11_1 = rotlw_by_28_then_and %r10_1, 0x00000200
1e90: %r10_0 = or %r11_0, %r11_1
1e94: store_word_0_100 %r11_0, MC0_DRAM_CMD
1e98: %r10_0 = or %r11_0, 0x02000000
1ea0: store_word_0_100 %r11_0, MC0_DRAM_CMD
1ea4: %r10_0 = and %r11_0, 0x0003e000
1eac: %r10_0 = xor %r11_0, 0x00010000
1eb4: %r10_0 = or %r11_0, 0x1f2c0000
1ebc: store_word_0_100 %r11_0, MC0_DRAM_CMD
1ec0: %r10_0 = xor %r11_0, 0x00010000
1ec8: %r10_0 = and %r11_0, 0x0003e000
1ed0: %r10_0 = or %r11_0, 0x1f280000
1ed8: store_word_0_100 %r11_0, MC0_DRAM_CMD
1edc: %r10_0 = xor %r11_0, 0x00008000
1ee4: store_word_0_100 %r11_0, MC0_DRAM_CMD
1ee8: %r10_0 = xor %r11_0, 0x00008000
1ef0: %r10_0 = xor %r11_0, 0x00010000
1ef8: store_word_0_100 %r11_0, MC0_DRAM_CMD
1efc: %r10_0 = xor %r11_0, 0x00010000
1f04: store_word_0_100 2, MC0_CNTL
1f08: store_word_0_100 0x00001605, MC0_CNTL
1f10: store_word_0_100 0x00000605, MC0_CNTL
1f18: %r10_1 = add %r10_1, 0x00000020
1f20: store_word_0_100 0, MC0_CNTL
1f24: store_word_0_100 0, MC0_POINTER
1f28: %r10_0 = 0
1f2c: %r11_1 = rotlw_by_25_then_and %r10_1, 1
1f30: beq %r11_1, 1 -> 0x1f38 v
1f34: %r10_0 = -1
1f38: store_word %r11_0, MC0_DRAM_DATA
1f3c: %r10_0 = xor %r11_0, -1
1f40: store_word %r11_0, MC1_DRAM_DATA
1f44: store_word_0_100 %r10_0, MC0_DRAM_DATA
1f48: store_word_0_100 %r10_0, MC0_DRAM_DATA
1f4c: store_word_0_100 %r10_0, MC0_DRAM_DATA
1f50: store_word_0_100 %r10_0, MC0_DRAM_DATA
1f54: store_word_0_100 %r10_0, MC0_DRAM_DATA
1f58: store_word_0_100 %r10_0, MC0_DRAM_DATA
1f5c: store_word_0_100 %r10_0, MC0_DRAM_DATA
1f60: store_word_0_100 %r10_0, MC0_DRAM_DATA
1f64: %r10_0 = 0
1f68: %r11_1 = rotlw_by_25_then_and %r10_1, 1
1f6c: beq %r11_1, 1 -> 0x1f74 v
1f70: %r10_0 = -1
1f74: store_word %r11_0, MC0_DRAM_DATA
1f78: %r10_0 = xor %r11_0, -1
1f7c: store_word %r11_0, MC1_DRAM_DATA
1f80: store_word_0_100 %r10_0, MC0_DRAM_DATA
1f84: store_word_0_100 %r10_0, MC0_DRAM_DATA
1f88: store_word_0_100 %r10_0, MC0_DRAM_DATA
1f8c: store_word_0_100 %r10_0, MC0_DRAM_DATA
1f90: %r10_0 = xor %r10_0, -1
1f94: store_word_0_100 %r10_0, MC0_DRAM_DATA
1f98: store_word_0_100 %r10_0, MC0_DRAM_DATA
1f9c: %r10_0 = xor %r10_0, -1
1fa0: store_word_0_100 %r10_0, MC0_DRAM_DATA
1fa4: store_word_0_100 %r10_0, MC0_DRAM_DATA
1fa8: %r10_0 = xor %r10_0, -1
1fac: %r10_0 = 0x0f2c0000
1fb4: %r11_1 = rotlw_by_1_then_and %r10_1, 0x00008000
1fbc: %r10_0 = or %r11_0, %r11_1
1fc0: %r11_1 = rotlw_by_5_then_and %r10_1, 0x00010000
1fc8: %r10_0 = or %r11_0, %r11_1
1fcc: %r11_1 = rotlw_by_2_then_and %r10_1, 0x00020000
1fd4: %r10_0 = or %r11_0, %r11_1
1fd8: %r11_1 = rotlw_by_16_then_and %r10_1, 0x00001fff
1fe0: %r10_0 = or %r11_0, %r11_1
1fe4: store_word_0_100 %r11_0, MC0_DRAM_CMD
1fe8: %r10_0 = and %r11_0, 0x0003e000
1ff0: %r10_0 = xor %r11_0, 0x00008000
1ff8: %r10_0 = or %r11_0, 0x012c0000
2000: store_word_0_100 %r11_0, MC0_DRAM_CMD
2004: %r10_0 = xor %r11_0, 0x00008000
200c: %r10_0 = and %r11_0, 0x0003e000
2014: %r10_0 = or %r11_0, 0x01b00000
201c: %r11_1 = rotlw_by_29_then_and %r10_1, 0x0000000f
2024: %r10_0 = or %r11_0, %r11_1
2028: %r11_1 = rotlw_by_28_then_and %r10_1, 0x00000070
2030: %r10_0 = or %r11_0, %r11_1
2034: %r11_1 = rotlw_by_27_then_and %r10_1, 0x00000080
203c: %r10_0 = or %r11_0, %r11_1
2040: %r11_1 = rotlw_by_28_then_and %r10_1, 0x00000200
2048: %r10_0 = or %r11_0, %r11_1
204c: store_word_0_100 %r11_0, MC0_DRAM_CMD
2050: %r10_0 = or %r11_0, 0x02000000
2058: store_word_0_100 %r11_0, MC0_DRAM_CMD
205c: %r10_0 = and %r11_0, 0x0003e000
2064: %r10_0 = xor %r11_0, 0x00010000
206c: %r10_0 = or %r11_0, 0x1f2c0000
2074: store_word_0_100 %r11_0, MC0_DRAM_CMD
2078: %r10_0 = xor %r11_0, 0x00010000
2080: %r10_0 = and %r11_0, 0x0003e000
2088: %r10_0 = or %r11_0, 0x1f280000
2090: store_word_0_100 %r11_0, MC0_DRAM_CMD
2094: %r10_0 = xor %r11_0, 0x00008000
209c: store_word_0_100 %r11_0, MC0_DRAM_CMD
20a0: %r10_0 = xor %r11_0, 0x00008000
20a8: %r10_0 = xor %r11_0, 0x00010000
20b0: store_word_0_100 %r11_0, MC0_DRAM_CMD
20b4: %r10_0 = xor %r11_0, 0x00010000
20bc: store_word_0_100 2, MC0_CNTL
20c0: store_word_0_100 0x00001605, MC0_CNTL
20c8: store_word_0_100 0x00000605, MC0_CNTL
20d0: %r10_1 = add %r10_1, 0x00000020
20d8: return
20dc: %r10_1 = 0x00001800
20e4: %r10_0 = 0x01800180
20ec: call 0x1318
20f0: %r10_0 = 0x02400240
20f8: call 0x1318
20fc: %r10_0 = 0x04200420
2104: call 0x1318
2108: %r10_0 = 0x08100810
2110: call 0x1318
2114: %r10_0 = 0x10081008
211c: call 0x1318
2120: %r10_0 = 0x20042004
2128: call 0x1318
212c: %r10_0 = 0x40024002
2134: call 0x1318
2138: %r10_0 = 0x80018001
2140: call 0x1318
2144: return
2148: %r10_0 = load_word -4
214c: %r11_1 = xor %r11_1, %r10_0
2150: %r13_1 = or %r13_1, %r11_1
2154: %r10_1 = add %r10_1, 0x00000008
215c: %r10_0 = xor %r10_0, -1
2160: %r10_0 = load_word -4
2164: %r11_1 = xor %r11_1, %r10_0
2168: %r13_1 = or %r13_1, %r11_1
216c: %r10_1 = add %r10_1, 0x00000008
2174: %r10_0 = xor %r10_0, -1
2178: %r10_0 = load_word -4
217c: %r11_1 = xor %r11_1, %r10_0
2180: %r13_1 = or %r13_1, %r11_1
2184: %r10_1 = add %r10_1, 0x00000008
218c: %r10_0 = xor %r10_0, -1
2190: %r10_0 = load_word -4
2194: %r11_1 = xor %r11_1, %r10_0
2198: %r13_1 = or %r13_1, %r11_1
219c: %r10_1 = add %r10_1, 0x00000008
21a4: %r10_0 = load_word -4
21a8: %r11_1 = xor %r11_1, %r10_0
21ac: %r13_1 = or %r13_1, %r11_1
21b0: %r10_1 = add %r10_1, 0x00000008
21b8: %r10_0 = xor %r10_0, -1
21bc: %r10_0 = load_word -4
21c0: %r11_1 = xor %r11_1, %r10_0
21c4: %r13_1 = or %r13_1, %r11_1
21c8: %r10_1 = add %r10_1, 0x00000008
21d0: %r10_0 = xor %r10_0, -1
21d4: %r10_0 = load_word -4
21d8: %r11_1 = xor %r11_1, %r10_0
21dc: %r13_1 = or %r13_1, %r11_1
21e0: %r10_1 = add %r10_1, 0x00000008
21e8: %r10_0 = xor %r10_0, -1
21ec: %r10_0 = load_word -4
21f0: %r11_1 = xor %r11_1, %r10_0
21f4: %r13_1 = or %r13_1, %r11_1
21f8: %r10_1 = add %r10_1, 0x00000008
2200: %r10_1 = add %r10_1, 0x000000c0
2208: return
220c: %r13_1 = 0
2210: store_word_0_100 0x00001605, MC0_CNTL
2218: store_word_0_100 0x00000605, MC0_CNTL
2220: %r10_0 = 0x01800180
2228: call 0x2148
222c: %r10_0 = 0x02400240
2234: call 0x2148
2238: %r10_0 = 0x04200420
2240: call 0x2148
2244: %r10_0 = 0x08100810
224c: call 0x2148
2250: %r10_0 = 0x10081008
2258: call 0x2148
225c: %r10_0 = 0x20042004
2264: call 0x2148
2268: %r10_0 = 0x40024002
2270: call 0x2148
2274: %r10_0 = 0x80018001
227c: call 0x2148
2280: %r12_0 = load_word -4
2284: blt? %r11_1, 0x00000018 -> 0x2324 v
228c: %r10_0 = load_word -4
2290: %r11_1 = rotlw_by_31_then_and %r11_1, 0x7fffffff
2298: %r10_1 = add %r10_1, %r11_1
229c: %r10_1 = subf %r10_1, 0x00000800
22a4: store_word_0_100 0x00001605, MC0_CNTL
22ac: store_word_0_100 0x00000605, MC0_CNTL
22b4: %r10_0 = 0x01800180
22bc: call 0x2148
22c0: %r10_0 = 0x02400240
22c8: call 0x2148
22cc: %r10_0 = 0x04200420
22d4: call 0x2148
22d8: %r10_0 = 0x08100810
22e0: call 0x2148
22e4: %r10_0 = 0x10081008
22ec: call 0x2148
22f0: %r10_0 = 0x20042004
22f8: call 0x2148
22fc: %r10_0 = 0x40024002
2304: call 0x2148
2308: %r10_0 = 0x80018001
2310: call 0x2148
2314: %r10_0 = load_word -4
2318: %r11_1 = rotlw_by_31_then_and %r11_1, 0x7fffffff
2320: %r10_1 = subf %r10_1, %r11_1
2324: return
2328: %r10_0 = xor %r10_0, -1
232c: %r10_0 = load_word -5
2330: %r10_0 = xor %r11_0, %r10_0
2334: %r13_1 = or %r13_1, %r11_0
2338: %r10_0 = xor %r11_0, -1
233c: %r11_1 = or %r11_1, %r11_0
2340: %r10_1 = add %r10_1, 0x00000008
2348: %r10_0 = xor %r10_0, -1
234c: %r10_0 = load_word -5
2350: %r10_0 = xor %r11_0, %r10_0
2354: %r13_1 = or %r13_1, %r11_0
2358: %r10_0 = xor %r11_0, -1
235c: %r11_1 = or %r11_1, %r11_0
2360: %r10_1 = add %r10_1, 0x00000008
2368: %r10_0 = xor %r10_0, -1
236c: %r10_1 = add %r10_1, 0x00000010
2374: %r10_0 = xor %r10_0, -1
2378: %r10_0 = load_word -5
237c: %r10_0 = xor %r11_0, %r10_0
2380: %r13_1 = or %r13_1, %r11_0
2384: %r10_0 = xor %r11_0, -1
2388: %r11_1 = or %r11_1, %r11_0
238c: %r10_1 = add %r10_1, 0x00000008
2394: %r10_0 = xor %r10_0, -1
2398: %r10_0 = load_word -5
239c: %r10_0 = xor %r11_0, %r10_0
23a0: %r13_1 = or %r13_1, %r11_0
23a4: %r10_0 = xor %r11_0, -1
23a8: %r11_1 = or %r11_1, %r11_0
23ac: %r10_1 = add %r10_1, 0x00000008
23b4: %r10_0 = xor %r10_0, -1
23b8: %r10_1 = add %r10_1, 0x00000010
23c0: %r12_0 = load_word -5
23c4: blt? %r11_0, 0x00000018 -> 0x2484 v
23cc: %r10_0 = load_word -5
23d0: %r10_0 = rotlw_by_31_then_and %r11_0, -1
23d4: %r10_1 = add %r10_1, %r11_0
23d8: %r10_1 = subf %r10_1, 0x00000040
23e0: %r10_0 = xor %r10_0, -1
23e4: %r10_0 = load_word -5
23e8: %r10_0 = xor %r11_0, %r10_0
23ec: %r13_1 = or %r13_1, %r11_0
23f0: %r10_0 = xor %r11_0, -1
23f4: %r11_1 = or %r11_1, %r11_0
23f8: %r10_1 = add %r10_1, 0x00000008
2400: %r10_0 = xor %r10_0, -1
2404: %r10_0 = load_word -5
2408: %r10_0 = xor %r11_0, %r10_0
240c: %r13_1 = or %r13_1, %r11_0
2410: %r10_0 = xor %r11_0, -1
2414: %r11_1 = or %r11_1, %r11_0
2418: %r10_1 = add %r10_1, 0x00000008
2420: %r10_0 = xor %r10_0, -1
2424: %r10_1 = add %r10_1, 0x00000010
242c: %r10_0 = xor %r10_0, -1
2430: %r10_0 = load_word -5
2434: %r10_0 = xor %r11_0, %r10_0
2438: %r13_1 = or %r13_1, %r11_0
243c: %r10_0 = xor %r11_0, -1
2440: %r11_1 = or %r11_1, %r11_0
2444: %r10_1 = add %r10_1, 0x00000008
244c: %r10_0 = xor %r10_0, -1
2450: %r10_0 = load_word -5
2454: %r10_0 = xor %r11_0, %r10_0
2458: %r13_1 = or %r13_1, %r11_0
245c: %r10_0 = xor %r11_0, -1
2460: %r11_1 = or %r11_1, %r11_0
2464: %r10_1 = add %r10_1, 0x00000008
246c: %r10_0 = xor %r10_0, -1
2470: %r10_1 = add %r10_1, 0x00000010
2478: %r10_0 = load_word -5
247c: %r10_0 = rotlw_by_31_then_and %r11_0, -1
2480: %r10_1 = subf %r10_1, %r11_0
2484: %r10_1 = add %r10_1, 0x000000c0
248c: return
2490: %r11_1 = 0
2494: %r13_1 = 0
2498: %r10_0 = 0x01800180
24a0: call 0x2328
24a4: %r10_0 = 0x02400240
24ac: call 0x2328
24b0: %r10_0 = 0x04200420
24b8: call 0x2328
24bc: %r10_0 = 0x08100810
24c4: call 0x2328
24c8: %r10_0 = 0x10081008
24d0: call 0x2328
24d4: %r10_0 = 0x20042004
24dc: call 0x2328
24e0: %r10_0 = 0x40024002
24e8: call 0x2328
24ec: %r10_0 = 0x80018001
24f4: call 0x2328
24f8: call 0x2964
24fc: call 0x29f4
2500: return
2504: %r10_0 = xor %r10_0, -1
2508: %r10_0 = load_word -5
250c: %r10_0 = xor %r11_0, %r10_0
2510: %r13_1 = or %r13_1, %r11_0
2514: %r10_0 = xor %r11_0, -1
2518: %r11_1 = or %r11_1, %r11_0
251c: %r10_1 = add %r10_1, 0x00000008
2524: %r10_0 = xor %r10_0, -1
2528: %r10_0 = load_word -5
252c: %r10_0 = xor %r11_0, %r10_0
2530: %r13_1 = or %r13_1, %r11_0
2534: %r10_0 = xor %r11_0, -1
2538: %r11_1 = or %r11_1, %r11_0
253c: %r10_1 = add %r10_1, 0x00000008
2544: %r10_0 = xor %r10_0, -1
2548: %r10_1 = add %r10_1, 0x00000010
2550: %r10_0 = xor %r10_0, -1
2554: %r10_0 = load_word -5
2558: %r10_0 = xor %r11_0, %r10_0
255c: %r13_1 = or %r13_1, %r11_0
2560: %r10_0 = xor %r11_0, -1
2564: %r11_1 = or %r11_1, %r11_0
2568: %r10_1 = add %r10_1, 0x00000008
2570: %r10_0 = xor %r10_0, -1
2574: %r10_0 = load_word -5
2578: %r10_0 = xor %r11_0, %r10_0
257c: %r13_1 = or %r13_1, %r11_0
2580: %r10_0 = xor %r11_0, -1
2584: %r11_1 = or %r11_1, %r11_0
2588: %r10_1 = add %r10_1, 0x00000008
2590: %r10_0 = xor %r10_0, -1
2594: %r10_1 = add %r10_1, 0x00000010
259c: %r10_1 = add %r10_1, 0x00000008
25a4: %r10_0 = xor %r10_0, -1
25a8: %r10_0 = load_word -5
25ac: %r10_0 = xor %r11_0, %r10_0
25b0: %r13_1 = or %r13_1, %r11_0
25b4: %r10_0 = xor %r11_0, -1
25b8: %r11_1 = or %r11_1, %r11_0
25bc: %r10_1 = add %r10_1, 0x00000008
25c4: %r10_0 = xor %r10_0, -1
25c8: %r10_0 = load_word -5
25cc: %r10_0 = xor %r11_0, %r10_0
25d0: %r13_1 = or %r13_1, %r11_0
25d4: %r10_0 = xor %r11_0, -1
25d8: %r11_1 = or %r11_1, %r11_0
25dc: %r10_1 = add %r10_1, 0x00000008
25e4: %r10_0 = xor %r10_0, -1
25e8: %r10_1 = add %r10_1, 0x00000010
25f0: %r10_0 = xor %r10_0, -1
25f4: %r10_0 = load_word -5
25f8: %r10_0 = xor %r11_0, %r10_0
25fc: %r13_1 = or %r13_1, %r11_0
2600: %r10_0 = xor %r11_0, -1
2604: %r11_1 = or %r11_1, %r11_0
2608: %r10_1 = add %r10_1, 0x00000008
2610: %r10_0 = xor %r10_0, -1
2614: %r10_0 = load_word -5
2618: %r10_0 = xor %r11_0, %r10_0
261c: %r13_1 = or %r13_1, %r11_0
2620: %r10_0 = xor %r11_0, -1
2624: %r11_1 = or %r11_1, %r11_0
2628: %r10_1 = add %r10_1, 0x00000008
2630: %r10_0 = xor %r10_0, -1
2634: %r10_1 = add %r10_1, 0x00000010
263c: %r12_0 = load_word -5
2640: blt? %r11_0, 0x00000018 -> 0x27a0 v
2648: %r10_0 = load_word -5
264c: %r10_0 = rotlw_by_31_then_and %r11_0, -1
2650: %r10_1 = add %r10_1, %r11_0
2654: %r10_1 = subf %r10_1, 0x00000088
265c: %r10_0 = xor %r10_0, -1
2660: %r10_0 = load_word -5
2664: %r10_0 = xor %r11_0, %r10_0
2668: %r13_1 = or %r13_1, %r11_0
266c: %r10_0 = xor %r11_0, -1
2670: %r11_1 = or %r11_1, %r11_0
2674: %r10_1 = add %r10_1, 0x00000008
267c: %r10_0 = xor %r10_0, -1
2680: %r10_0 = load_word -5
2684: %r10_0 = xor %r11_0, %r10_0
2688: %r13_1 = or %r13_1, %r11_0
268c: %r10_0 = xor %r11_0, -1
2690: %r11_1 = or %r11_1, %r11_0
2694: %r10_1 = add %r10_1, 0x00000008
269c: %r10_0 = xor %r10_0, -1
26a0: %r10_1 = add %r10_1, 0x00000010
26a8: %r10_0 = xor %r10_0, -1
26ac: %r10_0 = load_word -5
26b0: %r10_0 = xor %r11_0, %r10_0
26b4: %r13_1 = or %r13_1, %r11_0
26b8: %r10_0 = xor %r11_0, -1
26bc: %r11_1 = or %r11_1, %r11_0
26c0: %r10_1 = add %r10_1, 0x00000008
26c8: %r10_0 = xor %r10_0, -1
26cc: %r10_0 = load_word -5
26d0: %r10_0 = xor %r11_0, %r10_0
26d4: %r13_1 = or %r13_1, %r11_0
26d8: %r10_0 = xor %r11_0, -1
26dc: %r11_1 = or %r11_1, %r11_0
26e0: %r10_1 = add %r10_1, 0x00000008
26e8: %r10_0 = xor %r10_0, -1
26ec: %r10_1 = add %r10_1, 0x00000010
26f4: %r10_1 = add %r10_1, 0x00000008
26fc: %r10_0 = xor %r10_0, -1
2700: %r10_0 = load_word -5
2704: %r10_0 = xor %r11_0, %r10_0
2708: %r13_1 = or %r13_1, %r11_0
270c: %r10_0 = xor %r11_0, -1
2710: %r11_1 = or %r11_1, %r11_0
2714: %r10_1 = add %r10_1, 0x00000008
271c: %r10_0 = xor %r10_0, -1
2720: %r10_0 = load_word -5
2724: %r10_0 = xor %r11_0, %r10_0
2728: %r13_1 = or %r13_1, %r11_0
272c: %r10_0 = xor %r11_0, -1
2730: %r11_1 = or %r11_1, %r11_0
2734: %r10_1 = add %r10_1, 0x00000008
273c: %r10_0 = xor %r10_0, -1
2740: %r10_1 = add %r10_1, 0x00000010
2748: %r10_0 = xor %r10_0, -1
274c: %r10_0 = load_word -5
2750: %r10_0 = xor %r11_0, %r10_0
2754: %r13_1 = or %r13_1, %r11_0
2758: %r10_0 = xor %r11_0, -1
275c: %r11_1 = or %r11_1, %r11_0
2760: %r10_1 = add %r10_1, 0x00000008
2768: %r10_0 = xor %r10_0, -1
276c: %r10_0 = load_word -5
2770: %r10_0 = xor %r11_0, %r10_0
2774: %r13_1 = or %r13_1, %r11_0
2778: %r10_0 = xor %r11_0, -1
277c: %r11_1 = or %r11_1, %r11_0
2780: %r10_1 = add %r10_1, 0x00000008
2788: %r10_0 = xor %r10_0, -1
278c: %r10_1 = add %r10_1, 0x00000010
2794: %r10_0 = load_word -5
2798: %r10_0 = rotlw_by_31_then_and %r11_0, -1
279c: %r10_1 = subf %r10_1, %r11_0
27a0: %r10_1 = add %r10_1, 0x00000078
27a8: return
27ac: store_word %r11_1, 0xe400001c
27b0: %r11_1 = 0
27b4: %r13_1 = 0
27b8: %r10_0 = 0x01800180
27c0: call 0x2504
27c4: %r10_0 = 0x02400240
27cc: call 0x2504
27d0: %r10_0 = 0x04200420
27d8: call 0x2504
27dc: %r10_0 = 0x08100810
27e4: call 0x2504
27e8: %r10_0 = 0x10081008
27f0: call 0x2504
27f4: %r10_0 = 0x20042004
27fc: call 0x2504
2800: %r10_0 = 0x40024002
2808: call 0x2504
280c: %r10_0 = 0x80018001
2814: call 0x2504
2818: call 0x2824
281c: call 0x28b4
2820: return
2824: %r10_0 = and %r13_1, 0x000000ff
282c: bne %r10_0, 0 -> 0x2844 v
2830: %r12_0 = load_word -5
2834: %r10_0 = and %r11_0, 0x000000ff
283c: %r12_0 = add %r12_0, %r10_0
2840: %r12_0 = add %r13_0, 1
2844: %r10_0 = and %r13_1, 0x0000ff00
284c: bne %r10_0, 0 -> 0x2868 v
2850: %r12_0 = load_word -5
2854: %r10_0 = rotlw_by_8_then_and %r11_0, 0x00ff0000
285c: %r12_0 = add %r12_0, %r10_0
2860: %r12_0 = add %r13_0, 0x00000100
2868: %r10_0 = and %r13_1, 0x00ff0000
2870: bne %r10_0, 0 -> 0x288c v
2874: %r12_0 = load_word -5
2878: %r10_0 = rotlw_by_16_then_and %r11_0, 0x000000ff
2880: %r12_1 = add %r12_1, %r10_0
2884: %r12_0 = add %r13_0, 0x00010000
288c: %r10_0 = and %r13_1, 0xff000000
2894: bne %r10_0, 0 -> 0x28b0 v
2898: %r12_0 = load_word -5
289c: %r10_0 = rotlw_by_24_then_and %r11_0, 0x00ff0000
28a4: %r12_1 = add %r12_1, %r10_0
28a8: %r12_0 = add %r13_0, 0x01000000
28b0: return
28b4: %r10_0 = and %r11_1, 0x000000ff
28bc: bne %r10_0, 0 -> 0x28dc v
28c0: %r12_0 = load_word -5
28c4: %r10_0 = and %r11_0, 0x000000ff
28cc: %r12_0 = add %r12_0, %r10_0
28d0: %r12_0 = subf %r12_0, 0x00000050
28d8: %r12_0 = add %r13_0, 1
28dc: %r10_0 = and %r11_1, 0x0000ff00
28e4: bne %r10_0, 0 -> 0x2908 v
28e8: %r12_0 = load_word -5
28ec: %r10_0 = rotlw_by_8_then_and %r11_0, 0x00ff0000
28f4: %r12_0 = add %r12_0, %r10_0
28f8: %r12_0 = subf %r12_0, 0x00500000
2900: %r12_0 = add %r13_0, 0x00000100
2908: %r10_0 = and %r11_1, 0x00ff0000
2910: bne %r10_0, 0 -> 0x2934 v
2914: %r12_0 = load_word -5
2918: %r10_0 = rotlw_by_16_then_and %r11_0, 0x000000ff
2920: %r12_1 = add %r12_1, %r10_0
2924: %r12_1 = subf %r12_1, 0x00000050
292c: %r12_0 = add %r13_0, 0x00010000
2934: %r10_0 = and %r11_1, 0xff000000
293c: bne %r10_0, 0 -> 0x2960 v
2940: %r12_0 = load_word -5
2944: %r10_0 = rotlw_by_24_then_and %r11_0, 0x00ff0000
294c: %r12_1 = add %r12_1, %r10_0
2950: %r12_1 = subf %r12_1, 0x00500000
2958: %r12_0 = add %r13_0, 0x01000000
2960: return
2964: %r10_0 = and %r13_1, 0x000000ff
296c: bne %r10_0, 0 -> 0x2984 v
2970: %r10_0 = load_word -5
2974: %r10_0 = and %r11_0, 0x000000ff
297c: %r12_0 = add %r12_0, %r10_0
2980: %r12_0 = add %r13_0, 1
2984: %r10_0 = and %r13_1, 0x0000ff00
298c: bne %r10_0, 0 -> 0x29a8 v
2990: %r10_0 = load_word -5
2994: %r10_0 = and %r11_0, 0x00ff0000
299c: %r12_0 = add %r12_0, %r10_0
29a0: %r12_0 = add %r13_0, 0x00000100
29a8: %r10_0 = and %r13_1, 0x00ff0000
29b0: bne %r10_0, 0 -> 0x29cc v
29b4: %r10_0 = load_word -5
29b8: %r10_0 = and %r11_0, 0x000000ff
29c0: %r12_1 = add %r12_1, %r10_0
29c4: %r12_0 = add %r13_0, 0x00010000
29cc: %r10_0 = and %r13_1, 0xff000000
29d4: bne %r10_0, 0 -> 0x29f0 v
29d8: %r10_0 = load_word -5
29dc: %r10_0 = and %r11_0, 0x00ff0000
29e4: %r12_1 = add %r12_1, %r10_0
29e8: %r12_0 = add %r13_0, 0x01000000
29f0: return
29f4: %r10_0 = and %r11_1, 0x000000ff
29fc: bne %r10_0, 0 -> 0x2a1c v
2a00: %r10_0 = load_word -5
2a04: %r10_0 = and %r11_0, 0x000000ff
2a0c: %r12_0 = add %r12_0, %r10_0
2a10: %r12_0 = subf %r12_0, 0x00000050
2a18: %r12_0 = add %r13_0, 1
2a1c: %r10_0 = and %r11_1, 0x0000ff00
2a24: bne %r10_0, 0 -> 0x2a48 v
2a28: %r10_0 = load_word -5
2a2c: %r10_0 = and %r11_0, 0x00ff0000
2a34: %r12_0 = add %r12_0, %r10_0
2a38: %r12_0 = subf %r12_0, 0x00500000
2a40: %r12_0 = add %r13_0, 0x00000100
2a48: %r10_0 = and %r11_1, 0x00ff0000
2a50: bne %r10_0, 0 -> 0x2a74 v
2a54: %r10_0 = load_word -5
2a58: %r10_0 = and %r11_0, 0x000000ff
2a60: %r12_1 = add %r12_1, %r10_0
2a64: %r12_1 = subf %r12_1, 0x00000050
2a6c: %r12_0 = add %r13_0, 0x00010000
2a74: %r10_0 = and %r11_1, 0xff000000
2a7c: bne %r10_0, 0 -> 0x2aa0 v
2a80: %r10_0 = load_word -5
2a84: %r10_0 = and %r11_0, 0x00ff0000
2a8c: %r12_1 = add %r12_1, %r10_0
2a90: %r12_1 = subf %r12_1, 0x00500000
2a98: %r12_0 = add %r13_0, 0x01000000
2aa0: return
2aa4: op_1E %r10_0, -7
2aa8: op_1E 0, -7
2aac: op_1E 0, -7
2ab0: op_1E 1, -7
2ab4: op_1E 1, -7
2ab8: op_1E 2, -7
2abc: op_1E 2, -7
2ac0: op_1E 3, -7
2ac4: op_1E 3, -7
2ac8: store_word 0x0012129a, 0xe4000024
2ad0: call 0x02e0
2ad4: %r10_0 = load_word -6
2ad8: %r10_1 = and %r10_1, 0x000000ff
2ae0: %r10_0 = 0x06060606
2ae8: beq %r10_1, 0 -> 0x2af4 v
2aec: %r10_0 = 0x0a0a0a0a
2af4: store_word_0_100 %r10_0, MC0_RD_STR_DLY_0
2af8: store_word_0_100 %r10_0, MC0_RD_STR_DLY_1
2afc: %r10_0 = 0x06060606
2b04: beq %r10_1, 0 -> 0x2b10 v
2b08: %r10_0 = 0x0f0f0f0f
2b10: store_word_0_100 %r10_0, MC0_WR_STR_DLL_0
2b14: store_word_0_100 %r10_0, MC0_WR_STR_DLL_1
2b18: %r12_0 = *(MC1_WR_STR_DLL_1)
2b1c: sync
2b20: delay -7
2b24: jmp 0x0ffc ^
2b28: op_1E %r10_0, -7
2b2c: op_1E 0, -7
2b30: op_1E 0, -7
2b34: op_1E 1, -7
2b38: op_1E 1, -7
2b3c: op_1E 2, -7
2b40: op_1E 2, -7
2b44: op_1E 3, -7
2b48: op_1E 3, -7
2b4c: store_word 0x0013139a, 0xe4000024
2b54: call 0x02e0
2b58: jmp 0x2ad4 ^
2b5c: store_word 0x0010109a, 0xe4000024
2b64: call 0x02e0
2b68: jmp 0x0658 ^
2b6c: store_word 0x00000515, 0xe1020008
2b74: %r10_0 = *(0xd0008008)
2b78: %r10_0 = and %r10_0, 0x000000ff
2b80: beq %r10_0, 0 -> 0x2bbc v
2b84: store_word 0x00000010, 0xe1060030
2b8c: %r10_0 = load_word -5
2b94: %r10_0 = and %r11_0, 0xffffe3ff
2b9c: %r10_0 = or %r11_0, 0x00001000
2ba4: store_word %r11_0, 0xe1060034
2bac: %r12_0 = load_word -5
2bb0: %r10_0 = or %r11_0, 0x08000000
2bb8: store_word %r11_0, 0xe1040024
2bbc: return
2bc0: store_word %r10_0, 0xe4000028
2bc4: %r12_0 = *(0xe400002c)
2bc8: %r10_0 = and %r10_0, 0x00000100
2bd0: beq %r10_0, 0 -> 0x2c00 v
2bd4: %r10_0 = *(SMC_FIFO_INBOX_CTRL_STATUS)
2bdc: %r10_0 = and %r10_0, 4
2be0: beq %r10_0, 0 -> 0x2bd4 ^
2be4: store_word 4, SMC_FIFO_INBOX_CTRL_STATUS
2bec: %r12_0 = *(0xe4000024)
2bf0: store_word %r10_0, SMC_FIFO_INBOX_DATA
2bf8: store_word 0, SMC_FIFO_INBOX_CTRL_STATUS
2c00: %r10_0 = *(0xe4000028)
2c04: return
2c08: store_word 0x0a0a0a0a, MC0_RD_STR_DLY_0
2c10: store_word 0x0a0a0a0a, MC0_RD_STR_DLY_1
2c18: store_word 0x0a0a0a0a, MC1_RD_STR_DLY_0
2c20: store_word 0x0a0a0a0a, MC1_RD_STR_DLY_1
2c28: return
2c2c: store_word 0x05060505, MC0_RD_STR_DLY_0
2c34: store_word 0x03060504, MC0_RD_STR_DLY_1
2c3c: store_word 0x04060605, MC1_RD_STR_DLY_0
2c44: store_word 0x05050605, MC1_RD_STR_DLY_1
2c4c: return
2c50: store_word 0x10101011, MC0_RD_STR_DLY_0
2c58: store_word 0x0e100f0e, MC0_RD_STR_DLY_1
2c60: store_word 0x0d110f10, MC1_RD_STR_DLY_0
2c68: store_word 0x0d0d100d, MC1_RD_STR_DLY_1
2c70: return
2c74: %r10_0 = *(MC0_WR_STR_DLL_0)
2c78: %r10_1 = and %r10_0, 0x000000ff
2c80: %r10_0 = and %r10_0, 0xffffff00
2c88: %r10_0 = and 0, 0x000000ff
2c90: %r11_1 = add %r10_1, %r11_0
2c94: %r11_1 = and %r11_1, 0x000000ff
2c9c: %r10_0 = and %r11_1, 0x00000080
2ca4: beq %r11_0, 0 -> 0x2cac v
2ca8: %r11_1 = 0
2cac: bge %r11_1, 0 -> 0x2cb4 v
2cb0: %r11_1 = 0
2cb4: %r10_0 = or %r10_0, %r11_1
2cb8: %r10_1 = and %r10_0, 0x0000ff00
2cc0: %r10_0 = and %r10_0, 0xffff00ff
2cc8: %r10_0 = and 0, 0x0000ff00
2cd0: %r11_1 = add %r10_1, %r11_0
2cd4: %r11_1 = and %r11_1, 0x0000ff00
2cdc: %r10_0 = and %r11_1, 0x00008000
2ce4: beq %r11_0, 0 -> 0x2cec v
2ce8: %r11_1 = 0
2cec: bge %r11_1, 0 -> 0x2cf4 v
2cf0: %r11_1 = 0
2cf4: %r10_0 = or %r10_0, %r11_1
2cf8: %r10_1 = and %r10_0, 0x00ff0000
2d00: %r10_0 = and %r10_0, 0xff00ffff
2d08: %r10_0 = and 0, 0x00ff0000
2d10: %r11_1 = add %r10_1, %r11_0
2d14: %r11_1 = and %r11_1, 0x00ff0000
2d1c: %r10_0 = and %r11_1, 0x00800000
2d24: beq %r11_0, 0 -> 0x2d2c v
2d28: %r11_1 = 0
2d2c: bge %r11_1, 0 -> 0x2d34 v
2d30: %r11_1 = 0
2d34: %r10_0 = or %r10_0, %r11_1
2d38: %r10_1 = and %r10_0, 0xff000000
2d40: %r10_0 = and %r10_0, 0x00ffffff
2d48: %r10_0 = and 0, 0xff000000
2d50: %r11_1 = add %r10_1, %r11_0
2d54: %r11_1 = and %r11_1, 0xff000000
2d5c: %r10_0 = and %r11_1, 0x80000000
2d64: beq %r11_0, 0 -> 0x2d6c v
2d68: %r11_1 = 0
2d6c: bge %r11_1, 0 -> 0x2d74 v
2d70: %r11_1 = 0
2d74: %r10_0 = or %r10_0, %r11_1
2d78: store_word %r10_0, MC0_WR_STR_DLL_0
2d7c: %r12_0 = *(MC0_WR_STR_DLL_1)
2d80: %r10_1 = and %r10_0, 0x000000ff
2d88: %r10_0 = and %r10_0, 0xffffff00
2d90: %r10_0 = and 0, 0x000000ff
2d98: %r11_1 = add %r10_1, %r11_0
2d9c: %r11_1 = and %r11_1, 0x000000ff
2da4: %r10_0 = and %r11_1, 0x00000080
2dac: beq %r11_0, 0 -> 0x2db4 v
2db0: %r11_1 = 0
2db4: bge %r11_1, 0 -> 0x2dbc v
2db8: %r11_1 = 0
2dbc: %r10_0 = or %r10_0, %r11_1
2dc0: %r10_1 = and %r10_0, 0x0000ff00
2dc8: %r10_0 = and %r10_0, 0xffff00ff
2dd0: %r10_0 = and 0, 0x0000ff00
2dd8: %r11_1 = add %r10_1, %r11_0
2ddc: %r11_1 = and %r11_1, 0x0000ff00
2de4: %r10_0 = and %r11_1, 0x00008000
2dec: beq %r11_0, 0 -> 0x2df4 v
2df0: %r11_1 = 0
2df4: bge %r11_1, 0 -> 0x2dfc v
2df8: %r11_1 = 0
2dfc: %r10_0 = or %r10_0, %r11_1
2e00: %r10_1 = and %r10_0, 0x00ff0000
2e08: %r10_0 = and %r10_0, 0xff00ffff
2e10: %r10_0 = and 0, 0x00ff0000
2e18: %r11_1 = add %r10_1, %r11_0
2e1c: %r11_1 = and %r11_1, 0x00ff0000
2e24: %r10_0 = and %r11_1, 0x00800000
2e2c: beq %r11_0, 0 -> 0x2e34 v
2e30: %r11_1 = 0
2e34: bge %r11_1, 0 -> 0x2e3c v
2e38: %r11_1 = 0
2e3c: %r10_0 = or %r10_0, %r11_1
2e40: %r10_1 = and %r10_0, 0xff000000
2e48: %r10_0 = and %r10_0, 0x00ffffff
2e50: %r10_0 = and 0, 0xff000000
2e58: %r11_1 = add %r10_1, %r11_0
2e5c: %r11_1 = and %r11_1, 0xff000000
2e64: %r10_0 = and %r11_1, 0x80000000
2e6c: beq %r11_0, 0 -> 0x2e74 v
2e70: %r11_1 = 0
2e74: bge %r11_1, 0 -> 0x2e7c v
2e78: %r11_1 = 0
2e7c: %r10_0 = or %r10_0, %r11_1
2e80: store_word %r10_0, MC0_WR_STR_DLL_1
2e84: %r10_0 = *(MC1_WR_STR_DLL_0)
2e88: %r10_1 = and %r10_0, 0x000000ff
2e90: %r10_0 = and %r10_0, 0xffffff00
2e98: %r10_0 = and 0, 0x000000ff
2ea0: %r11_1 = add %r10_1, %r11_0
2ea4: %r11_1 = and %r11_1, 0x000000ff
2eac: %r10_0 = and %r11_1, 0x00000080
2eb4: beq %r11_0, 0 -> 0x2ebc v
2eb8: %r11_1 = 0
2ebc: bge %r11_1, 0 -> 0x2ec4 v
2ec0: %r11_1 = 0
2ec4: %r10_0 = or %r10_0, %r11_1
2ec8: %r10_1 = and %r10_0, 0x0000ff00
2ed0: %r10_0 = and %r10_0, 0xffff00ff
2ed8: %r10_0 = and 0, 0x0000ff00
2ee0: %r11_1 = add %r10_1, %r11_0
2ee4: %r11_1 = and %r11_1, 0x0000ff00
2eec: %r10_0 = and %r11_1, 0x00008000
2ef4: beq %r11_0, 0 -> 0x2efc v
2ef8: %r11_1 = 0
2efc: bge %r11_1, 0 -> 0x2f04 v
2f00: %r11_1 = 0
2f04: %r10_0 = or %r10_0, %r11_1
2f08: %r10_1 = and %r10_0, 0x00ff0000
2f10: %r10_0 = and %r10_0, 0xff00ffff
2f18: %r10_0 = and 0, 0x00ff0000
2f20: %r11_1 = add %r10_1, %r11_0
2f24: %r11_1 = and %r11_1, 0x00ff0000
2f2c: %r10_0 = and %r11_1, 0x00800000
2f34: beq %r11_0, 0 -> 0x2f3c v
2f38: %r11_1 = 0
2f3c: bge %r11_1, 0 -> 0x2f44 v
2f40: %r11_1 = 0
2f44: %r10_0 = or %r10_0, %r11_1
2f48: %r10_1 = and %r10_0, 0xff000000
2f50: %r10_0 = and %r10_0, 0x00ffffff
2f58: %r10_0 = and 0, 0xff000000
2f60: %r11_1 = add %r10_1, %r11_0
2f64: %r11_1 = and %r11_1, 0xff000000
2f6c: %r10_0 = and %r11_1, 0x80000000
2f74: beq %r11_0, 0 -> 0x2f7c v
2f78: %r11_1 = 0
2f7c: bge %r11_1, 0 -> 0x2f84 v
2f80: %r11_1 = 0
2f84: %r10_0 = or %r10_0, %r11_1
2f88: store_word %r10_0, MC1_WR_STR_DLL_0
2f8c: %r12_0 = *(MC1_WR_STR_DLL_1)
2f90: %r10_1 = and %r10_0, 0x000000ff
2f98: %r10_0 = and %r10_0, 0xffffff00
2fa0: %r10_0 = and 0, 0x000000ff
2fa8: %r11_1 = add %r10_1, %r11_0
2fac: %r11_1 = and %r11_1, 0x000000ff
2fb4: %r10_0 = and %r11_1, 0x00000080
2fbc: beq %r11_0, 0 -> 0x2fc4 v
2fc0: %r11_1 = 0
2fc4: bge %r11_1, 0 -> 0x2fcc v
2fc8: %r11_1 = 0
2fcc: %r10_0 = or %r10_0, %r11_1
2fd0: %r10_1 = and %r10_0, 0x0000ff00
2fd8: %r10_0 = and %r10_0, 0xffff00ff
2fe0: %r10_0 = and 0, 0x0000ff00
2fe8: %r11_1 = add %r10_1, %r11_0
2fec: %r11_1 = and %r11_1, 0x0000ff00
2ff4: %r10_0 = and %r11_1, 0x00008000
2ffc: beq %r11_0, 0 -> 0x3004 v
3000: %r11_1 = 0
3004: bge %r11_1, 0 -> 0x300c v
3008: %r11_1 = 0
300c: %r10_0 = or %r10_0, %r11_1
3010: %r10_1 = and %r10_0, 0x00ff0000
3018: %r10_0 = and %r10_0, 0xff00ffff
3020: %r10_0 = and 0, 0x00ff0000
3028: %r11_1 = add %r10_1, %r11_0
302c: %r11_1 = and %r11_1, 0x00ff0000
3034: %r10_0 = and %r11_1, 0x00800000
303c: beq %r11_0, 0 -> 0x3044 v
3040: %r11_1 = 0
3044: bge %r11_1, 0 -> 0x304c v
3048: %r11_1 = 0
304c: %r10_0 = or %r10_0, %r11_1
3050: %r10_1 = and %r10_0, 0xff000000
3058: %r10_0 = and %r10_0, 0x00ffffff
3060: %r10_0 = and 0, 0xff000000
3068: %r11_1 = add %r10_1, %r11_0
306c: %r11_1 = and %r11_1, 0xff000000
3074: %r10_0 = and %r11_1, 0x80000000
307c: beq %r11_0, 0 -> 0x3084 v
3080: %r11_1 = 0
3084: bge %r11_1, 0 -> 0x308c v
3088: %r11_1 = 0
308c: %r10_0 = or %r10_0, %r11_1
3090: store_word %r10_0, MC1_WR_STR_DLL_1
3094: return
3098: %r10_0 = *(MC0_WR_STR_DLL_0)
309c: %r10_1 = and %r10_0, 0x000000ff
30a4: %r10_0 = and %r10_0, 0xffffff00
30ac: %r10_0 = and 0x01010301, 0x000000ff
30b8: %r11_1 = add %r10_1, %r11_0
30bc: %r11_1 = and %r11_1, 0x000000ff
30c4: %r10_0 = and %r11_1, 0x00000080
30cc: beq %r11_0, 0 -> 0x30d4 v
30d0: %r11_1 = 0
30d4: bge %r11_1, 0 -> 0x30dc v
30d8: %r11_1 = 0
30dc: %r10_0 = or %r10_0, %r11_1
30e0: %r10_1 = and %r10_0, 0x0000ff00
30e8: %r10_0 = and %r10_0, 0xffff00ff
30f0: %r10_0 = and 0x01010301, 0x0000ff00
30fc: %r11_1 = add %r10_1, %r11_0
3100: %r11_1 = and %r11_1, 0x0000ff00
3108: %r10_0 = and %r11_1, 0x00008000
3110: beq %r11_0, 0 -> 0x3118 v
3114: %r11_1 = 0
3118: bge %r11_1, 0 -> 0x3120 v
311c: %r11_1 = 0
3120: %r10_0 = or %r10_0, %r11_1
3124: %r10_1 = and %r10_0, 0x00ff0000
312c: %r10_0 = and %r10_0, 0xff00ffff
3134: %r10_0 = and 0x01010301, 0x00ff0000
3140: %r11_1 = add %r10_1, %r11_0
3144: %r11_1 = and %r11_1, 0x00ff0000
314c: %r10_0 = and %r11_1, 0x00800000
3154: beq %r11_0, 0 -> 0x315c v
3158: %r11_1 = 0
315c: bge %r11_1, 0 -> 0x3164 v
3160: %r11_1 = 0
3164: %r10_0 = or %r10_0, %r11_1
3168: %r10_1 = and %r10_0, 0xff000000
3170: %r10_0 = and %r10_0, 0x00ffffff
3178: %r10_0 = and 0x01010301, 0xff000000
3184: %r11_1 = add %r10_1, %r11_0
3188: %r11_1 = and %r11_1, 0xff000000
3190: %r10_0 = and %r11_1, 0x80000000
3198: beq %r11_0, 0 -> 0x31a0 v
319c: %r11_1 = 0
31a0: bge %r11_1, 0 -> 0x31a8 v
31a4: %r11_1 = 0
31a8: %r10_0 = or %r10_0, %r11_1
31ac: store_word %r10_0, MC0_WR_STR_DLL_0
31b0: %r12_0 = *(MC0_WR_STR_DLL_1)
31b4: %r10_1 = and %r10_0, 0x000000ff
31bc: %r10_0 = and %r10_0, 0xffffff00
31c4: %r10_0 = and 0x01000101, 0x000000ff
31d0: %r11_1 = add %r10_1, %r11_0
31d4: %r11_1 = and %r11_1, 0x000000ff
31dc: %r10_0 = and %r11_1, 0x00000080
31e4: beq %r11_0, 0 -> 0x31ec v
31e8: %r11_1 = 0
31ec: bge %r11_1, 0 -> 0x31f4 v
31f0: %r11_1 = 0
31f4: %r10_0 = or %r10_0, %r11_1
31f8: %r10_1 = and %r10_0, 0x0000ff00
3200: %r10_0 = and %r10_0, 0xffff00ff
3208: %r10_0 = and 0x01000101, 0x0000ff00
3214: %r11_1 = add %r10_1, %r11_0
3218: %r11_1 = and %r11_1, 0x0000ff00
3220: %r10_0 = and %r11_1, 0x00008000
3228: beq %r11_0, 0 -> 0x3230 v
322c: %r11_1 = 0
3230: bge %r11_1, 0 -> 0x3238 v
3234: %r11_1 = 0
3238: %r10_0 = or %r10_0, %r11_1
323c: %r10_1 = and %r10_0, 0x00ff0000
3244: %r10_0 = and %r10_0, 0xff00ffff
324c: %r10_0 = and 0x01000101, 0x00ff0000
3258: %r11_1 = add %r10_1, %r11_0
325c: %r11_1 = and %r11_1, 0x00ff0000
3264: %r10_0 = and %r11_1, 0x00800000
326c: beq %r11_0, 0 -> 0x3274 v
3270: %r11_1 = 0
3274: bge %r11_1, 0 -> 0x327c v
3278: %r11_1 = 0
327c: %r10_0 = or %r10_0, %r11_1
3280: %r10_1 = and %r10_0, 0xff000000
3288: %r10_0 = and %r10_0, 0x00ffffff
3290: %r10_0 = and 0x01000101, 0xff000000
329c: %r11_1 = add %r10_1, %r11_0
32a0: %r11_1 = and %r11_1, 0xff000000
32a8: %r10_0 = and %r11_1, 0x80000000
32b0: beq %r11_0, 0 -> 0x32b8 v
32b4: %r11_1 = 0
32b8: bge %r11_1, 0 -> 0x32c0 v
32bc: %r11_1 = 0
32c0: %r10_0 = or %r10_0, %r11_1
32c4: store_word %r10_0, MC0_WR_STR_DLL_1
32c8: %r10_0 = *(MC1_WR_STR_DLL_0)
32cc: %r10_1 = and %r10_0, 0x000000ff
32d4: %r10_0 = and %r10_0, 0xffffff00
32dc: %r10_0 = and 0x01020201, 0x000000ff
32e8: %r11_1 = add %r10_1, %r11_0
32ec: %r11_1 = and %r11_1, 0x000000ff
32f4: %r10_0 = and %r11_1, 0x00000080
32fc: beq %r11_0, 0 -> 0x3304 v
3300: %r11_1 = 0
3304: bge %r11_1, 0 -> 0x330c v
3308: %r11_1 = 0
330c: %r10_0 = or %r10_0, %r11_1
3310: %r10_1 = and %r10_0, 0x0000ff00
3318: %r10_0 = and %r10_0, 0xffff00ff
3320: %r10_0 = and 0x01020201, 0x0000ff00
332c: %r11_1 = add %r10_1, %r11_0
3330: %r11_1 = and %r11_1, 0x0000ff00
3338: %r10_0 = and %r11_1, 0x00008000
3340: beq %r11_0, 0 -> 0x3348 v
3344: %r11_1 = 0
3348: bge %r11_1, 0 -> 0x3350 v
334c: %r11_1 = 0
3350: %r10_0 = or %r10_0, %r11_1
3354: %r10_1 = and %r10_0, 0x00ff0000
335c: %r10_0 = and %r10_0, 0xff00ffff
3364: %r10_0 = and 0x01020201, 0x00ff0000
3370: %r11_1 = add %r10_1, %r11_0
3374: %r11_1 = and %r11_1, 0x00ff0000
337c: %r10_0 = and %r11_1, 0x00800000
3384: beq %r11_0, 0 -> 0x338c v
3388: %r11_1 = 0
338c: bge %r11_1, 0 -> 0x3394 v
3390: %r11_1 = 0
3394: %r10_0 = or %r10_0, %r11_1
3398: %r10_1 = and %r10_0, 0xff000000
33a0: %r10_0 = and %r10_0, 0x00ffffff
33a8: %r10_0 = and 0x01020201, 0xff000000
33b4: %r11_1 = add %r10_1, %r11_0
33b8: %r11_1 = and %r11_1, 0xff000000
33c0: %r10_0 = and %r11_1, 0x80000000
33c8: beq %r11_0, 0 -> 0x33d0 v
33cc: %r11_1 = 0
33d0: bge %r11_1, 0 -> 0x33d8 v
33d4: %r11_1 = 0
33d8: %r10_0 = or %r10_0, %r11_1
33dc: store_word %r10_0, MC1_WR_STR_DLL_0
33e0: %r12_0 = *(MC1_WR_STR_DLL_1)
33e4: %r10_1 = and %r10_0, 0x000000ff
33ec: %r10_0 = and %r10_0, 0xffffff00
33f4: %r10_0 = and 0x01010101, 0x000000ff
3400: %r11_1 = add %r10_1, %r11_0
3404: %r11_1 = and %r11_1, 0x000000ff
340c: %r10_0 = and %r11_1, 0x00000080
3414: beq %r11_0, 0 -> 0x341c v
3418: %r11_1 = 0
341c: bge %r11_1, 0 -> 0x3424 v
3420: %r11_1 = 0
3424: %r10_0 = or %r10_0, %r11_1
3428: %r10_1 = and %r10_0, 0x0000ff00
3430: %r10_0 = and %r10_0, 0xffff00ff
3438: %r10_0 = and 0x01010101, 0x0000ff00
3444: %r11_1 = add %r10_1, %r11_0
3448: %r11_1 = and %r11_1, 0x0000ff00
3450: %r10_0 = and %r11_1, 0x00008000
3458: beq %r11_0, 0 -> 0x3460 v
345c: %r11_1 = 0
3460: bge %r11_1, 0 -> 0x3468 v
3464: %r11_1 = 0
3468: %r10_0 = or %r10_0, %r11_1
346c: %r10_1 = and %r10_0, 0x00ff0000
3474: %r10_0 = and %r10_0, 0xff00ffff
347c: %r10_0 = and 0x01010101, 0x00ff0000
3488: %r11_1 = add %r10_1, %r11_0
348c: %r11_1 = and %r11_1, 0x00ff0000
3494: %r10_0 = and %r11_1, 0x00800000
349c: beq %r11_0, 0 -> 0x34a4 v
34a0: %r11_1 = 0
34a4: bge %r11_1, 0 -> 0x34ac v
34a8: %r11_1 = 0
34ac: %r10_0 = or %r10_0, %r11_1
34b0: %r10_1 = and %r10_0, 0xff000000
34b8: %r10_0 = and %r10_0, 0x00ffffff
34c0: %r10_0 = and 0x01010101, 0xff000000
34cc: %r11_1 = add %r10_1, %r11_0
34d0: %r11_1 = and %r11_1, 0xff000000
34d8: %r10_0 = and %r11_1, 0x80000000
34e0: beq %r11_0, 0 -> 0x34e8 v
34e4: %r11_1 = 0
34e8: bge %r11_1, 0 -> 0x34f0 v
34ec: %r11_1 = 0
34f0: %r10_0 = or %r10_0, %r11_1
34f4: store_word %r10_0, MC1_WR_STR_DLL_1
34f8: return
34fc: %r10_0 = *(MC0_WR_STR_DLL_0)
3500: %r10_1 = and %r10_0, 0x000000ff
3508: %r10_0 = and %r10_0, 0xffffff00
3510: %r10_0 = and 0xfafcfefe, 0x000000ff
351c: %r11_1 = add %r10_1, %r11_0
3520: %r11_1 = and %r11_1, 0x000000ff
3528: %r10_0 = and %r11_1, 0x00000080
3530: beq %r11_0, 0 -> 0x3538 v
3534: %r11_1 = 0
3538: bge %r11_1, 0 -> 0x3540 v
353c: %r11_1 = 0
3540: %r10_0 = or %r10_0, %r11_1
3544: %r10_1 = and %r10_0, 0x0000ff00
354c: %r10_0 = and %r10_0, 0xffff00ff
3554: %r10_0 = and 0xfafcfefe, 0x0000ff00
3560: %r11_1 = add %r10_1, %r11_0
3564: %r11_1 = and %r11_1, 0x0000ff00
356c: %r10_0 = and %r11_1, 0x00008000
3574: beq %r11_0, 0 -> 0x357c v
3578: %r11_1 = 0
357c: bge %r11_1, 0 -> 0x3584 v
3580: %r11_1 = 0
3584: %r10_0 = or %r10_0, %r11_1
3588: %r10_1 = and %r10_0, 0x00ff0000
3590: %r10_0 = and %r10_0, 0xff00ffff
3598: %r10_0 = and 0xfafcfefe, 0x00ff0000
35a4: %r11_1 = add %r10_1, %r11_0
35a8: %r11_1 = and %r11_1, 0x00ff0000
35b0: %r10_0 = and %r11_1, 0x00800000
35b8: beq %r11_0, 0 -> 0x35c0 v
35bc: %r11_1 = 0
35c0: bge %r11_1, 0 -> 0x35c8 v
35c4: %r11_1 = 0
35c8: %r10_0 = or %r10_0, %r11_1
35cc: %r10_1 = and %r10_0, 0xff000000
35d4: %r10_0 = and %r10_0, 0x00ffffff
35dc: %r10_0 = and 0xfafcfefe, 0xff000000
35e8: %r11_1 = add %r10_1, %r11_0
35ec: %r11_1 = and %r11_1, 0xff000000
35f4: %r10_0 = and %r11_1, 0x80000000
35fc: beq %r11_0, 0 -> 0x3604 v
3600: %r11_1 = 0
3604: bge %r11_1, 0 -> 0x360c v
3608: %r11_1 = 0
360c: %r10_0 = or %r10_0, %r11_1
3610: store_word %r10_0, MC0_WR_STR_DLL_0
3614: %r12_0 = *(MC0_WR_STR_DLL_1)
3618: %r10_1 = and %r10_0, 0x000000ff
3620: %r10_0 = and %r10_0, 0xffffff00
3628: %r10_0 = and 0xfdfefdfc, 0x000000ff
3634: %r11_1 = add %r10_1, %r11_0
3638: %r11_1 = and %r11_1, 0x000000ff
3640: %r10_0 = and %r11_1, 0x00000080
3648: beq %r11_0, 0 -> 0x3650 v
364c: %r11_1 = 0
3650: bge %r11_1, 0 -> 0x3658 v
3654: %r11_1 = 0
3658: %r10_0 = or %r10_0, %r11_1
365c: %r10_1 = and %r10_0, 0x0000ff00
3664: %r10_0 = and %r10_0, 0xffff00ff
366c: %r10_0 = and 0xfdfefdfc, 0x0000ff00
3678: %r11_1 = add %r10_1, %r11_0
367c: %r11_1 = and %r11_1, 0x0000ff00
3684: %r10_0 = and %r11_1, 0x00008000
368c: beq %r11_0, 0 -> 0x3694 v
3690: %r11_1 = 0
3694: bge %r11_1, 0 -> 0x369c v
3698: %r11_1 = 0
369c: %r10_0 = or %r10_0, %r11_1
36a0: %r10_1 = and %r10_0, 0x00ff0000
36a8: %r10_0 = and %r10_0, 0xff00ffff
36b0: %r10_0 = and 0xfdfefdfc, 0x00ff0000
36bc: %r11_1 = add %r10_1, %r11_0
36c0: %r11_1 = and %r11_1, 0x00ff0000
36c8: %r10_0 = and %r11_1, 0x00800000
36d0: beq %r11_0, 0 -> 0x36d8 v
36d4: %r11_1 = 0
36d8: bge %r11_1, 0 -> 0x36e0 v
36dc: %r11_1 = 0
36e0: %r10_0 = or %r10_0, %r11_1
36e4: %r10_1 = and %r10_0, 0xff000000
36ec: %r10_0 = and %r10_0, 0x00ffffff
36f4: %r10_0 = and 0xfdfefdfc, 0xff000000
3700: %r11_1 = add %r10_1, %r11_0
3704: %r11_1 = and %r11_1, 0xff000000
370c: %r10_0 = and %r11_1, 0x80000000
3714: beq %r11_0, 0 -> 0x371c v
3718: %r11_1 = 0
371c: bge %r11_1, 0 -> 0x3724 v
3720: %r11_1 = 0
3724: %r10_0 = or %r10_0, %r11_1
3728: store_word %r10_0, MC0_WR_STR_DLL_1
372c: %r10_0 = *(MC1_WR_STR_DLL_0)
3730: %r10_1 = and %r10_0, 0x000000ff
3738: %r10_0 = and %r10_0, 0xffffff00
3740: %r10_0 = and 0xfdfdfe00, 0x000000ff
374c: %r11_1 = add %r10_1, %r11_0
3750: %r11_1 = and %r11_1, 0x000000ff
3758: %r10_0 = and %r11_1, 0x00000080
3760: beq %r11_0, 0 -> 0x3768 v
3764: %r11_1 = 0
3768: bge %r11_1, 0 -> 0x3770 v
376c: %r11_1 = 0
3770: %r10_0 = or %r10_0, %r11_1
3774: %r10_1 = and %r10_0, 0x0000ff00
377c: %r10_0 = and %r10_0, 0xffff00ff
3784: %r10_0 = and 0xfdfdfe00, 0x0000ff00
3790: %r11_1 = add %r10_1, %r11_0
3794: %r11_1 = and %r11_1, 0x0000ff00
379c: %r10_0 = and %r11_1, 0x00008000
37a4: beq %r11_0, 0 -> 0x37ac v
37a8: %r11_1 = 0
37ac: bge %r11_1, 0 -> 0x37b4 v
37b0: %r11_1 = 0
37b4: %r10_0 = or %r10_0, %r11_1
37b8: %r10_1 = and %r10_0, 0x00ff0000
37c0: %r10_0 = and %r10_0, 0xff00ffff
37c8: %r10_0 = and 0xfdfdfe00, 0x00ff0000
37d4: %r11_1 = add %r10_1, %r11_0
37d8: %r11_1 = and %r11_1, 0x00ff0000
37e0: %r10_0 = and %r11_1, 0x00800000
37e8: beq %r11_0, 0 -> 0x37f0 v
37ec: %r11_1 = 0
37f0: bge %r11_1, 0 -> 0x37f8 v
37f4: %r11_1 = 0
37f8: %r10_0 = or %r10_0, %r11_1
37fc: %r10_1 = and %r10_0, 0xff000000
3804: %r10_0 = and %r10_0, 0x00ffffff
380c: %r10_0 = and 0xfdfdfe00, 0xff000000
3818: %r11_1 = add %r10_1, %r11_0
381c: %r11_1 = and %r11_1, 0xff000000
3824: %r10_0 = and %r11_1, 0x80000000
382c: beq %r11_0, 0 -> 0x3834 v
3830: %r11_1 = 0
3834: bge %r11_1, 0 -> 0x383c v
3838: %r11_1 = 0
383c: %r10_0 = or %r10_0, %r11_1
3840: store_word %r10_0, MC1_WR_STR_DLL_0
3844: %r12_0 = *(MC1_WR_STR_DLL_1)
3848: %r10_1 = and %r10_0, 0x000000ff
3850: %r10_0 = and %r10_0, 0xffffff00
3858: %r10_0 = and 0xfffdfefd, 0x000000ff
3864: %r11_1 = add %r10_1, %r11_0
3868: %r11_1 = and %r11_1, 0x000000ff
3870: %r10_0 = and %r11_1, 0x00000080
3878: beq %r11_0, 0 -> 0x3880 v
387c: %r11_1 = 0
3880: bge %r11_1, 0 -> 0x3888 v
3884: %r11_1 = 0
3888: %r10_0 = or %r10_0, %r11_1
388c: %r10_1 = and %r10_0, 0x0000ff00
3894: %r10_0 = and %r10_0, 0xffff00ff
389c: %r10_0 = and 0xfffdfefd, 0x0000ff00
38a8: %r11_1 = add %r10_1, %r11_0
38ac: %r11_1 = and %r11_1, 0x0000ff00
38b4: %r10_0 = and %r11_1, 0x00008000
38bc: beq %r11_0, 0 -> 0x38c4 v
38c0: %r11_1 = 0
38c4: bge %r11_1, 0 -> 0x38cc v
38c8: %r11_1 = 0
38cc: %r10_0 = or %r10_0, %r11_1
38d0: %r10_1 = and %r10_0, 0x00ff0000
38d8: %r10_0 = and %r10_0, 0xff00ffff
38e0: %r10_0 = and 0xfffdfefd, 0x00ff0000
38ec: %r11_1 = add %r10_1, %r11_0
38f0: %r11_1 = and %r11_1, 0x00ff0000
38f8: %r10_0 = and %r11_1, 0x00800000
3900: beq %r11_0, 0 -> 0x3908 v
3904: %r11_1 = 0
3908: bge %r11_1, 0 -> 0x3910 v
390c: %r11_1 = 0
3910: %r10_0 = or %r10_0, %r11_1
3914: %r10_1 = and %r10_0, 0xff000000
391c: %r10_0 = and %r10_0, 0x00ffffff
3924: %r10_0 = and 0xfffdfefd, 0xff000000
3930: %r11_1 = add %r10_1, %r11_0
3934: %r11_1 = and %r11_1, 0xff000000
393c: %r10_0 = and %r11_1, 0x80000000
3944: beq %r11_0, 0 -> 0x394c v
3948: %r11_1 = 0
394c: bge %r11_1, 0 -> 0x3954 v
3950: %r11_1 = 0
3954: %r10_0 = or %r10_0, %r11_1
3958: store_word %r10_0, MC1_WR_STR_DLL_1
395c: return
3960: %r10_0 = *(0xd0008008)
3964: %r10_0 = and %r10_0, 0x000000ff
396c: beq %r10_0, 0 -> 0x39a4 v
3970: %r10_1 = 0x001ff306
3978: %r10_0 = and %r12_0, 0x0000000f
3980: bne %r10_0, 2 -> 0x398c v
3984: %r10_1 = 0x001bb306
398c: bne %r10_0, 6 -> 0x3998 v
3990: %r10_1 = 0x001fa306
3998: %r11_1 = %r10_1
399c: call 0x01b8
39a0: %r10_1 = %r11_1
39a4: %r12_0 = load_word -6
39a8: %r10_1 = and %r10_1, -2
39ac: store_word %r10_1, 0xe40002a4
39b0: store_word_0_100 0, MC0_POINTER
39b4: store_word_0_100 0x001c0000, MC0_DRAM_CMD
39bc: store_word_0_100 2, MC0_CNTL
39c0: %r10_0 = *(MC1_CNTL)
39c4: sync
39c8: delay -7
39cc: %r10_1 = or %r10_1, 1
39d0: store_word %r10_1, 0xe40002a4
39d4: %r12_0 = *(0xe40002a4)
39d8: sync
39dc: delay -7
39e0: %r10_1 = 0x040e3202
39e8: %r12_0 = load_word -4
39ec: blt? %r11_1, 0x00000018 -> 0x39f8 v
39f4: %r10_1 = or %r10_1, 1
39f8: store_word_0_100 %r10_1, MC0_DRAM_CONFIG
39fc: store_word_0_100 0x00000080, MC0_BSB_SNOOPED_TIMER_CNTL
3a04: store_word_0_100 0x00348084, MC0_TUNING_0
3a0c: store_word_0_100 0x0000007a, MC0_TUNING_1
3a14: store_word_0_100 0x00106514, MC0_RD_BUFFER_CNTL_0
3a1c: store_word_0_100 0x00210414, MC0_RD_BUFFER_CNTL_1
3a24: store_word_0_100 0x01283446, MC0_TIMING_CNTL_0
3a2c: store_word_0_100 0x03620991, MC0_TIMING_CNTL_1
3a34: store_word_0_100 0x0c958107, MC0_TIMING_CNTL_2
3a3c: store_word_0_100 0x00000018, MC0_WR_DATA_DLY_0
3a44: store_word_0_100 0x00000030, MC0_INTERRUPT_MASK
3a4c: store_word_0_100 0, MC0_POINTER
3a50: store_word_0_100 0x423c0000, MC0_DRAM_CMD
3a58: store_word_0_100 0x0a280100, MC0_DRAM_CMD
3a60: store_word_0_100 0x06200221, MC0_DRAM_CMD
3a68: %r10_1 = 0x06208088
3a70: %r10_0 = *(0xd0008008)
3a74: %r10_0 = and %r10_0, 0x000000ff
3a7c: beq %r10_0, 0 -> 0x3aa8 v
3a80: %r10_1 = 0x06208089
3a88: %r10_0 = and %r12_0, 0x0000000f
3a90: bne %r10_0, 2 -> 0x3a9c v
3a94: %r10_1 = 0x0620808a
3a9c: bne %r10_0, 6 -> 0x3aa8 v
3aa0: %r10_1 = 0x06208089
3aa8: %r12_0 = load_word -4
3aac: blt? %r11_1, 0x00000018 -> 0x3ab8 v
3ab4: %r10_1 = or %r10_1, 4
3ab8: store_word_0_100 %r10_1, MC0_DRAM_CMD
3abc: store_word_0_100 0x06200772, MC0_DRAM_CMD
3ac4: store_word_0_100 2, MC0_CNTL
3ac8: %r10_0 = *(MC1_CNTL)
3acc: sync
3ad0: delay -7
3ad4: store_word_0_100 0, MC0_POINTER
3ad8: store_word_0_100 0x0a280100, MC0_DRAM_CMD
3ae0: store_word_0_100 0x2f240000, MC0_DRAM_CMD
3ae8: store_word_0_100 0x2f240000, MC0_DRAM_CMD
3af0: store_word_0_100 0x003c0000, MC0_DRAM_CMD
3af8: store_word_0_100 2, MC0_CNTL
3afc: store_word_0_100 0x00001000, MC0_CNTL
3b04: store_word_0_100 0x00000605, MC0_CNTL
3b0c: %r10_0 = *(MC1_CNTL)
3b10: sync
3b14: delay -7
3b18: store_word 0, 0
3b1c: %r10_0 = *(0)
3b20: sync
3b24: store_word 0x00008000, 0x00008000
3b2c: %r10_0 = *(0x00008000)
3b30: sync
3b34: %r10_0 = *(0)
3b38: beq %r10_0, 0 -> 0x3b90 v
3b3c: store_word %r12_0, 4
3b40: store_word %r12_1, 0x00000008
3b44: store_word %r13_0, 0x0000000c
3b48: store_word %r13_1, 0x00000010
3b4c: store_word 0x08000000, 0xe1020000
3b54: store_word 0x08000000, 0xe1040000
3b5c: store_word_0_100 0x020f1242, MC0_DRAM_CONFIG
3b64: store_word_0_100 0x00000080, MC0_BSB_SNOOPED_TIMER_CNTL
3b6c: store_word_0_100 0x00344041, MC0_TUNING_0
3b74: store_word_0_100 0x0000007a, MC0_TUNING_1
3b7c: store_word_0_100 0x00106514, MC0_RD_BUFFER_CNTL_0
3b84: store_word_0_100 0x00210414, MC0_RD_BUFFER_CNTL_1
3b8c: jmp 0x449c v
3b90: store_word %r12_0, 4
3b94: store_word %r12_1, 0x00000008
3b98: store_word %r13_0, 0x0000000c
3b9c: store_word %r13_1, 0x00000010
3ba0: call 0x5510
3ba4: op_1E 0, -7
3ba8: %r10_1 = 0x00001800
3bb0: call 0x5640
3bb4: %r10_0 = or %r13_1, %r13_1
3bb8: op_1E 0, -7
3bbc: op_1E 1, -7
3bc0: %r10_1 = 0x00001804
3bc8: call 0x5640
3bcc: %r10_0 = or %r11_0, %r13_1
3bd0: op_1E 1, -7
3bd4: op_1E 2, -7
3bd8: %r10_1 = 0x00001880
3be0: call 0x5640
3be4: %r10_0 = or %r11_0, %r13_1
3be8: op_1E 2, -7
3bec: op_1E 3, -7
3bf0: %r10_1 = 0x00001884
3bf8: call 0x5640
3bfc: %r10_0 = or %r11_0, %r13_1
3c00: op_1E 3, -7
3c04: beq %r11_0, 0 -> 0x3c34 v
3c08: op_1E 0, -7
3c0c: op_1E 0, -7
3c10: op_1E 1, -7
3c14: op_1E 1, -7
3c18: op_1E 2, -7
3c1c: op_1E 2, -7
3c20: op_1E 3, -7
3c24: op_1E 3, -7
3c28: store_word 0x0011119a, 0xe4000024
3c30: call 0x2bc0
3c34: store_word_0_100 0, MC0_CNTL
3c38: store_word_0_100 0, MC0_POINTER
3c3c: store_word_0_100 0x00040000, MC0_DRAM_CMD
3c44: store_word_0_100 2, MC0_CNTL
3c48: %r10_0 = *(MC1_CNTL)
3c4c: sync
3c50: delay -7
3c54: %r10_0 = 0x040e3202
3c5c: %r10_0 = *(0xd0008008)
3c60: %r10_0 = and %r10_0, 0x000000ff
3c68: beq %r10_0, 0 -> 0x3e14 v
3c6c: %r12_0 = load_word -4
3c70: %r11_1 = and %r11_1, 0x0000000f
3c78: bne %r11_1, 0x0000000c -> 0x3c90 v
3c80: %r10_1 = 0x2000000b
3c88: %r10_0 = 0x04113202
3c90: bne %r11_1, 0x0000000d -> 0x3ca8 v
3c98: %r10_1 = 0x20007061
3ca0: %r10_0 = 0x04113202
3ca8: bne %r11_1, 0x0000000e -> 0x3cc0 v
3cb0: %r10_1 = 0x20003031
3cb8: %r10_0 = 0x04123202
3cc0: bne %r11_1, 0x0000000f -> 0x3cd8 v
3cc8: %r10_1 = 0x20007065
3cd0: %r10_0 = 0x04123202
3cd8: bne %r11_1, 0 -> 0x3cec v
3cdc: %r10_1 = 0x20001019
3ce4: %r10_0 = 0x04123202
3cec: bne %r11_1, 1 -> 0x3d00 v
3cf0: %r10_1 = 0x20007069
3cf8: %r10_0 = 0x04133202
3d00: bne %r11_1, 2 -> 0x3d14 v
3d04: %r10_1 = 0x20003035
3d0c: %r10_0 = 0x04133202
3d14: bne %r11_1, 3 -> 0x3d28 v
3d18: %r10_1 = 0x2000706d
3d20: %r10_0 = 0x04133202
3d28: bne %r11_1, 4 -> 0x3d3c v
3d2c: %r10_1 = 0x2000000d
3d34: %r10_0 = 0x04143202
3d3c: bne %r11_1, 5 -> 0x3d50 v
3d40: %r10_1 = 0x20007071
3d48: %r10_0 = 0x04143202
3d50: bne %r11_1, 6 -> 0x3d64 v
3d54: %r10_1 = 0x20003039
3d5c: %r10_0 = 0x04153202
3d64: bne %r11_1, 7 -> 0x3d78 v
3d68: %r10_1 = 0x20007075
3d70: %r10_0 = 0x04153202
3d78: bne %r11_1, 0x00000008 -> 0x3d90 v
3d80: %r10_1 = 0x2000101d
3d88: %r10_0 = 0x04153202
3d90: bne %r11_1, 0x00000009 -> 0x3da8 v
3d98: %r10_1 = 0x20007079
3da0: %r10_0 = 0x04163202
3da8: bne %r11_1, 0x0000000a -> 0x3dc0 v
3db0: %r10_1 = 0x2000303d
3db8: %r10_0 = 0x04163202
3dc0: bne %r11_1, 0x0000000b -> 0x3dd8 v
3dc8: %r10_1 = 0x2000707d
3dd0: %r10_0 = 0x04163202
3dd8: %r10_0 = and %r12_0, 0x0000000f
3de0: bne %r10_0, 2 -> 0x3de4 v
3de4: bne %r10_0, 6 -> 0x3de8 v
3de8: store_word %r10_1, 0xe4000284
3dec: %r10_1 = or %r10_1, 0x000c0000
3df4: store_word %r10_1, 0xe4000284
3df8: %r12_0 = *(0xe4000284)
3dfc: sync
3e00: delay -7
3e04: %r10_1 = and %r10_1, 0xdff3ffff
3e0c: store_word %r10_1, 0xe4000284
3e10: call 0x44f8
3e14: %r12_0 = load_word -4
3e18: blt? %r11_1, 0x00000018 -> 0x3e24 v
3e20: %r10_0 = or %r11_0, 1
3e24: store_word_0_100 %r11_0, MC0_DRAM_CONFIG
3e28: store_word_0_100 0x00000080, MC0_BSB_SNOOPED_TIMER_CNTL
3e30: store_word_0_100 0x20988088, MC0_TUNING_0
3e38: store_word_0_100 0x0000007a, MC0_TUNING_1
3e40: store_word_0_100 1, MC0_ARBITRATION_CNTL
3e44: store_word_0_100 0x00106514, MC0_RD_BUFFER_CNTL_0
3e4c: store_word_0_100 0x00210414, MC0_RD_BUFFER_CNTL_1
3e54: store_word_0_100 0x0128d87b, MC0_TIMING_CNTL_0
3e5c: store_word_0_100 0x03820edb, MC0_TIMING_CNTL_1
3e64: store_word_0_100 0x0c97914b, MC0_TIMING_CNTL_2
3e6c: store_word_0_100 0x00000025, MC0_WR_DATA_DLY_0
3e74: store_word_0_100 0x00000030, MC0_INTERRUPT_MASK
3e7c: store_word_0_100 0, MC0_POINTER
3e80: store_word_0_100 0x003c0000, MC0_DRAM_CMD
3e88: store_word_0_100 2, MC0_CNTL
3e8c: %r10_0 = *(MC1_CNTL)
3e90: sync
3e94: delay -7
3e98: store_word_0_100 0, MC0_POINTER
3e9c: store_word_0_100 0x0c280100, MC0_DRAM_CMD
3ea4: store_word_0_100 0x2f240000, MC0_DRAM_CMD
3eac: %r10_1 = 0x062080b9
3eb4: %r10_0 = *(0xd0008008)
3eb8: %r10_0 = and %r10_0, 0x000000ff
3ec0: beq %r10_0, 0 -> 0x3eec v
3ec4: %r10_1 = 0x06208009
3ecc: %r10_0 = and %r12_0, 0x0000000f
3ed4: bne %r10_0, 2 -> 0x3ee0 v
3ed8: %r10_1 = 0x0620800a
3ee0: bne %r10_0, 6 -> 0x3eec v
3ee4: %r10_1 = 0x062080b9
3eec: %r12_0 = load_word -4
3ef0: blt? %r11_1, 0x00000018 -> 0x3efc v
3ef8: %r10_1 = or %r10_1, 4
3efc: store_word %r10_1, 0xe4000014
3f00: store_word_0_100 %r10_1, MC0_DRAM_CMD
3f04: %r10_1 = 0x06200712
3f0c: store_word %r10_1, 0xe4000010
3f10: store_word_0_100 %r10_1, MC0_DRAM_CMD
3f14: store_word_0_100 0x003c0000, MC0_DRAM_CMD
3f1c: store_word_0_100 2, MC0_CNTL
3f20: store_word_0_100 0x00001000, MC0_CNTL
3f28: store_word_0_100 0x00000605, MC0_CNTL
3f30: %r10_0 = *(MC1_CNTL)
3f34: sync
3f38: delay -7
3f3c: %r10_0 = *(0xd0008008)
3f40: %r10_0 = and %r10_0, 0x000000ff
3f48: beq %r10_0, 0 -> 0x449c v
3f4c: %r10_0 = 0
3f50: op_1E %r11_0, -7
3f54: %r12_0 = 0
3f58: %r12_1 = 0
3f5c: %r12_0 = 0
3f60: op_1E %r11_0, -7
3f64: %r10_0 = add %r11_0, 1
3f68: bne %r11_0, 4 -> 0x3f50 ^
3f6c: %r10_0 = 0
3f70: store_word %r11_0, 0xe4000018
3f74: store_word_0_100 %r11_0, MC0_RD_STR_DLY_0
3f78: store_word_0_100 %r11_0, MC0_RD_STR_DLY_1
3f7c: %r10_0 = *(MC1_RD_STR_DLY_1)
3f80: sync
3f84: delay -7
3f88: store_word_0_100 0x00001605, MC0_CNTL
3f90: store_word_0_100 0x00000605, MC0_CNTL
3f98: op_1E 0, -7
3f9c: %r10_1 = 0x00001808
3fa4: call 0x58c4
3fa8: op_1E 0, -7
3fac: op_1E 1, -7
3fb0: %r10_1 = 0x0000180c
3fb8: call 0x58c4
3fbc: op_1E 1, -7
3fc0: op_1E 2, -7
3fc4: %r10_1 = 0x00001888
3fcc: call 0x58c4
3fd0: op_1E 2, -7
3fd4: op_1E 3, -7
3fd8: %r10_1 = 0x0000188c
3fe0: call 0x58c4
3fe4: op_1E 3, -7
3fe8: %r10_0 = load_word -5
3fec: %r10_0 = add %r11_0, 0x01010101
3ff4: bne %r11_0, 0x50505050 -> 0x3f70 ^
3ffc: %r10_0 = 0
4000: op_1E %r10_0, -7
4004: %r10_0 = rotlw_by_2_then_and %r10_0, 0x000000ff
400c: %r11_1 = add %r11_0, 0xe4001600
4014: store_word %r13_0, %r11_1
4018: %r11_1 = rotlw_by_0_then_and %r13_0, 0x000000ff
4020: beq %r11_1, 0 -> 0x5f08 v
4024: %r10_0 = and %r12_0, 0x0000ffff
402c: %r10_0 = div %r11_0, %r11_1
4030: %r13_1 = rotlw_by_0_then_and %r11_0, 0x000000ff
4038: %r11_1 = rotlw_by_24_then_and %r13_0, 0x000000ff
4040: beq %r11_1, 0 -> 0x5f08 v
4044: %r10_0 = rotlw_by_16_then_and %r12_0, 0x0000ffff
404c: %r10_0 = div %r11_0, %r11_1
4050: %r10_0 = rotlw_by_8_then_and %r11_0, 0x0000ff00
4058: %r13_1 = or %r13_1, %r11_0
405c: %r11_1 = rotlw_by_16_then_and %r13_0, 0x000000ff
4064: beq %r11_1, 0 -> 0x5f08 v
4068: %r10_0 = and %r12_1, 0x0000ffff
4070: %r10_0 = div %r11_0, %r11_1
4074: %r10_0 = rotlw_by_16_then_and %r11_0, 0x00ff0000
407c: %r13_1 = or %r13_1, %r11_0
4080: %r11_1 = rotlw_by_8_then_and %r13_0, 0x000000ff
4088: beq %r11_1, 0 -> 0x5f08 v
408c: %r10_0 = rotlw_by_16_then_and %r12_1, 0x0000ffff
4094: %r10_0 = div %r11_0, %r11_1
4098: %r10_0 = rotlw_by_24_then_and %r11_0, 0xff000000
40a0: %r13_1 = or %r13_1, %r11_0
40a4: op_1E %r10_0, -7
40a8: %r10_0 = add %r10_0, 1
40ac: bne %r10_0, 4 -> 0x4000 ^
40b0: op_1E 0, -7
40b4: store_word %r13_1, MC0_RD_STR_DLY_0
40b8: op_1E 0, -7
40bc: op_1E 1, -7
40c0: store_word %r13_1, MC0_RD_STR_DLY_1
40c4: op_1E 1, -7
40c8: op_1E 2, -7
40cc: store_word %r13_1, MC1_RD_STR_DLY_0
40d0: op_1E 2, -7
40d4: op_1E 3, -7
40d8: store_word %r13_1, MC1_RD_STR_DLY_1
40dc: op_1E 3, -7
40e0: %r10_1 = and %r12_0, 0x0000000f
40e8: bne %r10_1, 1 -> 0x40f4 v
40ec: call 0x2c08
40f0: jmp 0x411c v
40f4: %r10_1 = and %r12_0, 0x0000000f
40fc: bne %r10_1, 2 -> 0x4108 v
4100: call 0x2c2c
4104: jmp 0x411c v
4108: %r10_1 = and %r12_0, 0x0000000f
4110: bne %r10_1, 6 -> 0x411c v
4114: call 0x2c50
4118: jmp 0x411c v
411c: %r10_0 = *(MC1_RD_STR_DLY_1)
4120: sync
4124: delay -7
4128: store_word_0_100 0x00001605, MC0_CNTL
4130: store_word_0_100 0x00000605, MC0_CNTL
4138: %r10_0 = 0
413c: store_word_0_100 %r11_0, MC0_WR_STR_DLL_0
4140: store_word_0_100 %r11_0, MC0_WR_STR_DLL_1
4144: store_word %r11_0, 0xe4000020
4148: %r11_1 = 0
414c: store_word %r11_1, 0xe4000028
4150: %r11_1 = and %r11_1, 0x0000000f
4158: bne %r11_1, 0 -> 0x4198 v
415c: store_word %r11_1, 0xe4000028
4160: %r10_0 = rotlw_by_28_then_and %r11_1, 7
4164: bne %r11_0, 0 -> 0x4170 v
4168: %r11_1 = 0x001ff306
4170: bne %r11_0, 1 -> 0x417c v
4174: %r11_1 = 0x001bb306
417c: bne %r11_0, 2 -> 0x4188 v
4180: %r11_1 = 0x001fa306
4188: bne %r11_0, 3 -> 0x4194 v
418c: %r11_1 = 0x0018f306
4194: call 0x01b8
4198: %r10_0 = 0
419c: op_1E %r11_0, -7
41a0: %r12_0 = 0
41a4: %r12_1 = 0
41a8: %r12_0 = 0
41ac: op_1E %r11_0, -7
41b0: %r10_0 = add %r11_0, 1
41b4: bne %r11_0, 4 -> 0x419c ^
41b8: call 0x4588
41bc: %r10_0 = 0
41c0: store_word %r11_0, 0xe4000024
41c4: store_word %r11_0, 0xe4000018
41c8: call 0x45f4
41cc: call 0x5510
41d0: op_1E 0, -7
41d4: %r10_1 = 0x00001808
41dc: %r10_0 = load_word -4
41e0: call 0x5be0
41e4: op_1E 0, -7
41e8: op_1E 1, -7
41ec: %r10_1 = 0x0000180c
41f4: %r12_0 = load_word -4
41f8: call 0x5be0
41fc: op_1E 1, -7
4200: op_1E 2, -7
4204: %r10_1 = 0x00001888
420c: %r10_0 = load_word -4
4210: call 0x5be0
4214: op_1E 2, -7
4218: op_1E 3, -7
421c: %r10_1 = 0x0000188c
4224: %r12_0 = load_word -4
4228: call 0x5be0
422c: op_1E 3, -7
4230: %r10_0 = load_word -5
4234: %r10_0 = add %r11_0, 0x01010101
423c: bne %r11_0, 0x50505050 -> 0x41c4 ^
4244: %r10_0 = 0
4248: op_1E %r10_0, -7
424c: %r10_0 = rotlw_by_2_then_and %r10_0, 0x000000ff
4254: %r11_1 = add %r11_0, 0xe4001610
425c: store_word %r13_0, %r11_1
4260: %r11_1 = rotlw_by_0_then_and %r13_0, 0x000000ff
4268: beq %r11_1, 0 -> 0x5f8c v
426c: %r10_0 = and %r12_0, 0x0000ffff
4274: %r10_0 = div %r11_0, %r11_1
4278: %r13_1 = rotlw_by_0_then_and %r11_0, 0x000000ff
4280: %r11_1 = rotlw_by_24_then_and %r13_0, 0x000000ff
4288: beq %r11_1, 0 -> 0x5fa8 v
428c: %r10_0 = rotlw_by_16_then_and %r12_0, 0x0000ffff
4294: %r10_0 = div %r11_0, %r11_1
4298: %r10_0 = rotlw_by_8_then_and %r11_0, 0x0000ff00
42a0: %r13_1 = or %r13_1, %r11_0
42a4: %r11_1 = rotlw_by_16_then_and %r13_0, 0x000000ff
42ac: beq %r11_1, 0 -> 0x5fc4 v
42b0: %r10_0 = and %r12_1, 0x0000ffff
42b8: %r10_0 = div %r11_0, %r11_1
42bc: %r10_0 = rotlw_by_16_then_and %r11_0, 0x00ff0000
42c4: %r13_1 = or %r13_1, %r11_0
42c8: %r11_1 = rotlw_by_8_then_and %r13_0, 0x000000ff
42d0: beq %r11_1, 0 -> 0x5fe0 v
42d4: %r10_0 = rotlw_by_16_then_and %r12_1, 0x0000ffff
42dc: %r10_0 = div %r11_0, %r11_1
42e0: %r10_0 = rotlw_by_24_then_and %r11_0, 0xff000000
42e8: %r13_1 = or %r13_1, %r11_0
42ec: op_1E %r10_0, -7
42f0: %r10_0 = add %r10_0, 1
42f4: bne %r10_0, 4 -> 0x4248 ^
42f8: op_1E 0, -7
42fc: store_word %r13_1, MC0_WR_STR_DLL_0
4300: op_1E 0, -7
4304: op_1E 1, -7
4308: store_word %r13_1, MC0_WR_STR_DLL_1
430c: op_1E 1, -7
4310: op_1E 2, -7
4314: store_word %r13_1, MC1_WR_STR_DLL_0
4318: op_1E 2, -7
431c: op_1E 3, -7
4320: store_word %r13_1, MC1_WR_STR_DLL_1
4324: op_1E 3, -7
4328: %r10_1 = and %r12_0, 0x0000000f
4330: bne %r10_1, 1 -> 0x433c v
4334: call 0x2c74
4338: jmp 0x4364 v
433c: %r10_1 = and %r12_0, 0x0000000f
4344: bne %r10_1, 2 -> 0x4350 v
4348: call 0x3098
434c: jmp 0x4364 v
4350: %r10_1 = and %r12_0, 0x0000000f
4358: bne %r10_1, 6 -> 0x4364 v
435c: call 0x34fc
4360: jmp 0x4364 v
4364: %r12_0 = *(MC1_WR_STR_DLL_1)
4368: sync
436c: delay -7
4370: %r10_0 = load_word -4
4374: %r10_0 = and %r11_1, 0x0000000f
437c: bne %r11_0, 0 -> 0x441c v
4380: %r12_0 = load_word -4
4384: %r11_1 = and %r11_1, 0x0000ffff
438c: %r10_0 = load_word -5
4390: %r10_0 = and %r11_0, 0x0000ffff
4398: bgt? %r11_1, %r11_0 -> 0x43b0 v
439c: %r10_0 = load_word -5
43a0: %r10_0 = rotlw_by_12_then_and %r11_0, 0x00070000
43a8: %r10_0 = or %r11_1, %r11_0
43ac: store_word %r11_0, 0xe4000020
43b0: %r11_1 = 0
43b4: store_word_0_100 %r11_1, MC0_WR_STR_DLL_0
43b8: store_word_0_100 %r11_1, MC0_WR_STR_DLL_1
43bc: %r10_0 = load_word -4
43c0: %r11_1 = add %r11_1, 0x00000010
43c8: %r10_0 = rotlw_by_28_then_and %r11_1, 7
43cc: ble %r11_0, 4 -> 0x415c ^
43d0: %r10_0 = load_word -5
43d4: %r10_0 = rotlw_by_16_then_and %r11_0, 7
43d8: %r10_0 = and %r12_0, 0x0000000f
43e0: bne %r10_0, 2 -> 0x43e8 v
43e4: %r10_0 = 1
43e8: bne %r11_0, 0 -> 0x43f4 v
43ec: %r11_1 = 0x001ff306
43f4: bne %r11_0, 1 -> 0x4400 v
43f8: %r11_1 = 0x001bb306
4400: bne %r11_0, 2 -> 0x440c v
4404: %r11_1 = 0x001fa306
440c: bne %r11_0, 3 -> 0x4418 v
4410: %r11_1 = 0x0018f306
4418: call 0x01b8
441c: %r10_0 = load_word -4
4420: %r11_1 = add %r11_1, 1
4424: %r10_0 = and %r11_1, 0x0000000f
442c: ble %r11_0, 2 -> 0x414c ^
4430: call 0x4708
4434: store_word_0_100 0, MC0_CNTL
4438: store_word_0_100 0, MC0_POINTER
443c: %r10_0 = load_word -6
4440: store_word_0_100 %r10_1, MC0_DRAM_CMD
4444: store_word_0_100 0x003c0000, MC0_DRAM_CMD
444c: store_word_0_100 2, MC0_CNTL
4450: store_word_0_100 0x00001605, MC0_CNTL
4458: store_word_0_100 0x00000605, MC0_CNTL
4460: %r10_0 = *(MC1_CNTL)
4464: sync
4468: delay -7
446c: store_word_0_100 0, MC0_POINTER
4470: store_word_0_100 0x003c0000, MC0_DRAM_CMD
4478: store_word_0_100 2, MC0_CNTL
447c: store_word_0_100 0x00001000, MC0_CNTL
4484: store_word_0_100 0x00000605, MC0_CNTL
448c: %r10_0 = *(MC1_CNTL)
4490: sync
4494: delay -7
4498: call 0x5510
449c: %r10_0 = load_word -6
44a0: %r10_1 = rotlw_by_31_then_and %r10_1, 0x7fffffff
44a8: bgt? %r10_1, 0x00000080 -> 0x6030 v
44b0: store_word 0, 0
44b4: %r10_0 = *(0)
44b8: sync
44bc: store_word %r10_1, %r10_1
44c0: %r10_0 = *(%r10_1)
44c4: sync
44c8: %r10_0 = *(0)
44cc: bne %r10_0, 0 -> 0x44d8 v
44d0: %r10_0 = load_word -5
44d4: beq %r11_0, %r10_1 -> 0x44a0 ^
44d8: store_word 0x0014149a, 0xe4000024
44e0: call 0x2bc0
44e4: jmp 0x6030 v
44e8: %r10_0 = *(0xe4000288)
44ec: sync
44f0: delay -7
44f4: return
44f8: store_word 2, 0xe400028c
44fc: %r12_0 = *(0xe400028c)
4500: sync
4504: delay -7
4508: store_word 0, 0xe400028c
450c: %r12_0 = *(0xe400028c)
4510: sync
4514: delay -7
4518: store_word 0, 0xe4000288
451c: call 0x44e8
4520: store_word 1, 0xe4000288
4524: call 0x44e8
4528: store_word 5, 0xe4000288
452c: call 0x44e8
4530: store_word 1, 0xe4000288
4534: call 0x44e8
4538: store_word 0, 0xe4000288
453c: call 0x44e8
4540: return
4544: %r10_0 = and %r10_1, 0x000000ff
454c: bge %r11_0, %r10_0 -> 0x4554 v
4550: %r10_0 = or %r11_0, %r11_0
4554: %r10_0 = rotlw_by_24_then_and %r10_1, 0x000000ff
455c: bge %r11_0, %r10_0 -> 0x4564 v
4560: %r10_0 = or %r11_0, %r11_0
4564: %r10_0 = rotlw_by_16_then_and %r10_1, 0x000000ff
456c: bge %r11_0, %r10_0 -> 0x4574 v
4570: %r10_0 = or %r11_0, %r11_0
4574: %r10_0 = rotlw_by_8_then_and %r10_1, 0x000000ff
457c: bge %r11_0, %r10_0 -> 0x4584 v
4580: %r10_0 = or %r11_0, %r11_0
4584: return
4588: %r10_0 = 0x00000050
4590: %r10_0 = load_word -6
4594: call 0x4544
4598: %r12_0 = load_word -6
459c: call 0x4544
45a0: %r10_0 = load_word -6
45a4: call 0x4544
45a8: %r12_0 = load_word -6
45ac: call 0x4544
45b0: %r10_1 = rotlw_by_8_then_and %r10_0, -1
45b4: %r10_0 = or %r10_0, %r10_1
45b8: %r10_1 = rotlw_by_16_then_and %r10_0, -1
45bc: %r10_0 = or %r10_0, %r10_1
45c0: %r10_0 = load_word -6
45c4: %r10_1 = subf %r10_1, %r10_0
45c8: store_word %r10_1, MC0_WR_STR_DLL_0
45cc: %r12_0 = load_word -6
45d0: %r10_1 = subf %r10_1, %r10_0
45d4: store_word %r10_1, MC0_WR_STR_DLL_1
45d8: %r10_0 = load_word -6
45dc: %r10_1 = subf %r10_1, %r10_0
45e0: store_word %r10_1, MC1_WR_STR_DLL_0
45e4: %r12_0 = load_word -6
45e8: %r10_1 = subf %r10_1, %r10_0
45ec: store_word %r10_1, MC1_WR_STR_DLL_1
45f0: return
45f4: %r10_0 = load_word -6
45f8: %r10_1 = add %r10_1, 0x01010101
4600: store_word %r10_1, MC0_WR_STR_DLL_0
4604: %r12_0 = load_word -6
4608: %r10_1 = add %r10_1, 0x01010101
4610: store_word %r10_1, MC0_WR_STR_DLL_1
4614: %r10_0 = load_word -6
4618: %r10_1 = add %r10_1, 0x01010101
4620: store_word %r10_1, MC1_WR_STR_DLL_0
4624: %r12_0 = load_word -6
4628: %r10_1 = add %r10_1, 0x01010101
4630: store_word %r10_1, MC1_WR_STR_DLL_1
4634: %r12_0 = *(MC1_WR_STR_DLL_1)
4638: sync
463c: delay -7
4640: call 0x44f8
4644: store_word_0_100 0, MC0_CNTL
4648: %r12_0 = load_word -6
464c: %r10_1 = and %r10_1, -2
4650: store_word %r10_1, 0xe40002a4
4654: store_word_0_100 0, MC0_POINTER
4658: store_word_0_100 0x001c0000, MC0_DRAM_CMD
4660: store_word_0_100 2, MC0_CNTL
4664: %r10_0 = *(MC1_CNTL)
4668: sync
466c: delay -7
4670: %r10_1 = or %r10_1, 1
4674: store_word %r10_1, 0xe40002a4
4678: %r12_0 = *(0xe40002a4)
467c: sync
4680: delay -7
4684: store_word_0_100 0, MC0_POINTER
4688: store_word_0_100 0x423c0000, MC0_DRAM_CMD
4690: store_word_0_100 0x0c280100, MC0_DRAM_CMD
4698: store_word_0_100 0x06200221, MC0_DRAM_CMD
46a0: %r12_0 = *(0xe4000014)
46a4: store_word_0_100 %r10_0, MC0_DRAM_CMD
46a8: %r10_0 = *(0xe4000010)
46ac: store_word_0_100 %r10_0, MC0_DRAM_CMD
46b0: store_word_0_100 2, MC0_CNTL
46b4: %r10_0 = *(MC1_CNTL)
46b8: sync
46bc: delay -7
46c0: store_word_0_100 0, MC0_POINTER
46c4: store_word_0_100 0x0c280100, MC0_DRAM_CMD
46cc: store_word_0_100 0x2f240000, MC0_DRAM_CMD
46d4: store_word_0_100 0x2f240000, MC0_DRAM_CMD
46dc: store_word_0_100 0x003c0000, MC0_DRAM_CMD
46e4: store_word_0_100 2, MC0_CNTL
46e8: store_word_0_100 0x00001605, MC0_CNTL
46f0: store_word_0_100 0x00000605, MC0_CNTL
46f8: %r10_0 = *(MC1_CNTL)
46fc: sync
4700: delay -7
4704: return
4708: store_word_0_100 0, MC0_CNTL
470c: store_word_0_100 0, MC0_POINTER
4710: store_word_0_100 0x00040000, MC0_DRAM_CMD
4718: store_word_0_100 2, MC0_CNTL
471c: %r10_0 = *(MC1_CNTL)
4720: sync
4724: delay -7
4728: call 0x44f8
472c: store_word_0_100 0, MC0_POINTER
4730: store_word_0_100 0x003c0000, MC0_DRAM_CMD
4738: store_word_0_100 2, MC0_CNTL
473c: %r10_0 = *(MC1_CNTL)
4740: sync
4744: delay -7
4748: return
474c: store_word_0_100 0, MC0_CNTL
4750: store_word_0_100 0, MC0_POINTER
4754: %r10_0 = 0
4758: %r11_1 = rotlw_by_25_then_and %r10_1, 1
475c: beq %r11_1, 1 -> 0x4764 v
4760: %r10_0 = -1
4764: store_word %r11_0, MC0_DRAM_DATA
4768: %r10_0 = xor %r11_0, -1
476c: store_word %r11_0, MC1_DRAM_DATA
4770: store_word_0_100 %r10_0, MC0_DRAM_DATA
4774: store_word_0_100 %r10_0, MC0_DRAM_DATA
4778: store_word_0_100 %r10_0, MC0_DRAM_DATA
477c: store_word_0_100 %r10_0, MC0_DRAM_DATA
4780: store_word_0_100 %r10_0, MC0_DRAM_DATA
4784: store_word_0_100 %r10_0, MC0_DRAM_DATA
4788: store_word_0_100 %r10_0, MC0_DRAM_DATA
478c: store_word_0_100 %r10_0, MC0_DRAM_DATA
4790: %r10_0 = 0
4794: %r11_1 = rotlw_by_25_then_and %r10_1, 1
4798: beq %r11_1, 1 -> 0x47a0 v
479c: %r10_0 = -1
47a0: store_word %r11_0, MC0_DRAM_DATA
47a4: %r10_0 = xor %r11_0, -1
47a8: store_word %r11_0, MC1_DRAM_DATA
47ac: store_word_0_100 %r10_0, MC0_DRAM_DATA
47b0: store_word_0_100 %r10_0, MC0_DRAM_DATA
47b4: %r10_0 = xor %r10_0, -1
47b8: store_word_0_100 %r10_0, MC0_DRAM_DATA
47bc: store_word_0_100 %r10_0, MC0_DRAM_DATA
47c0: %r10_0 = xor %r10_0, -1
47c4: store_word_0_100 %r10_0, MC0_DRAM_DATA
47c8: store_word_0_100 %r10_0, MC0_DRAM_DATA
47cc: %r10_0 = xor %r10_0, -1
47d0: store_word_0_100 %r10_0, MC0_DRAM_DATA
47d4: store_word_0_100 %r10_0, MC0_DRAM_DATA
47d8: %r10_0 = 0x0f2c0000
47e0: %r11_1 = rotlw_by_1_then_and %r10_1, 0x00008000
47e8: %r10_0 = or %r11_0, %r11_1
47ec: %r11_1 = rotlw_by_5_then_and %r10_1, 0x00010000
47f4: %r10_0 = or %r11_0, %r11_1
47f8: %r11_1 = rotlw_by_2_then_and %r10_1, 0x00020000
4800: %r10_0 = or %r11_0, %r11_1
4804: %r11_1 = rotlw_by_16_then_and %r10_1, 0x00001fff
480c: %r10_0 = or %r11_0, %r11_1
4810: store_word_0_100 %r11_0, MC0_DRAM_CMD
4814: %r10_0 = and %r11_0, 0x0003e000
481c: %r10_0 = xor %r11_0, 0x00008000
4824: %r10_0 = or %r11_0, 0x012c0000
482c: store_word_0_100 %r11_0, MC0_DRAM_CMD
4830: %r10_0 = xor %r11_0, 0x00008000
4838: %r10_0 = and %r11_0, 0x0003e000
4840: %r10_0 = or %r11_0, 0x01b00000
4848: %r11_1 = rotlw_by_29_then_and %r10_1, 0x0000000f
4850: %r10_0 = or %r11_0, %r11_1
4854: %r11_1 = rotlw_by_28_then_and %r10_1, 0x00000070
485c: %r10_0 = or %r11_0, %r11_1
4860: %r11_1 = rotlw_by_27_then_and %r10_1, 0x00000080
4868: %r10_0 = or %r11_0, %r11_1
486c: %r11_1 = rotlw_by_28_then_and %r10_1, 0x00000200
4874: %r10_0 = or %r11_0, %r11_1
4878: store_word_0_100 %r11_0, MC0_DRAM_CMD
487c: %r10_0 = or %r11_0, 0x02000000
4884: store_word_0_100 %r11_0, MC0_DRAM_CMD
4888: %r10_0 = and %r11_0, 0x0003e000
4890: %r10_0 = xor %r11_0, 0x00010000
4898: %r10_0 = or %r11_0, 0x1f2c0000
48a0: store_word_0_100 %r11_0, MC0_DRAM_CMD
48a4: %r10_0 = xor %r11_0, 0x00010000
48ac: %r10_0 = and %r11_0, 0x0003e000
48b4: %r10_0 = or %r11_0, 0x1f280000
48bc: store_word_0_100 %r11_0, MC0_DRAM_CMD
48c0: %r10_0 = xor %r11_0, 0x00008000
48c8: store_word_0_100 %r11_0, MC0_DRAM_CMD
48cc: %r10_0 = xor %r11_0, 0x00008000
48d4: %r10_0 = xor %r11_0, 0x00010000
48dc: store_word_0_100 %r11_0, MC0_DRAM_CMD
48e0: %r10_0 = xor %r11_0, 0x00010000
48e8: store_word_0_100 2, MC0_CNTL
48ec: store_word_0_100 0x00001605, MC0_CNTL
48f4: store_word_0_100 0x00000605, MC0_CNTL
48fc: %r10_1 = add %r10_1, 0x00000020
4904: store_word_0_100 0, MC0_CNTL
4908: store_word_0_100 0, MC0_POINTER
490c: %r10_0 = 0
4910: %r11_1 = rotlw_by_25_then_and %r10_1, 1
4914: beq %r11_1, 1 -> 0x491c v
4918: %r10_0 = -1
491c: store_word %r11_0, MC0_DRAM_DATA
4920: %r10_0 = xor %r11_0, -1
4924: store_word %r11_0, MC1_DRAM_DATA
4928: store_word_0_100 %r10_0, MC0_DRAM_DATA
492c: store_word_0_100 %r10_0, MC0_DRAM_DATA
4930: store_word_0_100 %r10_0, MC0_DRAM_DATA
4934: store_word_0_100 %r10_0, MC0_DRAM_DATA
4938: store_word_0_100 %r10_0, MC0_DRAM_DATA
493c: store_word_0_100 %r10_0, MC0_DRAM_DATA
4940: store_word_0_100 %r10_0, MC0_DRAM_DATA
4944: store_word_0_100 %r10_0, MC0_DRAM_DATA
4948: %r10_0 = 0
494c: %r11_1 = rotlw_by_25_then_and %r10_1, 1
4950: beq %r11_1, 1 -> 0x4958 v
4954: %r10_0 = -1
4958: store_word %r11_0, MC0_DRAM_DATA
495c: %r10_0 = xor %r11_0, -1
4960: store_word %r11_0, MC1_DRAM_DATA
4964: store_word_0_100 %r10_0, MC0_DRAM_DATA
4968: store_word_0_100 %r10_0, MC0_DRAM_DATA
496c: %r10_0 = xor %r10_0, -1
4970: store_word_0_100 %r10_0, MC0_DRAM_DATA
4974: store_word_0_100 %r10_0, MC0_DRAM_DATA
4978: %r10_0 = xor %r10_0, -1
497c: store_word_0_100 %r10_0, MC0_DRAM_DATA
4980: store_word_0_100 %r10_0, MC0_DRAM_DATA
4984: %r10_0 = xor %r10_0, -1
4988: store_word_0_100 %r10_0, MC0_DRAM_DATA
498c: store_word_0_100 %r10_0, MC0_DRAM_DATA
4990: %r10_0 = 0x0f2c0000
4998: %r11_1 = rotlw_by_1_then_and %r10_1, 0x00008000
49a0: %r10_0 = or %r11_0, %r11_1
49a4: %r11_1 = rotlw_by_5_then_and %r10_1, 0x00010000
49ac: %r10_0 = or %r11_0, %r11_1
49b0: %r11_1 = rotlw_by_2_then_and %r10_1, 0x00020000
49b8: %r10_0 = or %r11_0, %r11_1
49bc: %r11_1 = rotlw_by_16_then_and %r10_1, 0x00001fff
49c4: %r10_0 = or %r11_0, %r11_1
49c8: store_word_0_100 %r11_0, MC0_DRAM_CMD
49cc: %r10_0 = and %r11_0, 0x0003e000
49d4: %r10_0 = xor %r11_0, 0x00008000
49dc: %r10_0 = or %r11_0, 0x012c0000
49e4: store_word_0_100 %r11_0, MC0_DRAM_CMD
49e8: %r10_0 = xor %r11_0, 0x00008000
49f0: %r10_0 = and %r11_0, 0x0003e000
49f8: %r10_0 = or %r11_0, 0x01b00000
4a00: %r11_1 = rotlw_by_29_then_and %r10_1, 0x0000000f
4a08: %r10_0 = or %r11_0, %r11_1
4a0c: %r11_1 = rotlw_by_28_then_and %r10_1, 0x00000070
4a14: %r10_0 = or %r11_0, %r11_1
4a18: %r11_1 = rotlw_by_27_then_and %r10_1, 0x00000080
4a20: %r10_0 = or %r11_0, %r11_1
4a24: %r11_1 = rotlw_by_28_then_and %r10_1, 0x00000200
4a2c: %r10_0 = or %r11_0, %r11_1
4a30: store_word_0_100 %r11_0, MC0_DRAM_CMD
4a34: %r10_0 = or %r11_0, 0x02000000
4a3c: store_word_0_100 %r11_0, MC0_DRAM_CMD
4a40: %r10_0 = and %r11_0, 0x0003e000
4a48: %r10_0 = xor %r11_0, 0x00010000
4a50: %r10_0 = or %r11_0, 0x1f2c0000
4a58: store_word_0_100 %r11_0, MC0_DRAM_CMD
4a5c: %r10_0 = xor %r11_0, 0x00010000
4a64: %r10_0 = and %r11_0, 0x0003e000
4a6c: %r10_0 = or %r11_0, 0x1f280000
4a74: store_word_0_100 %r11_0, MC0_DRAM_CMD
4a78: %r10_0 = xor %r11_0, 0x00008000
4a80: store_word_0_100 %r11_0, MC0_DRAM_CMD
4a84: %r10_0 = xor %r11_0, 0x00008000
4a8c: %r10_0 = xor %r11_0, 0x00010000
4a94: store_word_0_100 %r11_0, MC0_DRAM_CMD
4a98: %r10_0 = xor %r11_0, 0x00010000
4aa0: store_word_0_100 2, MC0_CNTL
4aa4: store_word_0_100 0x00001605, MC0_CNTL
4aac: store_word_0_100 0x00000605, MC0_CNTL
4ab4: %r10_1 = add %r10_1, 0x00000020
4abc: store_word_0_100 0, MC0_CNTL
4ac0: store_word_0_100 0, MC0_POINTER
4ac4: %r10_0 = 0
4ac8: %r11_1 = rotlw_by_25_then_and %r10_1, 1
4acc: beq %r11_1, 1 -> 0x4ad4 v
4ad0: %r10_0 = -1
4ad4: store_word %r11_0, MC0_DRAM_DATA
4ad8: %r10_0 = xor %r11_0, -1
4adc: store_word %r11_0, MC1_DRAM_DATA
4ae0: store_word_0_100 %r10_0, MC0_DRAM_DATA
4ae4: store_word_0_100 %r10_0, MC0_DRAM_DATA
4ae8: store_word_0_100 %r10_0, MC0_DRAM_DATA
4aec: store_word_0_100 %r10_0, MC0_DRAM_DATA
4af0: store_word_0_100 %r10_0, MC0_DRAM_DATA
4af4: store_word_0_100 %r10_0, MC0_DRAM_DATA
4af8: store_word_0_100 %r10_0, MC0_DRAM_DATA
4afc: store_word_0_100 %r10_0, MC0_DRAM_DATA
4b00: %r10_0 = 0
4b04: %r11_1 = rotlw_by_25_then_and %r10_1, 1
4b08: beq %r11_1, 1 -> 0x4b10 v
4b0c: %r10_0 = -1
4b10: store_word %r11_0, MC0_DRAM_DATA
4b14: %r10_0 = xor %r11_0, -1
4b18: store_word %r11_0, MC1_DRAM_DATA
4b1c: store_word_0_100 %r10_0, MC0_DRAM_DATA
4b20: store_word_0_100 %r10_0, MC0_DRAM_DATA
4b24: store_word_0_100 %r10_0, MC0_DRAM_DATA
4b28: store_word_0_100 %r10_0, MC0_DRAM_DATA
4b2c: %r10_0 = xor %r10_0, -1
4b30: store_word_0_100 %r10_0, MC0_DRAM_DATA
4b34: store_word_0_100 %r10_0, MC0_DRAM_DATA
4b38: %r10_0 = xor %r10_0, -1
4b3c: store_word_0_100 %r10_0, MC0_DRAM_DATA
4b40: store_word_0_100 %r10_0, MC0_DRAM_DATA
4b44: %r10_0 = xor %r10_0, -1
4b48: %r10_0 = 0x0f2c0000
4b50: %r11_1 = rotlw_by_1_then_and %r10_1, 0x00008000
4b58: %r10_0 = or %r11_0, %r11_1
4b5c: %r11_1 = rotlw_by_5_then_and %r10_1, 0x00010000
4b64: %r10_0 = or %r11_0, %r11_1
4b68: %r11_1 = rotlw_by_2_then_and %r10_1, 0x00020000
4b70: %r10_0 = or %r11_0, %r11_1
4b74: %r11_1 = rotlw_by_16_then_and %r10_1, 0x00001fff
4b7c: %r10_0 = or %r11_0, %r11_1
4b80: store_word_0_100 %r11_0, MC0_DRAM_CMD
4b84: %r10_0 = and %r11_0, 0x0003e000
4b8c: %r10_0 = xor %r11_0, 0x00008000
4b94: %r10_0 = or %r11_0, 0x012c0000
4b9c: store_word_0_100 %r11_0, MC0_DRAM_CMD
4ba0: %r10_0 = xor %r11_0, 0x00008000
4ba8: %r10_0 = and %r11_0, 0x0003e000
4bb0: %r10_0 = or %r11_0, 0x01b00000
4bb8: %r11_1 = rotlw_by_29_then_and %r10_1, 0x0000000f
4bc0: %r10_0 = or %r11_0, %r11_1
4bc4: %r11_1 = rotlw_by_28_then_and %r10_1, 0x00000070
4bcc: %r10_0 = or %r11_0, %r11_1
4bd0: %r11_1 = rotlw_by_27_then_and %r10_1, 0x00000080
4bd8: %r10_0 = or %r11_0, %r11_1
4bdc: %r11_1 = rotlw_by_28_then_and %r10_1, 0x00000200
4be4: %r10_0 = or %r11_0, %r11_1
4be8: store_word_0_100 %r11_0, MC0_DRAM_CMD
4bec: %r10_0 = or %r11_0, 0x02000000
4bf4: store_word_0_100 %r11_0, MC0_DRAM_CMD
4bf8: %r10_0 = and %r11_0, 0x0003e000
4c00: %r10_0 = xor %r11_0, 0x00010000
4c08: %r10_0 = or %r11_0, 0x1f2c0000
4c10: store_word_0_100 %r11_0, MC0_DRAM_CMD
4c14: %r10_0 = xor %r11_0, 0x00010000
4c1c: %r10_0 = and %r11_0, 0x0003e000
4c24: %r10_0 = or %r11_0, 0x1f280000
4c2c: store_word_0_100 %r11_0, MC0_DRAM_CMD
4c30: %r10_0 = xor %r11_0, 0x00008000
4c38: store_word_0_100 %r11_0, MC0_DRAM_CMD
4c3c: %r10_0 = xor %r11_0, 0x00008000
4c44: %r10_0 = xor %r11_0, 0x00010000
4c4c: store_word_0_100 %r11_0, MC0_DRAM_CMD
4c50: %r10_0 = xor %r11_0, 0x00010000
4c58: store_word_0_100 2, MC0_CNTL
4c5c: store_word_0_100 0x00001605, MC0_CNTL
4c64: store_word_0_100 0x00000605, MC0_CNTL
4c6c: %r10_1 = add %r10_1, 0x00000020
4c74: store_word_0_100 0, MC0_CNTL
4c78: store_word_0_100 0, MC0_POINTER
4c7c: %r10_0 = 0
4c80: %r11_1 = rotlw_by_25_then_and %r10_1, 1
4c84: beq %r11_1, 1 -> 0x4c8c v
4c88: %r10_0 = -1
4c8c: store_word %r11_0, MC0_DRAM_DATA
4c90: %r10_0 = xor %r11_0, -1
4c94: store_word %r11_0, MC1_DRAM_DATA
4c98: store_word_0_100 %r10_0, MC0_DRAM_DATA
4c9c: store_word_0_100 %r10_0, MC0_DRAM_DATA
4ca0: store_word_0_100 %r10_0, MC0_DRAM_DATA
4ca4: store_word_0_100 %r10_0, MC0_DRAM_DATA
4ca8: store_word_0_100 %r10_0, MC0_DRAM_DATA
4cac: store_word_0_100 %r10_0, MC0_DRAM_DATA
4cb0: store_word_0_100 %r10_0, MC0_DRAM_DATA
4cb4: store_word_0_100 %r10_0, MC0_DRAM_DATA
4cb8: %r10_0 = 0
4cbc: %r11_1 = rotlw_by_25_then_and %r10_1, 1
4cc0: beq %r11_1, 1 -> 0x4cc8 v
4cc4: %r10_0 = -1
4cc8: store_word %r11_0, MC0_DRAM_DATA
4ccc: %r10_0 = xor %r11_0, -1
4cd0: store_word %r11_0, MC1_DRAM_DATA
4cd4: store_word_0_100 %r10_0, MC0_DRAM_DATA
4cd8: store_word_0_100 %r10_0, MC0_DRAM_DATA
4cdc: store_word_0_100 %r10_0, MC0_DRAM_DATA
4ce0: store_word_0_100 %r10_0, MC0_DRAM_DATA
4ce4: %r10_0 = xor %r10_0, -1
4ce8: store_word_0_100 %r10_0, MC0_DRAM_DATA
4cec: store_word_0_100 %r10_0, MC0_DRAM_DATA
4cf0: %r10_0 = xor %r10_0, -1
4cf4: store_word_0_100 %r10_0, MC0_DRAM_DATA
4cf8: store_word_0_100 %r10_0, MC0_DRAM_DATA
4cfc: %r10_0 = xor %r10_0, -1
4d00: %r10_0 = 0x0f2c0000
4d08: %r11_1 = rotlw_by_1_then_and %r10_1, 0x00008000
4d10: %r10_0 = or %r11_0, %r11_1
4d14: %r11_1 = rotlw_by_5_then_and %r10_1, 0x00010000
4d1c: %r10_0 = or %r11_0, %r11_1
4d20: %r11_1 = rotlw_by_2_then_and %r10_1, 0x00020000
4d28: %r10_0 = or %r11_0, %r11_1
4d2c: %r11_1 = rotlw_by_16_then_and %r10_1, 0x00001fff
4d34: %r10_0 = or %r11_0, %r11_1
4d38: store_word_0_100 %r11_0, MC0_DRAM_CMD
4d3c: %r10_0 = and %r11_0, 0x0003e000
4d44: %r10_0 = xor %r11_0, 0x00008000
4d4c: %r10_0 = or %r11_0, 0x012c0000
4d54: store_word_0_100 %r11_0, MC0_DRAM_CMD
4d58: %r10_0 = xor %r11_0, 0x00008000
4d60: %r10_0 = and %r11_0, 0x0003e000
4d68: %r10_0 = or %r11_0, 0x01b00000
4d70: %r11_1 = rotlw_by_29_then_and %r10_1, 0x0000000f
4d78: %r10_0 = or %r11_0, %r11_1
4d7c: %r11_1 = rotlw_by_28_then_and %r10_1, 0x00000070
4d84: %r10_0 = or %r11_0, %r11_1
4d88: %r11_1 = rotlw_by_27_then_and %r10_1, 0x00000080
4d90: %r10_0 = or %r11_0, %r11_1
4d94: %r11_1 = rotlw_by_28_then_and %r10_1, 0x00000200
4d9c: %r10_0 = or %r11_0, %r11_1
4da0: store_word_0_100 %r11_0, MC0_DRAM_CMD
4da4: %r10_0 = or %r11_0, 0x02000000
4dac: store_word_0_100 %r11_0, MC0_DRAM_CMD
4db0: %r10_0 = and %r11_0, 0x0003e000
4db8: %r10_0 = xor %r11_0, 0x00010000
4dc0: %r10_0 = or %r11_0, 0x1f2c0000
4dc8: store_word_0_100 %r11_0, MC0_DRAM_CMD
4dcc: %r10_0 = xor %r11_0, 0x00010000
4dd4: %r10_0 = and %r11_0, 0x0003e000
4ddc: %r10_0 = or %r11_0, 0x1f280000
4de4: store_word_0_100 %r11_0, MC0_DRAM_CMD
4de8: %r10_0 = xor %r11_0, 0x00008000
4df0: store_word_0_100 %r11_0, MC0_DRAM_CMD
4df4: %r10_0 = xor %r11_0, 0x00008000
4dfc: %r10_0 = xor %r11_0, 0x00010000
4e04: store_word_0_100 %r11_0, MC0_DRAM_CMD
4e08: %r10_0 = xor %r11_0, 0x00010000
4e10: store_word_0_100 2, MC0_CNTL
4e14: store_word_0_100 0x00001605, MC0_CNTL
4e1c: store_word_0_100 0x00000605, MC0_CNTL
4e24: %r10_1 = add %r10_1, 0x00000020
4e2c: store_word_0_100 0, MC0_CNTL
4e30: store_word_0_100 0, MC0_POINTER
4e34: %r10_0 = 0
4e38: %r11_1 = rotlw_by_25_then_and %r10_1, 1
4e3c: beq %r11_1, 1 -> 0x4e44 v
4e40: %r10_0 = -1
4e44: store_word %r11_0, MC0_DRAM_DATA
4e48: %r10_0 = xor %r11_0, -1
4e4c: store_word %r11_0, MC1_DRAM_DATA
4e50: store_word_0_100 %r10_0, MC0_DRAM_DATA
4e54: store_word_0_100 %r10_0, MC0_DRAM_DATA
4e58: store_word_0_100 %r10_0, MC0_DRAM_DATA
4e5c: store_word_0_100 %r10_0, MC0_DRAM_DATA
4e60: store_word_0_100 %r10_0, MC0_DRAM_DATA
4e64: store_word_0_100 %r10_0, MC0_DRAM_DATA
4e68: store_word_0_100 %r10_0, MC0_DRAM_DATA
4e6c: store_word_0_100 %r10_0, MC0_DRAM_DATA
4e70: %r10_0 = 0
4e74: %r11_1 = rotlw_by_25_then_and %r10_1, 1
4e78: beq %r11_1, 1 -> 0x4e80 v
4e7c: %r10_0 = -1
4e80: store_word %r11_0, MC0_DRAM_DATA
4e84: %r10_0 = xor %r11_0, -1
4e88: store_word %r11_0, MC1_DRAM_DATA
4e8c: store_word_0_100 %r10_0, MC0_DRAM_DATA
4e90: store_word_0_100 %r10_0, MC0_DRAM_DATA
4e94: %r10_0 = xor %r10_0, -1
4e98: store_word_0_100 %r10_0, MC0_DRAM_DATA
4e9c: store_word_0_100 %r10_0, MC0_DRAM_DATA
4ea0: %r10_0 = xor %r10_0, -1
4ea4: store_word_0_100 %r10_0, MC0_DRAM_DATA
4ea8: store_word_0_100 %r10_0, MC0_DRAM_DATA
4eac: %r10_0 = xor %r10_0, -1
4eb0: store_word_0_100 %r10_0, MC0_DRAM_DATA
4eb4: store_word_0_100 %r10_0, MC0_DRAM_DATA
4eb8: %r10_0 = 0x0f2c0000
4ec0: %r11_1 = rotlw_by_1_then_and %r10_1, 0x00008000
4ec8: %r10_0 = or %r11_0, %r11_1
4ecc: %r11_1 = rotlw_by_5_then_and %r10_1, 0x00010000
4ed4: %r10_0 = or %r11_0, %r11_1
4ed8: %r11_1 = rotlw_by_2_then_and %r10_1, 0x00020000
4ee0: %r10_0 = or %r11_0, %r11_1
4ee4: %r11_1 = rotlw_by_16_then_and %r10_1, 0x00001fff
4eec: %r10_0 = or %r11_0, %r11_1
4ef0: store_word_0_100 %r11_0, MC0_DRAM_CMD
4ef4: %r10_0 = and %r11_0, 0x0003e000
4efc: %r10_0 = xor %r11_0, 0x00008000
4f04: %r10_0 = or %r11_0, 0x012c0000
4f0c: store_word_0_100 %r11_0, MC0_DRAM_CMD
4f10: %r10_0 = xor %r11_0, 0x00008000
4f18: %r10_0 = and %r11_0, 0x0003e000
4f20: %r10_0 = or %r11_0, 0x01b00000
4f28: %r11_1 = rotlw_by_29_then_and %r10_1, 0x0000000f
4f30: %r10_0 = or %r11_0, %r11_1
4f34: %r11_1 = rotlw_by_28_then_and %r10_1, 0x00000070
4f3c: %r10_0 = or %r11_0, %r11_1
4f40: %r11_1 = rotlw_by_27_then_and %r10_1, 0x00000080
4f48: %r10_0 = or %r11_0, %r11_1
4f4c: %r11_1 = rotlw_by_28_then_and %r10_1, 0x00000200
4f54: %r10_0 = or %r11_0, %r11_1
4f58: store_word_0_100 %r11_0, MC0_DRAM_CMD
4f5c: %r10_0 = or %r11_0, 0x02000000
4f64: store_word_0_100 %r11_0, MC0_DRAM_CMD
4f68: %r10_0 = and %r11_0, 0x0003e000
4f70: %r10_0 = xor %r11_0, 0x00010000
4f78: %r10_0 = or %r11_0, 0x1f2c0000
4f80: store_word_0_100 %r11_0, MC0_DRAM_CMD
4f84: %r10_0 = xor %r11_0, 0x00010000
4f8c: %r10_0 = and %r11_0, 0x0003e000
4f94: %r10_0 = or %r11_0, 0x1f280000
4f9c: store_word_0_100 %r11_0, MC0_DRAM_CMD
4fa0: %r10_0 = xor %r11_0, 0x00008000
4fa8: store_word_0_100 %r11_0, MC0_DRAM_CMD
4fac: %r10_0 = xor %r11_0, 0x00008000
4fb4: %r10_0 = xor %r11_0, 0x00010000
4fbc: store_word_0_100 %r11_0, MC0_DRAM_CMD
4fc0: %r10_0 = xor %r11_0, 0x00010000
4fc8: store_word_0_100 2, MC0_CNTL
4fcc: store_word_0_100 0x00001605, MC0_CNTL
4fd4: store_word_0_100 0x00000605, MC0_CNTL
4fdc: %r10_1 = add %r10_1, 0x00000020
4fe4: store_word_0_100 0, MC0_CNTL
4fe8: store_word_0_100 0, MC0_POINTER
4fec: %r10_0 = 0
4ff0: %r11_1 = rotlw_by_25_then_and %r10_1, 1
4ff4: beq %r11_1, 1 -> 0x4ffc v
4ff8: %r10_0 = -1
4ffc: store_word %r11_0, MC0_DRAM_DATA
5000: %r10_0 = xor %r11_0, -1
5004: store_word %r11_0, MC1_DRAM_DATA
5008: store_word_0_100 %r10_0, MC0_DRAM_DATA
500c: store_word_0_100 %r10_0, MC0_DRAM_DATA
5010: store_word_0_100 %r10_0, MC0_DRAM_DATA
5014: store_word_0_100 %r10_0, MC0_DRAM_DATA
5018: store_word_0_100 %r10_0, MC0_DRAM_DATA
501c: store_word_0_100 %r10_0, MC0_DRAM_DATA
5020: store_word_0_100 %r10_0, MC0_DRAM_DATA
5024: store_word_0_100 %r10_0, MC0_DRAM_DATA
5028: %r10_0 = 0
502c: %r11_1 = rotlw_by_25_then_and %r10_1, 1
5030: beq %r11_1, 1 -> 0x5038 v
5034: %r10_0 = -1
5038: store_word %r11_0, MC0_DRAM_DATA
503c: %r10_0 = xor %r11_0, -1
5040: store_word %r11_0, MC1_DRAM_DATA
5044: store_word_0_100 %r10_0, MC0_DRAM_DATA
5048: store_word_0_100 %r10_0, MC0_DRAM_DATA
504c: %r10_0 = xor %r10_0, -1
5050: store_word_0_100 %r10_0, MC0_DRAM_DATA
5054: store_word_0_100 %r10_0, MC0_DRAM_DATA
5058: %r10_0 = xor %r10_0, -1
505c: store_word_0_100 %r10_0, MC0_DRAM_DATA
5060: store_word_0_100 %r10_0, MC0_DRAM_DATA
5064: %r10_0 = xor %r10_0, -1
5068: store_word_0_100 %r10_0, MC0_DRAM_DATA
506c: store_word_0_100 %r10_0, MC0_DRAM_DATA
5070: %r10_0 = 0x0f2c0000
5078: %r11_1 = rotlw_by_1_then_and %r10_1, 0x00008000
5080: %r10_0 = or %r11_0, %r11_1
5084: %r11_1 = rotlw_by_5_then_and %r10_1, 0x00010000
508c: %r10_0 = or %r11_0, %r11_1
5090: %r11_1 = rotlw_by_2_then_and %r10_1, 0x00020000
5098: %r10_0 = or %r11_0, %r11_1
509c: %r11_1 = rotlw_by_16_then_and %r10_1, 0x00001fff
50a4: %r10_0 = or %r11_0, %r11_1
50a8: store_word_0_100 %r11_0, MC0_DRAM_CMD
50ac: %r10_0 = and %r11_0, 0x0003e000
50b4: %r10_0 = xor %r11_0, 0x00008000
50bc: %r10_0 = or %r11_0, 0x012c0000
50c4: store_word_0_100 %r11_0, MC0_DRAM_CMD
50c8: %r10_0 = xor %r11_0, 0x00008000
50d0: %r10_0 = and %r11_0, 0x0003e000
50d8: %r10_0 = or %r11_0, 0x01b00000
50e0: %r11_1 = rotlw_by_29_then_and %r10_1, 0x0000000f
50e8: %r10_0 = or %r11_0, %r11_1
50ec: %r11_1 = rotlw_by_28_then_and %r10_1, 0x00000070
50f4: %r10_0 = or %r11_0, %r11_1
50f8: %r11_1 = rotlw_by_27_then_and %r10_1, 0x00000080
5100: %r10_0 = or %r11_0, %r11_1
5104: %r11_1 = rotlw_by_28_then_and %r10_1, 0x00000200
510c: %r10_0 = or %r11_0, %r11_1
5110: store_word_0_100 %r11_0, MC0_DRAM_CMD
5114: %r10_0 = or %r11_0, 0x02000000
511c: store_word_0_100 %r11_0, MC0_DRAM_CMD
5120: %r10_0 = and %r11_0, 0x0003e000
5128: %r10_0 = xor %r11_0, 0x00010000
5130: %r10_0 = or %r11_0, 0x1f2c0000
5138: store_word_0_100 %r11_0, MC0_DRAM_CMD
513c: %r10_0 = xor %r11_0, 0x00010000
5144: %r10_0 = and %r11_0, 0x0003e000
514c: %r10_0 = or %r11_0, 0x1f280000
5154: store_word_0_100 %r11_0, MC0_DRAM_CMD
5158: %r10_0 = xor %r11_0, 0x00008000
5160: store_word_0_100 %r11_0, MC0_DRAM_CMD
5164: %r10_0 = xor %r11_0, 0x00008000
516c: %r10_0 = xor %r11_0, 0x00010000
5174: store_word_0_100 %r11_0, MC0_DRAM_CMD
5178: %r10_0 = xor %r11_0, 0x00010000
5180: store_word_0_100 2, MC0_CNTL
5184: store_word_0_100 0x00001605, MC0_CNTL
518c: store_word_0_100 0x00000605, MC0_CNTL
5194: %r10_1 = add %r10_1, 0x00000020
519c: store_word_0_100 0, MC0_CNTL
51a0: store_word_0_100 0, MC0_POINTER
51a4: %r10_0 = 0
51a8: %r11_1 = rotlw_by_25_then_and %r10_1, 1
51ac: beq %r11_1, 1 -> 0x51b4 v
51b0: %r10_0 = -1
51b4: store_word %r11_0, MC0_DRAM_DATA
51b8: %r10_0 = xor %r11_0, -1
51bc: store_word %r11_0, MC1_DRAM_DATA
51c0: store_word_0_100 %r10_0, MC0_DRAM_DATA
51c4: store_word_0_100 %r10_0, MC0_DRAM_DATA
51c8: store_word_0_100 %r10_0, MC0_DRAM_DATA
51cc: store_word_0_100 %r10_0, MC0_DRAM_DATA
51d0: store_word_0_100 %r10_0, MC0_DRAM_DATA
51d4: store_word_0_100 %r10_0, MC0_DRAM_DATA
51d8: store_word_0_100 %r10_0, MC0_DRAM_DATA
51dc: store_word_0_100 %r10_0, MC0_DRAM_DATA
51e0: %r10_0 = 0
51e4: %r11_1 = rotlw_by_25_then_and %r10_1, 1
51e8: beq %r11_1, 1 -> 0x51f0 v
51ec: %r10_0 = -1
51f0: store_word %r11_0, MC0_DRAM_DATA
51f4: %r10_0 = xor %r11_0, -1
51f8: store_word %r11_0, MC1_DRAM_DATA
51fc: store_word_0_100 %r10_0, MC0_DRAM_DATA
5200: store_word_0_100 %r10_0, MC0_DRAM_DATA
5204: store_word_0_100 %r10_0, MC0_DRAM_DATA
5208: store_word_0_100 %r10_0, MC0_DRAM_DATA
520c: %r10_0 = xor %r10_0, -1
5210: store_word_0_100 %r10_0, MC0_DRAM_DATA
5214: store_word_0_100 %r10_0, MC0_DRAM_DATA
5218: %r10_0 = xor %r10_0, -1
521c: store_word_0_100 %r10_0, MC0_DRAM_DATA
5220: store_word_0_100 %r10_0, MC0_DRAM_DATA
5224: %r10_0 = xor %r10_0, -1
5228: %r10_0 = 0x0f2c0000
5230: %r11_1 = rotlw_by_1_then_and %r10_1, 0x00008000
5238: %r10_0 = or %r11_0, %r11_1
523c: %r11_1 = rotlw_by_5_then_and %r10_1, 0x00010000
5244: %r10_0 = or %r11_0, %r11_1
5248: %r11_1 = rotlw_by_2_then_and %r10_1, 0x00020000
5250: %r10_0 = or %r11_0, %r11_1
5254: %r11_1 = rotlw_by_16_then_and %r10_1, 0x00001fff
525c: %r10_0 = or %r11_0, %r11_1
5260: store_word_0_100 %r11_0, MC0_DRAM_CMD
5264: %r10_0 = and %r11_0, 0x0003e000
526c: %r10_0 = xor %r11_0, 0x00008000
5274: %r10_0 = or %r11_0, 0x012c0000
527c: store_word_0_100 %r11_0, MC0_DRAM_CMD
5280: %r10_0 = xor %r11_0, 0x00008000
5288: %r10_0 = and %r11_0, 0x0003e000
5290: %r10_0 = or %r11_0, 0x01b00000
5298: %r11_1 = rotlw_by_29_then_and %r10_1, 0x0000000f
52a0: %r10_0 = or %r11_0, %r11_1
52a4: %r11_1 = rotlw_by_28_then_and %r10_1, 0x00000070
52ac: %r10_0 = or %r11_0, %r11_1
52b0: %r11_1 = rotlw_by_27_then_and %r10_1, 0x00000080
52b8: %r10_0 = or %r11_0, %r11_1
52bc: %r11_1 = rotlw_by_28_then_and %r10_1, 0x00000200
52c4: %r10_0 = or %r11_0, %r11_1
52c8: store_word_0_100 %r11_0, MC0_DRAM_CMD
52cc: %r10_0 = or %r11_0, 0x02000000
52d4: store_word_0_100 %r11_0, MC0_DRAM_CMD
52d8: %r10_0 = and %r11_0, 0x0003e000
52e0: %r10_0 = xor %r11_0, 0x00010000
52e8: %r10_0 = or %r11_0, 0x1f2c0000
52f0: store_word_0_100 %r11_0, MC0_DRAM_CMD
52f4: %r10_0 = xor %r11_0, 0x00010000
52fc: %r10_0 = and %r11_0, 0x0003e000
5304: %r10_0 = or %r11_0, 0x1f280000
530c: store_word_0_100 %r11_0, MC0_DRAM_CMD
5310: %r10_0 = xor %r11_0, 0x00008000
5318: store_word_0_100 %r11_0, MC0_DRAM_CMD
531c: %r10_0 = xor %r11_0, 0x00008000
5324: %r10_0 = xor %r11_0, 0x00010000
532c: store_word_0_100 %r11_0, MC0_DRAM_CMD
5330: %r10_0 = xor %r11_0, 0x00010000
5338: store_word_0_100 2, MC0_CNTL
533c: store_word_0_100 0x00001605, MC0_CNTL
5344: store_word_0_100 0x00000605, MC0_CNTL
534c: %r10_1 = add %r10_1, 0x00000020
5354: store_word_0_100 0, MC0_CNTL
5358: store_word_0_100 0, MC0_POINTER
535c: %r10_0 = 0
5360: %r11_1 = rotlw_by_25_then_and %r10_1, 1
5364: beq %r11_1, 1 -> 0x536c v
5368: %r10_0 = -1
536c: store_word %r11_0, MC0_DRAM_DATA
5370: %r10_0 = xor %r11_0, -1
5374: store_word %r11_0, MC1_DRAM_DATA
5378: store_word_0_100 %r10_0, MC0_DRAM_DATA
537c: store_word_0_100 %r10_0, MC0_DRAM_DATA
5380: store_word_0_100 %r10_0, MC0_DRAM_DATA
5384: store_word_0_100 %r10_0, MC0_DRAM_DATA
5388: store_word_0_100 %r10_0, MC0_DRAM_DATA
538c: store_word_0_100 %r10_0, MC0_DRAM_DATA
5390: store_word_0_100 %r10_0, MC0_DRAM_DATA
5394: store_word_0_100 %r10_0, MC0_DRAM_DATA
5398: %r10_0 = 0
539c: %r11_1 = rotlw_by_25_then_and %r10_1, 1
53a0: beq %r11_1, 1 -> 0x53a8 v
53a4: %r10_0 = -1
53a8: store_word %r11_0, MC0_DRAM_DATA
53ac: %r10_0 = xor %r11_0, -1
53b0: store_word %r11_0, MC1_DRAM_DATA
53b4: store_word_0_100 %r10_0, MC0_DRAM_DATA
53b8: store_word_0_100 %r10_0, MC0_DRAM_DATA
53bc: store_word_0_100 %r10_0, MC0_DRAM_DATA
53c0: store_word_0_100 %r10_0, MC0_DRAM_DATA
53c4: %r10_0 = xor %r10_0, -1
53c8: store_word_0_100 %r10_0, MC0_DRAM_DATA
53cc: store_word_0_100 %r10_0, MC0_DRAM_DATA
53d0: %r10_0 = xor %r10_0, -1
53d4: store_word_0_100 %r10_0, MC0_DRAM_DATA
53d8: store_word_0_100 %r10_0, MC0_DRAM_DATA
53dc: %r10_0 = xor %r10_0, -1
53e0: %r10_0 = 0x0f2c0000
53e8: %r11_1 = rotlw_by_1_then_and %r10_1, 0x00008000
53f0: %r10_0 = or %r11_0, %r11_1
53f4: %r11_1 = rotlw_by_5_then_and %r10_1, 0x00010000
53fc: %r10_0 = or %r11_0, %r11_1
5400: %r11_1 = rotlw_by_2_then_and %r10_1, 0x00020000
5408: %r10_0 = or %r11_0, %r11_1
540c: %r11_1 = rotlw_by_16_then_and %r10_1, 0x00001fff
5414: %r10_0 = or %r11_0, %r11_1
5418: store_word_0_100 %r11_0, MC0_DRAM_CMD
541c: %r10_0 = and %r11_0, 0x0003e000
5424: %r10_0 = xor %r11_0, 0x00008000
542c: %r10_0 = or %r11_0, 0x012c0000
5434: store_word_0_100 %r11_0, MC0_DRAM_CMD
5438: %r10_0 = xor %r11_0, 0x00008000
5440: %r10_0 = and %r11_0, 0x0003e000
5448: %r10_0 = or %r11_0, 0x01b00000
5450: %r11_1 = rotlw_by_29_then_and %r10_1, 0x0000000f
5458: %r10_0 = or %r11_0, %r11_1
545c: %r11_1 = rotlw_by_28_then_and %r10_1, 0x00000070
5464: %r10_0 = or %r11_0, %r11_1
5468: %r11_1 = rotlw_by_27_then_and %r10_1, 0x00000080
5470: %r10_0 = or %r11_0, %r11_1
5474: %r11_1 = rotlw_by_28_then_and %r10_1, 0x00000200
547c: %r10_0 = or %r11_0, %r11_1
5480: store_word_0_100 %r11_0, MC0_DRAM_CMD
5484: %r10_0 = or %r11_0, 0x02000000
548c: store_word_0_100 %r11_0, MC0_DRAM_CMD
5490: %r10_0 = and %r11_0, 0x0003e000
5498: %r10_0 = xor %r11_0, 0x00010000
54a0: %r10_0 = or %r11_0, 0x1f2c0000
54a8: store_word_0_100 %r11_0, MC0_DRAM_CMD
54ac: %r10_0 = xor %r11_0, 0x00010000
54b4: %r10_0 = and %r11_0, 0x0003e000
54bc: %r10_0 = or %r11_0, 0x1f280000
54c4: store_word_0_100 %r11_0, MC0_DRAM_CMD
54c8: %r10_0 = xor %r11_0, 0x00008000
54d0: store_word_0_100 %r11_0, MC0_DRAM_CMD
54d4: %r10_0 = xor %r11_0, 0x00008000
54dc: %r10_0 = xor %r11_0, 0x00010000
54e4: store_word_0_100 %r11_0, MC0_DRAM_CMD
54e8: %r10_0 = xor %r11_0, 0x00010000
54f0: store_word_0_100 2, MC0_CNTL
54f4: store_word_0_100 0x00001605, MC0_CNTL
54fc: store_word_0_100 0x00000605, MC0_CNTL
5504: %r10_1 = add %r10_1, 0x00000020
550c: return
5510: %r10_1 = 0x00001800
5518: %r10_0 = 0x01800180
5520: call 0x474c
5524: %r10_0 = 0x02400240
552c: call 0x474c
5530: %r10_0 = 0x04200420
5538: call 0x474c
553c: %r10_0 = 0x08100810
5544: call 0x474c
5548: %r10_0 = 0x10081008
5550: call 0x474c
5554: %r10_0 = 0x20042004
555c: call 0x474c
5560: %r10_0 = 0x40024002
5568: call 0x474c
556c: %r10_0 = 0x80018001
5574: call 0x474c
5578: return
557c: %r10_0 = load_word -4
5580: %r11_1 = xor %r11_1, %r10_0
5584: %r13_1 = or %r13_1, %r11_1
5588: %r10_1 = add %r10_1, 0x00000008
5590: %r10_0 = xor %r10_0, -1
5594: %r10_0 = load_word -4
5598: %r11_1 = xor %r11_1, %r10_0
559c: %r13_1 = or %r13_1, %r11_1
55a0: %r10_1 = add %r10_1, 0x00000008
55a8: %r10_0 = xor %r10_0, -1
55ac: %r10_0 = load_word -4
55b0: %r11_1 = xor %r11_1, %r10_0
55b4: %r13_1 = or %r13_1, %r11_1
55b8: %r10_1 = add %r10_1, 0x00000008
55c0: %r10_0 = xor %r10_0, -1
55c4: %r10_0 = load_word -4
55c8: %r11_1 = xor %r11_1, %r10_0
55cc: %r13_1 = or %r13_1, %r11_1
55d0: %r10_1 = add %r10_1, 0x00000008
55d8: %r10_0 = load_word -4
55dc: %r11_1 = xor %r11_1, %r10_0
55e0: %r13_1 = or %r13_1, %r11_1
55e4: %r10_1 = add %r10_1, 0x00000008
55ec: %r10_0 = xor %r10_0, -1
55f0: %r10_0 = load_word -4
55f4: %r11_1 = xor %r11_1, %r10_0
55f8: %r13_1 = or %r13_1, %r11_1
55fc: %r10_1 = add %r10_1, 0x00000008
5604: %r10_0 = xor %r10_0, -1
5608: %r10_0 = load_word -4
560c: %r11_1 = xor %r11_1, %r10_0
5610: %r13_1 = or %r13_1, %r11_1
5614: %r10_1 = add %r10_1, 0x00000008
561c: %r10_0 = xor %r10_0, -1
5620: %r10_0 = load_word -4
5624: %r11_1 = xor %r11_1, %r10_0
5628: %r13_1 = or %r13_1, %r11_1
562c: %r10_1 = add %r10_1, 0x00000008
5634: %r10_1 = add %r10_1, 0x000000c0
563c: return
5640: %r13_1 = 0
5644: store_word_0_100 0x00001605, MC0_CNTL
564c: store_word_0_100 0x00000605, MC0_CNTL
5654: %r10_0 = 0x01800180
565c: call 0x557c
5660: %r10_0 = 0x02400240
5668: call 0x557c
566c: %r10_0 = 0x04200420
5674: call 0x557c
5678: %r10_0 = 0x08100810
5680: call 0x557c
5684: %r10_0 = 0x10081008
568c: call 0x557c
5690: %r10_0 = 0x20042004
5698: call 0x557c
569c: %r10_0 = 0x40024002
56a4: call 0x557c
56a8: %r10_0 = 0x80018001
56b0: call 0x557c
56b4: %r12_0 = load_word -4
56b8: blt? %r11_1, 0x00000018 -> 0x5758 v
56c0: %r10_0 = load_word -4
56c4: %r11_1 = rotlw_by_31_then_and %r11_1, 0x7fffffff
56cc: %r10_1 = add %r10_1, %r11_1
56d0: %r10_1 = subf %r10_1, 0x00000800
56d8: store_word_0_100 0x00001605, MC0_CNTL
56e0: store_word_0_100 0x00000605, MC0_CNTL
56e8: %r10_0 = 0x01800180
56f0: call 0x557c
56f4: %r10_0 = 0x02400240
56fc: call 0x557c
5700: %r10_0 = 0x04200420
5708: call 0x557c
570c: %r10_0 = 0x08100810
5714: call 0x557c
5718: %r10_0 = 0x10081008
5720: call 0x557c
5724: %r10_0 = 0x20042004
572c: call 0x557c
5730: %r10_0 = 0x40024002
5738: call 0x557c
573c: %r10_0 = 0x80018001
5744: call 0x557c
5748: %r10_0 = load_word -4
574c: %r11_1 = rotlw_by_31_then_and %r11_1, 0x7fffffff
5754: %r10_1 = subf %r10_1, %r11_1
5758: return
575c: %r10_0 = xor %r10_0, -1
5760: %r10_0 = load_word -5
5764: %r10_0 = xor %r11_0, %r10_0
5768: %r13_1 = or %r13_1, %r11_0
576c: %r10_0 = xor %r11_0, -1
5770: %r11_1 = or %r11_1, %r11_0
5774: %r10_1 = add %r10_1, 0x00000008
577c: %r10_0 = xor %r10_0, -1
5780: %r10_0 = load_word -5
5784: %r10_0 = xor %r11_0, %r10_0
5788: %r13_1 = or %r13_1, %r11_0
578c: %r10_0 = xor %r11_0, -1
5790: %r11_1 = or %r11_1, %r11_0
5794: %r10_1 = add %r10_1, 0x00000008
579c: %r10_0 = xor %r10_0, -1
57a0: %r10_1 = add %r10_1, 0x00000010
57a8: %r10_0 = xor %r10_0, -1
57ac: %r10_0 = load_word -5
57b0: %r10_0 = xor %r11_0, %r10_0
57b4: %r13_1 = or %r13_1, %r11_0
57b8: %r10_0 = xor %r11_0, -1
57bc: %r11_1 = or %r11_1, %r11_0
57c0: %r10_1 = add %r10_1, 0x00000008
57c8: %r10_0 = xor %r10_0, -1
57cc: %r10_0 = load_word -5
57d0: %r10_0 = xor %r11_0, %r10_0
57d4: %r13_1 = or %r13_1, %r11_0
57d8: %r10_0 = xor %r11_0, -1
57dc: %r11_1 = or %r11_1, %r11_0
57e0: %r10_1 = add %r10_1, 0x00000008
57e8: %r10_0 = xor %r10_0, -1
57ec: %r10_1 = add %r10_1, 0x00000010
57f4: %r12_0 = load_word -5
57f8: blt? %r11_0, 0x00000018 -> 0x58b8 v
5800: %r10_0 = load_word -5
5804: %r10_0 = rotlw_by_31_then_and %r11_0, -1
5808: %r10_1 = add %r10_1, %r11_0
580c: %r10_1 = subf %r10_1, 0x00000040
5814: %r10_0 = xor %r10_0, -1
5818: %r10_0 = load_word -5
581c: %r10_0 = xor %r11_0, %r10_0
5820: %r13_1 = or %r13_1, %r11_0
5824: %r10_0 = xor %r11_0, -1
5828: %r11_1 = or %r11_1, %r11_0
582c: %r10_1 = add %r10_1, 0x00000008
5834: %r10_0 = xor %r10_0, -1
5838: %r10_0 = load_word -5
583c: %r10_0 = xor %r11_0, %r10_0
5840: %r13_1 = or %r13_1, %r11_0
5844: %r10_0 = xor %r11_0, -1
5848: %r11_1 = or %r11_1, %r11_0
584c: %r10_1 = add %r10_1, 0x00000008
5854: %r10_0 = xor %r10_0, -1
5858: %r10_1 = add %r10_1, 0x00000010
5860: %r10_0 = xor %r10_0, -1
5864: %r10_0 = load_word -5
5868: %r10_0 = xor %r11_0, %r10_0
586c: %r13_1 = or %r13_1, %r11_0
5870: %r10_0 = xor %r11_0, -1
5874: %r11_1 = or %r11_1, %r11_0
5878: %r10_1 = add %r10_1, 0x00000008
5880: %r10_0 = xor %r10_0, -1
5884: %r10_0 = load_word -5
5888: %r10_0 = xor %r11_0, %r10_0
588c: %r13_1 = or %r13_1, %r11_0
5890: %r10_0 = xor %r11_0, -1
5894: %r11_1 = or %r11_1, %r11_0
5898: %r10_1 = add %r10_1, 0x00000008
58a0: %r10_0 = xor %r10_0, -1
58a4: %r10_1 = add %r10_1, 0x00000010
58ac: %r10_0 = load_word -5
58b0: %r10_0 = rotlw_by_31_then_and %r11_0, -1
58b4: %r10_1 = subf %r10_1, %r11_0
58b8: %r10_1 = add %r10_1, 0x000000c0
58c0: return
58c4: %r11_1 = 0
58c8: %r13_1 = 0
58cc: %r10_0 = 0x01800180
58d4: call 0x575c
58d8: %r10_0 = 0x02400240
58e0: call 0x575c
58e4: %r10_0 = 0x04200420
58ec: call 0x575c
58f0: %r10_0 = 0x08100810
58f8: call 0x575c
58fc: %r10_0 = 0x10081008
5904: call 0x575c
5908: %r10_0 = 0x20042004
5910: call 0x575c
5914: %r10_0 = 0x40024002
591c: call 0x575c
5920: %r10_0 = 0x80018001
5928: call 0x575c
592c: call 0x5dc8
5930: call 0x5e58
5934: return
5938: %r10_0 = xor %r10_0, -1
593c: %r10_0 = load_word -5
5940: %r10_0 = xor %r11_0, %r10_0
5944: %r13_1 = or %r13_1, %r11_0
5948: %r10_0 = xor %r11_0, -1
594c: %r11_1 = or %r11_1, %r11_0
5950: %r10_1 = add %r10_1, 0x00000008
5958: %r10_0 = xor %r10_0, -1
595c: %r10_0 = load_word -5
5960: %r10_0 = xor %r11_0, %r10_0
5964: %r13_1 = or %r13_1, %r11_0
5968: %r10_0 = xor %r11_0, -1
596c: %r11_1 = or %r11_1, %r11_0
5970: %r10_1 = add %r10_1, 0x00000008
5978: %r10_0 = xor %r10_0, -1
597c: %r10_1 = add %r10_1, 0x00000010
5984: %r10_0 = xor %r10_0, -1
5988: %r10_0 = load_word -5
598c: %r10_0 = xor %r11_0, %r10_0
5990: %r13_1 = or %r13_1, %r11_0
5994: %r10_0 = xor %r11_0, -1
5998: %r11_1 = or %r11_1, %r11_0
599c: %r10_1 = add %r10_1, 0x00000008
59a4: %r10_0 = xor %r10_0, -1
59a8: %r10_0 = load_word -5
59ac: %r10_0 = xor %r11_0, %r10_0
59b0: %r13_1 = or %r13_1, %r11_0
59b4: %r10_0 = xor %r11_0, -1
59b8: %r11_1 = or %r11_1, %r11_0
59bc: %r10_1 = add %r10_1, 0x00000008
59c4: %r10_0 = xor %r10_0, -1
59c8: %r10_1 = add %r10_1, 0x00000010
59d0: %r10_1 = add %r10_1, 0x00000008
59d8: %r10_0 = xor %r10_0, -1
59dc: %r10_0 = load_word -5
59e0: %r10_0 = xor %r11_0, %r10_0
59e4: %r13_1 = or %r13_1, %r11_0
59e8: %r10_0 = xor %r11_0, -1
59ec: %r11_1 = or %r11_1, %r11_0
59f0: %r10_1 = add %r10_1, 0x00000008
59f8: %r10_0 = xor %r10_0, -1
59fc: %r10_0 = load_word -5
5a00: %r10_0 = xor %r11_0, %r10_0
5a04: %r13_1 = or %r13_1, %r11_0
5a08: %r10_0 = xor %r11_0, -1
5a0c: %r11_1 = or %r11_1, %r11_0
5a10: %r10_1 = add %r10_1, 0x00000008
5a18: %r10_0 = xor %r10_0, -1
5a1c: %r10_1 = add %r10_1, 0x00000010
5a24: %r10_0 = xor %r10_0, -1
5a28: %r10_0 = load_word -5
5a2c: %r10_0 = xor %r11_0, %r10_0
5a30: %r13_1 = or %r13_1, %r11_0
5a34: %r10_0 = xor %r11_0, -1
5a38: %r11_1 = or %r11_1, %r11_0
5a3c: %r10_1 = add %r10_1, 0x00000008
5a44: %r10_0 = xor %r10_0, -1
5a48: %r10_0 = load_word -5
5a4c: %r10_0 = xor %r11_0, %r10_0
5a50: %r13_1 = or %r13_1, %r11_0
5a54: %r10_0 = xor %r11_0, -1
5a58: %r11_1 = or %r11_1, %r11_0
5a5c: %r10_1 = add %r10_1, 0x00000008
5a64: %r10_0 = xor %r10_0, -1
5a68: %r10_1 = add %r10_1, 0x00000010
5a70: %r12_0 = load_word -5
5a74: blt? %r11_0, 0x00000018 -> 0x5bd4 v
5a7c: %r10_0 = load_word -5
5a80: %r10_0 = rotlw_by_31_then_and %r11_0, -1
5a84: %r10_1 = add %r10_1, %r11_0
5a88: %r10_1 = subf %r10_1, 0x00000088
5a90: %r10_0 = xor %r10_0, -1
5a94: %r10_0 = load_word -5
5a98: %r10_0 = xor %r11_0, %r10_0
5a9c: %r13_1 = or %r13_1, %r11_0
5aa0: %r10_0 = xor %r11_0, -1
5aa4: %r11_1 = or %r11_1, %r11_0
5aa8: %r10_1 = add %r10_1, 0x00000008
5ab0: %r10_0 = xor %r10_0, -1
5ab4: %r10_0 = load_word -5
5ab8: %r10_0 = xor %r11_0, %r10_0
5abc: %r13_1 = or %r13_1, %r11_0
5ac0: %r10_0 = xor %r11_0, -1
5ac4: %r11_1 = or %r11_1, %r11_0
5ac8: %r10_1 = add %r10_1, 0x00000008
5ad0: %r10_0 = xor %r10_0, -1
5ad4: %r10_1 = add %r10_1, 0x00000010
5adc: %r10_0 = xor %r10_0, -1
5ae0: %r10_0 = load_word -5
5ae4: %r10_0 = xor %r11_0, %r10_0
5ae8: %r13_1 = or %r13_1, %r11_0
5aec: %r10_0 = xor %r11_0, -1
5af0: %r11_1 = or %r11_1, %r11_0
5af4: %r10_1 = add %r10_1, 0x00000008
5afc: %r10_0 = xor %r10_0, -1
5b00: %r10_0 = load_word -5
5b04: %r10_0 = xor %r11_0, %r10_0
5b08: %r13_1 = or %r13_1, %r11_0
5b0c: %r10_0 = xor %r11_0, -1
5b10: %r11_1 = or %r11_1, %r11_0
5b14: %r10_1 = add %r10_1, 0x00000008
5b1c: %r10_0 = xor %r10_0, -1
5b20: %r10_1 = add %r10_1, 0x00000010
5b28: %r10_1 = add %r10_1, 0x00000008
5b30: %r10_0 = xor %r10_0, -1
5b34: %r10_0 = load_word -5
5b38: %r10_0 = xor %r11_0, %r10_0
5b3c: %r13_1 = or %r13_1, %r11_0
5b40: %r10_0 = xor %r11_0, -1
5b44: %r11_1 = or %r11_1, %r11_0
5b48: %r10_1 = add %r10_1, 0x00000008
5b50: %r10_0 = xor %r10_0, -1
5b54: %r10_0 = load_word -5
5b58: %r10_0 = xor %r11_0, %r10_0
5b5c: %r13_1 = or %r13_1, %r11_0
5b60: %r10_0 = xor %r11_0, -1
5b64: %r11_1 = or %r11_1, %r11_0
5b68: %r10_1 = add %r10_1, 0x00000008
5b70: %r10_0 = xor %r10_0, -1
5b74: %r10_1 = add %r10_1, 0x00000010
5b7c: %r10_0 = xor %r10_0, -1
5b80: %r10_0 = load_word -5
5b84: %r10_0 = xor %r11_0, %r10_0
5b88: %r13_1 = or %r13_1, %r11_0
5b8c: %r10_0 = xor %r11_0, -1
5b90: %r11_1 = or %r11_1, %r11_0
5b94: %r10_1 = add %r10_1, 0x00000008
5b9c: %r10_0 = xor %r10_0, -1
5ba0: %r10_0 = load_word -5
5ba4: %r10_0 = xor %r11_0, %r10_0
5ba8: %r13_1 = or %r13_1, %r11_0
5bac: %r10_0 = xor %r11_0, -1
5bb0: %r11_1 = or %r11_1, %r11_0
5bb4: %r10_1 = add %r10_1, 0x00000008
5bbc: %r10_0 = xor %r10_0, -1
5bc0: %r10_1 = add %r10_1, 0x00000010
5bc8: %r10_0 = load_word -5
5bcc: %r10_0 = rotlw_by_31_then_and %r11_0, -1
5bd0: %r10_1 = subf %r10_1, %r11_0
5bd4: %r10_1 = add %r10_1, 0x00000078
5bdc: return
5be0: store_word %r11_1, 0xe400001c
5be4: %r11_1 = 0
5be8: %r13_1 = 0
5bec: %r10_0 = 0x01800180
5bf4: call 0x5938
5bf8: %r10_0 = 0x02400240
5c00: call 0x5938
5c04: %r10_0 = 0x04200420
5c0c: call 0x5938
5c10: %r10_0 = 0x08100810
5c18: call 0x5938
5c1c: %r10_0 = 0x10081008
5c24: call 0x5938
5c28: %r10_0 = 0x20042004
5c30: call 0x5938
5c34: %r10_0 = 0x40024002
5c3c: call 0x5938
5c40: %r10_0 = 0x80018001
5c48: call 0x5938
5c4c: call 0x5c58
5c50: call 0x5d00
5c54: return
5c58: %r12_0 = load_word -5
5c5c: %r10_0 = and %r13_1, 0x000000ff
5c64: bne %r10_0, 0 -> 0x5c80 v
5c68: %r12_0 = *(0xe400001c)
5c6c: %r10_0 = and %r10_0, 0x000000ff
5c74: %r12_0 = add %r12_0, %r10_0
5c78: %r12_0 = add %r13_0, 1
5c7c: %r10_0 = add %r11_0, 1
5c80: %r10_0 = and %r13_1, 0x0000ff00
5c88: bne %r10_0, 0 -> 0x5ca8 v
5c8c: %r12_0 = *(0xe400001c)
5c90: %r10_0 = rotlw_by_8_then_and %r10_0, 0x00ff0000
5c98: %r12_0 = add %r12_0, %r10_0
5c9c: %r12_0 = add %r13_0, 0x00000100
5ca4: %r10_0 = add %r11_0, 1
5ca8: %r10_0 = and %r13_1, 0x00ff0000
5cb0: bne %r10_0, 0 -> 0x5cd0 v
5cb4: %r12_0 = *(0xe400001c)
5cb8: %r10_0 = rotlw_by_16_then_and %r10_0, 0x000000ff
5cc0: %r12_1 = add %r12_1, %r10_0
5cc4: %r12_0 = add %r13_0, 0x00010000
5ccc: %r10_0 = add %r11_0, 1
5cd0: %r10_0 = and %r13_1, 0xff000000
5cd8: bne %r10_0, 0 -> 0x5cf8 v
5cdc: %r12_0 = *(0xe400001c)
5ce0: %r10_0 = rotlw_by_24_then_and %r10_0, 0x00ff0000
5ce8: %r12_1 = add %r12_1, %r10_0
5cec: %r12_0 = add %r13_0, 0x01000000
5cf4: %r10_0 = add %r11_0, 1
5cf8: store_word %r11_0, 0xe4000024
5cfc: return
5d00: %r12_0 = load_word -5
5d04: %r10_0 = and %r11_1, 0x000000ff
5d0c: bne %r10_0, 0 -> 0x5d30 v
5d10: %r12_0 = *(0xe400001c)
5d14: %r10_0 = and %r10_0, 0x000000ff
5d1c: %r12_0 = add %r12_0, %r10_0
5d20: %r12_0 = subf %r12_0, 0x00000050
5d28: %r12_0 = add %r13_0, 1
5d2c: %r10_0 = add %r11_0, 1
5d30: %r10_0 = and %r11_1, 0x0000ff00
5d38: bne %r10_0, 0 -> 0x5d60 v
5d3c: %r12_0 = *(0xe400001c)
5d40: %r10_0 = rotlw_by_8_then_and %r10_0, 0x00ff0000
5d48: %r12_0 = add %r12_0, %r10_0
5d4c: %r12_0 = subf %r12_0, 0x00500000
5d54: %r12_0 = add %r13_0, 0x00000100
5d5c: %r10_0 = add %r11_0, 1
5d60: %r10_0 = and %r11_1, 0x00ff0000
5d68: bne %r10_0, 0 -> 0x5d90 v
5d6c: %r12_0 = *(0xe400001c)
5d70: %r10_0 = rotlw_by_16_then_and %r10_0, 0x000000ff
5d78: %r12_1 = add %r12_1, %r10_0
5d7c: %r12_1 = subf %r12_1, 0x00000050
5d84: %r12_0 = add %r13_0, 0x00010000
5d8c: %r10_0 = add %r11_0, 1
5d90: %r10_0 = and %r11_1, 0xff000000
5d98: bne %r10_0, 0 -> 0x5dc0 v
5d9c: %r12_0 = *(0xe400001c)
5da0: %r10_0 = rotlw_by_24_then_and %r10_0, 0x00ff0000
5da8: %r12_1 = add %r12_1, %r10_0
5dac: %r12_1 = subf %r12_1, 0x00500000
5db4: %r12_0 = add %r13_0, 0x01000000
5dbc: %r10_0 = add %r11_0, 1
5dc0: store_word %r11_0, 0xe4000024
5dc4: return
5dc8: %r10_0 = and %r13_1, 0x000000ff
5dd0: bne %r10_0, 0 -> 0x5de8 v
5dd4: %r10_0 = *(0xe4000018)
5dd8: %r10_0 = and %r10_0, 0x000000ff
5de0: %r12_0 = add %r12_0, %r10_0
5de4: %r12_0 = add %r13_0, 1
5de8: %r10_0 = and %r13_1, 0x0000ff00
5df0: bne %r10_0, 0 -> 0x5e0c v
5df4: %r10_0 = *(0xe4000018)
5df8: %r10_0 = and %r10_0, 0x00ff0000
5e00: %r12_0 = add %r12_0, %r10_0
5e04: %r12_0 = add %r13_0, 0x00000100
5e0c: %r10_0 = and %r13_1, 0x00ff0000
5e14: bne %r10_0, 0 -> 0x5e30 v
5e18: %r10_0 = *(0xe4000018)
5e1c: %r10_0 = and %r10_0, 0x000000ff
5e24: %r12_1 = add %r12_1, %r10_0
5e28: %r12_0 = add %r13_0, 0x00010000
5e30: %r10_0 = and %r13_1, 0xff000000
5e38: bne %r10_0, 0 -> 0x5e54 v
5e3c: %r10_0 = *(0xe4000018)
5e40: %r10_0 = and %r10_0, 0x00ff0000
5e48: %r12_1 = add %r12_1, %r10_0
5e4c: %r12_0 = add %r13_0, 0x01000000
5e54: return
5e58: %r10_0 = and %r11_1, 0x000000ff
5e60: bne %r10_0, 0 -> 0x5e80 v
5e64: %r10_0 = *(0xe4000018)
5e68: %r10_0 = and %r10_0, 0x000000ff
5e70: %r12_0 = add %r12_0, %r10_0
5e74: %r12_0 = subf %r12_0, 0x00000050
5e7c: %r12_0 = add %r13_0, 1
5e80: %r10_0 = and %r11_1, 0x0000ff00
5e88: bne %r10_0, 0 -> 0x5eac v
5e8c: %r10_0 = *(0xe4000018)
5e90: %r10_0 = and %r10_0, 0x00ff0000
5e98: %r12_0 = add %r12_0, %r10_0
5e9c: %r12_0 = subf %r12_0, 0x00500000
5ea4: %r12_0 = add %r13_0, 0x00000100
5eac: %r10_0 = and %r11_1, 0x00ff0000
5eb4: bne %r10_0, 0 -> 0x5ed8 v
5eb8: %r10_0 = *(0xe4000018)
5ebc: %r10_0 = and %r10_0, 0x000000ff
5ec4: %r12_1 = add %r12_1, %r10_0
5ec8: %r12_1 = subf %r12_1, 0x00000050
5ed0: %r12_0 = add %r13_0, 0x00010000
5ed8: %r10_0 = and %r11_1, 0xff000000
5ee0: bne %r10_0, 0 -> 0x5f04 v
5ee4: %r10_0 = *(0xe4000018)
5ee8: %r10_0 = and %r10_0, 0x00ff0000
5ef0: %r12_1 = add %r12_1, %r10_0
5ef4: %r12_1 = subf %r12_1, 0x00500000
5efc: %r12_0 = add %r13_0, 0x01000000
5f04: return
5f08: op_1E %r10_0, -7
5f0c: op_1E 0, -7
5f10: op_1E 0, -7
5f14: op_1E 1, -7
5f18: op_1E 1, -7
5f1c: op_1E 2, -7
5f20: op_1E 2, -7
5f24: op_1E 3, -7
5f28: op_1E 3, -7
5f2c: store_word 0x0012129a, 0xe4000024
5f34: call 0x2bc0
5f38: %r10_0 = load_word -6
5f3c: %r10_1 = and %r10_1, 0x000000ff
5f44: %r10_0 = 0x06060606
5f4c: beq %r10_1, 0 -> 0x5f58 v
5f50: %r10_0 = 0x0a0a0a0a
5f58: store_word_0_100 %r10_0, MC0_RD_STR_DLY_0
5f5c: store_word_0_100 %r10_0, MC0_RD_STR_DLY_1
5f60: %r10_0 = 0x06060606
5f68: beq %r10_1, 0 -> 0x5f74 v
5f6c: %r10_0 = 0x0f0f0f0f
5f74: store_word_0_100 %r10_0, MC0_WR_STR_DLL_0
5f78: store_word_0_100 %r10_0, MC0_WR_STR_DLL_1
5f7c: %r12_0 = *(MC1_WR_STR_DLL_1)
5f80: sync
5f84: delay -7
5f88: jmp 0x4430 ^
5f8c: %r10_0 = load_word -4
5f90: %r11_1 = and %r11_1, 0x0000000f
5f98: bne %r11_1, 0 -> 0x5ffc v
5f9c: %r13_1 = 0x0000000f
5fa4: jmp 0x4280 ^
5fa8: %r10_0 = load_word -4
5fac: %r11_1 = and %r11_1, 0x0000000f
5fb4: bne %r11_1, 0 -> 0x5ffc v
5fb8: %r13_1 = or %r13_1, 0x00000f00
5fc0: jmp 0x42a4 ^
5fc4: %r10_0 = load_word -4
5fc8: %r11_1 = and %r11_1, 0x0000000f
5fd0: bne %r11_1, 0 -> 0x5ffc v
5fd4: %r13_1 = or %r13_1, 0x000f0000
5fdc: jmp 0x42c8 ^
5fe0: %r10_0 = load_word -4
5fe4: %r11_1 = and %r11_1, 0x0000000f
5fec: bne %r11_1, 0 -> 0x5ffc v
5ff0: %r13_1 = or %r13_1, 0x0f000000
5ff8: jmp 0x42ec ^
5ffc: op_1E %r10_0, -7
6000: op_1E 0, -7
6004: op_1E 0, -7
6008: op_1E 1, -7
600c: op_1E 1, -7
6010: op_1E 2, -7
6014: op_1E 2, -7
6018: op_1E 3, -7
601c: op_1E 3, -7
6020: store_word 0x0013139a, 0xe4000024
6028: call 0x2bc0
602c: jmp 0x5f38 ^
6030: store_word 0x00000515, 0xe1020008
6038: %r10_0 = *(0xd0008008)
603c: %r10_0 = and %r10_0, 0x000000ff
6044: beq %r10_0, 0 -> 0x6080 v
6048: store_word 0x00000010, 0xe1060030
6050: %r10_0 = load_word -5
6058: %r10_0 = and %r11_0, 0xffffe3ff
6060: %r10_0 = or %r11_0, 0x00001000
6068: store_word %r11_0, 0xe1060034
6070: %r12_0 = load_word -5
6074: %r10_0 = or %r11_0, 0x08000000
607c: store_word %r11_0, 0xe1040024
6080: return
