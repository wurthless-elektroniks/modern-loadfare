0000: store_word 0xe0000000, 0xd0008010
0008: store_half 2, 0xd0008004
000c: %r12_0 = load_half -7
0010: sync
0014: store_word 0, 0xe0020000
001c: %r10_0 = *(0xe0020000)
0024: sync
0028: store_word 0xc0000000, 0xe0020004
0034: %r10_0 = *(0xe0020004)
003c: sync
0040: store_word 0x00000018, 0xe1020004
0048: %r12_0 = *(0xe1020004)
004c: sync
0050: store_word 0x5f076009, 0xe1010000
0058: %r10_0 = *(0xe1010010)
005c: sync
0060: store_word 0x00004000, 0xe1018020
0068: %r10_0 = *(0xe1018000)
006c: sync
0070: store_word 0xe4000000, 0xd0010010
0078: store_half 2, 0xd0010004
007c: %r12_0 = load_half -7
0080: sync
0084: %r10_1 = 0x20000000
008c: store_word %r10_1, 0xe4000284
0090: %r12_0 = *(0xe4000284)
0094: sync
0098: store_word 0, 0xe4000200
009c: store_word %r10_1, 0xe4000210
00a0: store_word %r10_1, 0xe4000244
00a4: store_word_0_100 0, MC0_CNTL
00a8: store_word 0, 0xe40002a4
00ac: %r12_0 = *(0xe40002a4)
00b0: sync
00b4: store_word 0x00020100, 0xd0000018
00bc: store_word 0xea001000, 0xd0150010
00c8: store_half 2, 0xd0150004
00d0: %r10_0 = load_half -7
00d8: sync
00dc: store_word 0x000001e6, 0xea00101c
00e4: %r10_0 = *(0xea00101c)
00ec: sync
00f0: call 0x0e68
00f4: call 0x0e6c
00f8: store_word %r10_0, 0xe40015e0
00fc: %r10_0 = *(0xe40015e8)
0100: %r10_0 = and %r10_0, -2
0104: %r10_0 = or %r10_0, 1
0108: store_word %r10_0, 0xe40015e8
010c: %r10_0 = *(0xe40015e0)
0110: store_word %r10_0, 0xe40015e0
0114: %r10_0 = *(0xe40015e8)
0118: %r10_0 = and %r10_0, -3
011c: %r10_0 = or %r10_0, 0
0120: store_word %r10_0, 0xe40015e8
0124: %r10_0 = *(0xe40015e0)
0128: store_word %r10_0, 0xe40015e0
012c: %r10_0 = *(0xe40015e8)
0130: %r10_0 = and %r10_0, -2
0134: %r10_0 = or %r10_0, 0
0138: store_word %r10_0, 0xe40015e8
013c: %r10_0 = *(0xe40015e0)
0140: store_word 4, SMC_FIFO_INBOX_CTRL_STATUS
0148: store_word 0x00000012, SMC_FIFO_INBOX_DATA
0150: store_word 0, SMC_FIFO_INBOX_CTRL_STATUS
0158: %r10_0 = *(SMC_FIFO_OUTBOX_CTRL_STATUS)
0160: %r10_1 = and %r10_0, 4
0164: beq %r10_1, 0 -> 0x0158 ^
0168: store_word 4, SMC_FIFO_OUTBOX_CTRL_STATUS
0170: %r10_0 = *(SMC_FIFO_OUTBOX_DATA)
0178: %r10_0 = *(SMC_FIFO_OUTBOX_DATA)
0180: store_word 0, SMC_FIFO_OUTBOX_CTRL_STATUS
0188: %r10_0 = and %r10_0, 0x000000ff
0190: store_word %r10_0, 0xe400002c
0194: call 0x1428
0198: store_word 0, 0xe1020004
019c: store_half 6, 0xd0008004
01a0: %r12_0 = load_half -7
01a4: sync
01a8: delay -7
01ac: store_word 0xff60ffce, 0xe1013100
01b4: store_word 0, 0xe1013000
01b8: store_word 0, 0xe1013200
01bc: store_word 0x001d0031, 0xe1013300
01c4: store_word 0x00000030, 0xe1003100
01cc: store_word 0, 0xe1003000
01d4: store_word 0, 0xe1003200
01dc: store_word 0xe0f7fd00, 0xe1003300
01e8: return
01ec: %r10_1 = 0x001ff306
01f4: store_word %r10_0, 0xe40015e0
01f8: %r12_0 = *(0xe40015ec)
01fc: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
0204: beq %r10_0, 1 -> 0x0210 v
0208: %r10_0 = *(0xe40015e0)
020c: jmp 0x021c v
0210: %r10_0 = *(0xe40015e0)
0214: %r10_1 = 0x001ff306
021c: store_word %r10_0, 0xe40015e0
0220: %r12_0 = *(0xe40015ec)
0224: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
022c: beq %r10_0, 2 -> 0x0238 v
0230: %r10_0 = *(0xe40015e0)
0234: jmp 0x0244 v
0238: %r10_0 = *(0xe40015e0)
023c: %r10_1 = 0x001bb306
0244: store_word %r10_0, 0xe40015e0
0248: %r12_0 = *(0xe40015ec)
024c: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
0254: beq %r10_0, 6 -> 0x0260 v
0258: %r10_0 = *(0xe40015e0)
025c: jmp 0x026c v
0260: %r10_0 = *(0xe40015e0)
0264: %r10_1 = 0x001fa306
026c: return
0270: %r10_1 = 0x06208089
0278: store_word %r10_0, 0xe40015e0
027c: %r12_0 = *(0xe40015ec)
0280: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
0288: beq %r10_0, 1 -> 0x0294 v
028c: %r10_0 = *(0xe40015e0)
0290: jmp 0x02f0 v
0294: %r10_0 = *(0xe40015e0)
0298: %r10_1 = 0x06228089
02a0: store_word %r10_0, 0xe40015e0
02a4: %r12_0 = *(0xe40015ec)
02a8: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
02b0: bne %r10_0, 1 -> 0x02bc v
02b4: %r10_0 = *(0xe40015e0)
02b8: jmp 0x02f0 v
02bc: %r10_0 = *(0xe40015e0)
02c0: %r10_1 = 0x06228089
02c8: store_word %r10_0, 0xe40015e0
02cc: %r12_0 = *(0xe40015ec)
02d0: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
02d8: bne %r10_0, 4 -> 0x02e4 v
02dc: %r10_0 = *(0xe40015e0)
02e0: jmp 0x02f0 v
02e4: %r10_0 = *(0xe40015e0)
02e8: %r10_1 = 0x06208089
02f0: store_word %r10_0, 0xe40015e0
02f4: %r12_0 = *(0xe40015ec)
02f8: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
0300: beq %r10_0, 2 -> 0x030c v
0304: %r10_0 = *(0xe40015e0)
0308: jmp 0x0368 v
030c: %r10_0 = *(0xe40015e0)
0310: %r10_1 = 0x0622808a
0318: store_word %r10_0, 0xe40015e0
031c: %r12_0 = *(0xe40015ec)
0320: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
0328: bne %r10_0, 4 -> 0x0334 v
032c: %r10_0 = *(0xe40015e0)
0330: jmp 0x0368 v
0334: %r10_0 = *(0xe40015e0)
0338: %r10_1 = 0x0622808a
0340: store_word %r10_0, 0xe40015e0
0344: %r12_0 = *(0xe40015ec)
0348: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
0350: bne %r10_0, 5 -> 0x035c v
0354: %r10_0 = *(0xe40015e0)
0358: jmp 0x0368 v
035c: %r10_0 = *(0xe40015e0)
0360: %r10_1 = 0x0620808a
0368: store_word %r10_0, 0xe40015e0
036c: %r12_0 = *(0xe40015ec)
0370: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
0378: beq %r10_0, 6 -> 0x0384 v
037c: %r10_0 = *(0xe40015e0)
0380: jmp 0x03b8 v
0384: %r10_0 = *(0xe40015e0)
0388: %r10_1 = 0x06228089
0390: store_word %r10_0, 0xe40015e0
0394: %r12_0 = *(0xe40015ec)
0398: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
03a0: bne %r10_0, 4 -> 0x03ac v
03a4: %r10_0 = *(0xe40015e0)
03a8: jmp 0x03b8 v
03ac: %r10_0 = *(0xe40015e0)
03b0: %r10_1 = 0x06208089
03b8: store_word %r10_0, 0xe40015e0
03bc: %r10_0 = *(0xe40015e8)
03c0: %r10_0 = rotlw_by_28_then_and %r10_0, 1
03c4: bne %r10_0, 1 -> 0x03d0 v
03c8: %r10_0 = *(0xe40015e0)
03cc: jmp 0x03fc v
03d0: %r10_0 = *(0xe40015e0)
03d4: %r10_1 = or %r10_1, 4
03d8: store_word %r10_0, 0xe40015e0
03dc: %r10_0 = *(0xe40015e8)
03e0: %r10_0 = rotlw_by_29_then_and %r10_0, 1
03e4: bne %r10_0, 0 -> 0x03f0 v
03e8: %r10_0 = *(0xe40015e0)
03ec: jmp 0x03fc v
03f0: %r10_0 = *(0xe40015e0)
03f4: %r10_1 = and %r10_1, 0xfffdffff
03fc: return
0400: %r10_1 = 0x06208009
0408: store_word %r10_0, 0xe40015e0
040c: %r12_0 = *(0xe40015ec)
0410: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
0418: beq %r10_0, 1 -> 0x0424 v
041c: %r10_0 = *(0xe40015e0)
0420: jmp 0x0480 v
0424: %r10_0 = *(0xe40015e0)
0428: %r10_1 = 0x06228009
0430: store_word %r10_0, 0xe40015e0
0434: %r12_0 = *(0xe40015ec)
0438: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
0440: bne %r10_0, 1 -> 0x044c v
0444: %r10_0 = *(0xe40015e0)
0448: jmp 0x0480 v
044c: %r10_0 = *(0xe40015e0)
0450: %r10_1 = 0x06228009
0458: store_word %r10_0, 0xe40015e0
045c: %r12_0 = *(0xe40015ec)
0460: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
0468: bne %r10_0, 4 -> 0x0474 v
046c: %r10_0 = *(0xe40015e0)
0470: jmp 0x0480 v
0474: %r10_0 = *(0xe40015e0)
0478: %r10_1 = 0x06208009
0480: store_word %r10_0, 0xe40015e0
0484: %r12_0 = *(0xe40015ec)
0488: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
0490: beq %r10_0, 2 -> 0x049c v
0494: %r10_0 = *(0xe40015e0)
0498: jmp 0x0520 v
049c: %r10_0 = *(0xe40015e0)
04a0: %r10_1 = 0x06208009
04a8: store_word %r10_0, 0xe40015e0
04ac: %r12_0 = *(0xe40015ec)
04b0: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
04b8: bne %r10_0, 3 -> 0x04c4 v
04bc: %r10_0 = *(0xe40015e0)
04c0: jmp 0x0520 v
04c4: %r10_0 = *(0xe40015e0)
04c8: %r10_1 = 0x06228009
04d0: store_word %r10_0, 0xe40015e0
04d4: %r12_0 = *(0xe40015ec)
04d8: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
04e0: bne %r10_0, 4 -> 0x04ec v
04e4: %r10_0 = *(0xe40015e0)
04e8: jmp 0x0520 v
04ec: %r10_0 = *(0xe40015e0)
04f0: %r10_1 = 0x06228009
04f8: store_word %r10_0, 0xe40015e0
04fc: %r12_0 = *(0xe40015ec)
0500: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
0508: bne %r10_0, 5 -> 0x0514 v
050c: %r10_0 = *(0xe40015e0)
0510: jmp 0x0520 v
0514: %r10_0 = *(0xe40015e0)
0518: %r10_1 = 0x0620800a
0520: store_word %r10_0, 0xe40015e0
0524: %r12_0 = *(0xe40015ec)
0528: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
0530: beq %r10_0, 6 -> 0x053c v
0534: %r10_0 = *(0xe40015e0)
0538: jmp 0x0598 v
053c: %r10_0 = *(0xe40015e0)
0540: %r10_1 = 0x062080b9
0548: store_word %r10_0, 0xe40015e0
054c: %r12_0 = *(0xe40015ec)
0550: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
0558: bne %r10_0, 2 -> 0x0564 v
055c: %r10_0 = *(0xe40015e0)
0560: jmp 0x0598 v
0564: %r10_0 = *(0xe40015e0)
0568: %r10_1 = 0x062280b9
0570: store_word %r10_0, 0xe40015e0
0574: %r12_0 = *(0xe40015ec)
0578: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
0580: bne %r10_0, 4 -> 0x058c v
0584: %r10_0 = *(0xe40015e0)
0588: jmp 0x0598 v
058c: %r10_0 = *(0xe40015e0)
0590: %r10_1 = 0x062080b9
0598: store_word %r10_0, 0xe40015e0
059c: %r10_0 = *(0xe40015e8)
05a0: %r10_0 = rotlw_by_28_then_and %r10_0, 1
05a4: bne %r10_0, 1 -> 0x05b0 v
05a8: %r10_0 = *(0xe40015e0)
05ac: jmp 0x05dc v
05b0: %r10_0 = *(0xe40015e0)
05b4: %r10_1 = or %r10_1, 4
05b8: store_word %r10_0, 0xe40015e0
05bc: %r10_0 = *(0xe40015e8)
05c0: %r10_0 = rotlw_by_29_then_and %r10_0, 1
05c4: bne %r10_0, 0 -> 0x05d0 v
05c8: %r10_0 = *(0xe40015e0)
05cc: jmp 0x05dc v
05d0: %r10_0 = *(0xe40015e0)
05d4: %r10_1 = and %r10_1, 0xfffdffff
05dc: return
05e0: %r10_1 = 0
05e4: store_word %r10_0, 0xe40015e0
05e8: %r12_0 = *(0xe40015ec)
05ec: %r10_0 = rotlw_by_24_then_and %r10_0, 0x0000000f
05f4: bne %r10_0, 1 -> 0x0600 v
05f8: %r10_0 = *(0xe40015e0)
05fc: jmp 0x067c v
0600: %r10_0 = *(0xe40015e0)
0604: store_word %r10_0, 0xe40015e0
0608: %r12_0 = *(0xe40015ec)
060c: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
0614: beq %r10_0, 6 -> 0x0620 v
0618: %r10_0 = *(0xe40015e0)
061c: jmp 0x067c v
0620: %r10_0 = *(0xe40015e0)
0624: %r10_1 = 0x06210001
062c: store_word %r10_0, 0xe40015e0
0630: %r12_0 = *(0xe40015ec)
0634: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
063c: bne %r10_0, 2 -> 0x0648 v
0640: %r10_0 = *(0xe40015e0)
0644: jmp 0x067c v
0648: %r10_0 = *(0xe40015e0)
064c: %r10_1 = 0x06210001
0654: store_word %r10_0, 0xe40015e0
0658: %r12_0 = *(0xe40015ec)
065c: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
0664: bne %r10_0, 4 -> 0x0670 v
0668: %r10_0 = *(0xe40015e0)
066c: jmp 0x067c v
0670: %r10_0 = *(0xe40015e0)
0674: %r10_1 = 0x0621001b
067c: store_word %r10_0, 0xe40015e0
0680: %r12_0 = *(0xe40015ec)
0684: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
068c: beq %r10_0, 1 -> 0x0698 v
0690: %r10_0 = *(0xe40015e0)
0694: jmp 0x06f0 v
0698: %r10_0 = *(0xe40015e0)
069c: %r10_1 = 0x06210000
06a4: store_word %r10_0, 0xe40015e0
06a8: %r12_0 = *(0xe40015ec)
06ac: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
06b4: bne %r10_0, 1 -> 0x06c0 v
06b8: %r10_0 = *(0xe40015e0)
06bc: jmp 0x06f0 v
06c0: %r10_0 = *(0xe40015e0)
06c4: %r10_1 = 0x06210000
06cc: store_word %r10_0, 0xe40015e0
06d0: %r12_0 = *(0xe40015ec)
06d4: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
06dc: bne %r10_0, 4 -> 0x06e8 v
06e0: %r10_0 = *(0xe40015e0)
06e4: jmp 0x06f0 v
06e8: %r10_0 = *(0xe40015e0)
06ec: %r10_1 = 0
06f0: return
06f4: %r10_0 = load_word -3
06f8: %r12_1 = and %r12_0, 0x000000ff
0700: %r12_0 = and %r12_0, 0xffffff00
0708: %r12_1 = mul %r12_1, %r11_1
070c: %r12_0 = and %r10_1, 0x000000ff
0714: %r12_1 = add %r12_1, %r13_0
0718: %r12_1 = and %r12_1, 0x000000ff
0720: %r12_0 = and %r12_1, 0x00000080
0728: beq %r13_0, 0 -> 0x0730 v
072c: %r12_1 = 0
0730: %r12_0 = rotlw_by_0_then_and %r11_0, -1
0734: bge %r12_1, %r13_0 -> 0x073c v
0738: %r12_1 = and %r13_0, -1
073c: %r12_0 = or %r12_0, %r12_1
0740: %r12_1 = and %r12_0, 0x0000ff00
0748: %r12_0 = and %r12_0, 0xffff00ff
0750: %r12_1 = mul %r12_1, %r11_1
0754: %r12_0 = and %r10_1, 0x0000ff00
075c: %r12_1 = add %r12_1, %r13_0
0760: %r12_1 = and %r12_1, 0x0000ff00
0768: %r12_0 = and %r12_1, 0x00008000
0770: beq %r13_0, 0 -> 0x0778 v
0774: %r12_1 = 0
0778: %r12_0 = rotlw_by_8_then_and %r11_0, -1
077c: bge %r12_1, %r13_0 -> 0x0784 v
0780: %r12_1 = and %r13_0, -1
0784: %r12_0 = or %r12_0, %r12_1
0788: %r12_1 = and %r12_0, 0x00ff0000
0790: %r12_0 = and %r12_0, 0xff00ffff
0798: %r12_1 = mul %r12_1, %r11_1
079c: %r12_0 = and %r10_1, 0x00ff0000
07a4: %r12_1 = add %r12_1, %r13_0
07a8: %r12_1 = and %r12_1, 0x00ff0000
07b0: %r12_0 = and %r12_1, 0x00800000
07b8: beq %r13_0, 0 -> 0x07c0 v
07bc: %r12_1 = 0
07c0: %r12_0 = rotlw_by_16_then_and %r11_0, -1
07c4: bge %r12_1, %r13_0 -> 0x07cc v
07c8: %r12_1 = and %r13_0, -1
07cc: %r12_0 = or %r12_0, %r12_1
07d0: %r12_1 = and %r12_0, 0xff000000
07d8: %r12_0 = and %r12_0, 0x00ffffff
07e0: %r12_1 = mul %r12_1, %r11_1
07e4: %r12_0 = and %r10_1, 0xff000000
07ec: %r12_1 = add %r12_1, %r13_0
07f0: %r12_1 = and %r12_1, 0xff000000
07f8: %r12_0 = and %r12_1, 0x80000000
0800: beq %r13_0, 0 -> 0x0808 v
0804: %r12_1 = 0
0808: %r12_0 = rotlw_by_24_then_and %r11_0, -1
080c: bge %r12_1, %r13_0 -> 0x0814 v
0810: %r12_1 = and %r13_0, -1
0814: %r12_0 = or %r12_0, %r12_1
0818: store_word %r12_0, %r10_0
081c: return
0820: store_word %r10_0, 0xe40015e0
0824: %r12_0 = *(0xe40015ec)
0828: %r10_0 = rotlw_by_24_then_and %r10_0, 0x0000000f
0830: beq %r10_0, 1 -> 0x083c v
0834: %r10_0 = *(0xe40015e0)
0838: jmp 0x0958 v
083c: %r10_0 = *(0xe40015e0)
0840: store_word %r10_0, 0xe40015e0
0844: %r12_0 = *(0xe40015ec)
0848: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
0850: beq %r10_0, 1 -> 0x085c v
0854: %r10_0 = *(0xe40015e0)
0858: jmp 0x089c v
085c: %r10_0 = *(0xe40015e0)
0860: beq %r11_0, 0 -> 0x0870 v
0864: beq %r11_0, 1 -> 0x087c v
0868: beq %r11_0, 2 -> 0x0888 v
086c: beq %r11_0, 3 -> 0x0894 v
0870: %r11_1 = 0x001ff306
0878: jmp 0x089c v
087c: %r11_1 = 0x001bb306
0884: jmp 0x089c v
0888: %r11_1 = 0x001fa306
0890: jmp 0x089c v
0894: %r11_1 = 0x0018f306
089c: store_word %r10_0, 0xe40015e0
08a0: %r12_0 = *(0xe40015ec)
08a4: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
08ac: beq %r10_0, 2 -> 0x08b8 v
08b0: %r10_0 = *(0xe40015e0)
08b4: jmp 0x08f8 v
08b8: %r10_0 = *(0xe40015e0)
08bc: beq %r11_0, 0 -> 0x08cc v
08c0: beq %r11_0, 1 -> 0x08d8 v
08c4: beq %r11_0, 2 -> 0x08e4 v
08c8: beq %r11_0, 3 -> 0x08f0 v
08cc: %r11_1 = 0x001ff306
08d4: jmp 0x08f8 v
08d8: %r11_1 = 0x001bb306
08e0: jmp 0x08f8 v
08e4: %r11_1 = 0x001fa306
08ec: jmp 0x08f8 v
08f0: %r11_1 = 0x0018f306
08f8: store_word %r10_0, 0xe40015e0
08fc: %r12_0 = *(0xe40015ec)
0900: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
0908: beq %r10_0, 6 -> 0x0914 v
090c: %r10_0 = *(0xe40015e0)
0910: jmp 0x0954 v
0914: %r10_0 = *(0xe40015e0)
0918: beq %r11_0, 0 -> 0x0928 v
091c: beq %r11_0, 1 -> 0x0934 v
0920: beq %r11_0, 2 -> 0x0940 v
0924: beq %r11_0, 3 -> 0x094c v
0928: %r11_1 = 0x001ff306
0930: jmp 0x0954 v
0934: %r11_1 = 0x001bb306
093c: jmp 0x0954 v
0940: %r11_1 = 0x001fa306
0948: jmp 0x0954 v
094c: %r11_1 = 0x0018f306
0954: jmp 0x0cf0 v
0958: store_word %r10_0, 0xe40015e0
095c: %r12_0 = *(0xe40015ec)
0960: %r10_0 = rotlw_by_24_then_and %r10_0, 0x0000000f
0968: beq %r10_0, 2 -> 0x0974 v
096c: %r10_0 = *(0xe40015e0)
0970: jmp 0x0ce4 v
0974: %r10_0 = *(0xe40015e0)
0978: store_word %r10_0, 0xe40015e0
097c: %r12_0 = *(0xe40015ec)
0980: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
0988: beq %r10_0, 1 -> 0x0994 v
098c: %r10_0 = *(0xe40015e0)
0990: jmp 0x09f4 v
0994: %r10_0 = *(0xe40015e0)
0998: store_word %r10_0, 0xe40015e0
099c: %r12_0 = *(0xe40015ec)
09a0: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
09a8: beq %r10_0, 4 -> 0x09b4 v
09ac: %r10_0 = *(0xe40015e0)
09b0: jmp 0x09f4 v
09b4: %r10_0 = *(0xe40015e0)
09b8: beq %r11_0, 0 -> 0x09c8 v
09bc: beq %r11_0, 1 -> 0x09d4 v
09c0: beq %r11_0, 2 -> 0x09e0 v
09c4: beq %r11_0, 3 -> 0x09ec v
09c8: %r11_1 = 0x000af306
09d0: jmp 0x09f4 v
09d4: %r11_1 = 0x0008f306
09dc: jmp 0x09f4 v
09e0: %r11_1 = 0x0006f306
09e8: jmp 0x09f4 v
09ec: %r11_1 = 0x0004f306
09f4: store_word %r10_0, 0xe40015e0
09f8: %r12_0 = *(0xe40015ec)
09fc: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
0a04: beq %r10_0, 1 -> 0x0a10 v
0a08: %r10_0 = *(0xe40015e0)
0a0c: jmp 0x0a74 v
0a10: %r10_0 = *(0xe40015e0)
0a14: store_word %r10_0, 0xe40015e0
0a18: %r12_0 = *(0xe40015ec)
0a1c: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
0a24: beq %r10_0, 0x00000009 -> 0x0a34 v
0a2c: %r10_0 = *(0xe40015e0)
0a30: jmp 0x0a74 v
0a34: %r10_0 = *(0xe40015e0)
0a38: beq %r11_0, 0 -> 0x0a48 v
0a3c: beq %r11_0, 1 -> 0x0a54 v
0a40: beq %r11_0, 2 -> 0x0a60 v
0a44: beq %r11_0, 3 -> 0x0a6c v
0a48: %r11_1 = 0x000af306
0a50: jmp 0x0a74 v
0a54: %r11_1 = 0x0008f306
0a5c: jmp 0x0a74 v
0a60: %r11_1 = 0x0006f306
0a68: jmp 0x0a74 v
0a6c: %r11_1 = 0x0004f306
0a74: store_word %r10_0, 0xe40015e0
0a78: %r12_0 = *(0xe40015ec)
0a7c: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
0a84: beq %r10_0, 2 -> 0x0a90 v
0a88: %r10_0 = *(0xe40015e0)
0a8c: jmp 0x0af0 v
0a90: %r10_0 = *(0xe40015e0)
0a94: store_word %r10_0, 0xe40015e0
0a98: %r12_0 = *(0xe40015ec)
0a9c: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
0aa4: beq %r10_0, 0 -> 0x0ab0 v
0aa8: %r10_0 = *(0xe40015e0)
0aac: jmp 0x0af0 v
0ab0: %r10_0 = *(0xe40015e0)
0ab4: beq %r11_0, 0 -> 0x0ac4 v
0ab8: beq %r11_0, 1 -> 0x0ad0 v
0abc: beq %r11_0, 2 -> 0x0adc v
0ac0: beq %r11_0, 3 -> 0x0ae8 v
0ac4: %r11_1 = 0x005ff306
0acc: jmp 0x0af0 v
0ad0: %r11_1 = 0x005bb306
0ad8: jmp 0x0af0 v
0adc: %r11_1 = 0x005fa306
0ae4: jmp 0x0af0 v
0ae8: %r11_1 = 0x0058f306
0af0: store_word %r10_0, 0xe40015e0
0af4: %r12_0 = *(0xe40015ec)
0af8: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
0b00: beq %r10_0, 2 -> 0x0b0c v
0b04: %r10_0 = *(0xe40015e0)
0b08: jmp 0x0b6c v
0b0c: %r10_0 = *(0xe40015e0)
0b10: store_word %r10_0, 0xe40015e0
0b14: %r12_0 = *(0xe40015ec)
0b18: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
0b20: beq %r10_0, 3 -> 0x0b2c v
0b24: %r10_0 = *(0xe40015e0)
0b28: jmp 0x0b6c v
0b2c: %r10_0 = *(0xe40015e0)
0b30: beq %r11_0, 0 -> 0x0b40 v
0b34: beq %r11_0, 1 -> 0x0b4c v
0b38: beq %r11_0, 2 -> 0x0b58 v
0b3c: beq %r11_0, 3 -> 0x0b64 v
0b40: %r11_1 = 0x005ff306
0b48: jmp 0x0b6c v
0b4c: %r11_1 = 0x005bb306
0b54: jmp 0x0b6c v
0b58: %r11_1 = 0x005fa306
0b60: jmp 0x0b6c v
0b64: %r11_1 = 0x005f6306
0b6c: store_word %r10_0, 0xe40015e0
0b70: %r12_0 = *(0xe40015ec)
0b74: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
0b7c: beq %r10_0, 2 -> 0x0b88 v
0b80: %r10_0 = *(0xe40015e0)
0b84: jmp 0x0be8 v
0b88: %r10_0 = *(0xe40015e0)
0b8c: store_word %r10_0, 0xe40015e0
0b90: %r12_0 = *(0xe40015ec)
0b94: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
0b9c: beq %r10_0, 4 -> 0x0ba8 v
0ba0: %r10_0 = *(0xe40015e0)
0ba4: jmp 0x0be8 v
0ba8: %r10_0 = *(0xe40015e0)
0bac: beq %r11_0, 0 -> 0x0bbc v
0bb0: beq %r11_0, 1 -> 0x0bc8 v
0bb4: beq %r11_0, 2 -> 0x0bd4 v
0bb8: beq %r11_0, 3 -> 0x0be0 v
0bbc: %r11_1 = 0x005ff306
0bc4: jmp 0x0be8 v
0bc8: %r11_1 = 0x005bb306
0bd0: jmp 0x0be8 v
0bd4: %r11_1 = 0x005fa306
0bdc: jmp 0x0be8 v
0be0: %r11_1 = 0x005f6306
0be8: store_word %r10_0, 0xe40015e0
0bec: %r12_0 = *(0xe40015ec)
0bf0: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
0bf8: beq %r10_0, 6 -> 0x0c04 v
0bfc: %r10_0 = *(0xe40015e0)
0c00: jmp 0x0c64 v
0c04: %r10_0 = *(0xe40015e0)
0c08: store_word %r10_0, 0xe40015e0
0c0c: %r12_0 = *(0xe40015ec)
0c10: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
0c18: beq %r10_0, 1 -> 0x0c24 v
0c1c: %r10_0 = *(0xe40015e0)
0c20: jmp 0x0c64 v
0c24: %r10_0 = *(0xe40015e0)
0c28: beq %r11_0, 0 -> 0x0c38 v
0c2c: beq %r11_0, 1 -> 0x0c44 v
0c30: beq %r11_0, 2 -> 0x0c50 v
0c34: beq %r11_0, 3 -> 0x0c5c v
0c38: %r11_1 = 0x00faf306
0c40: jmp 0x0c64 v
0c44: %r11_1 = 0x00faf306
0c4c: jmp 0x0c64 v
0c50: %r11_1 = 0x00fef306
0c58: jmp 0x0c64 v
0c5c: %r11_1 = 0x00fef306
0c64: store_word %r10_0, 0xe40015e0
0c68: %r12_0 = *(0xe40015ec)
0c6c: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
0c74: beq %r10_0, 6 -> 0x0c80 v
0c78: %r10_0 = *(0xe40015e0)
0c7c: jmp 0x0ce0 v
0c80: %r10_0 = *(0xe40015e0)
0c84: store_word %r10_0, 0xe40015e0
0c88: %r12_0 = *(0xe40015ec)
0c8c: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
0c94: beq %r10_0, 2 -> 0x0ca0 v
0c98: %r10_0 = *(0xe40015e0)
0c9c: jmp 0x0ce0 v
0ca0: %r10_0 = *(0xe40015e0)
0ca4: beq %r11_0, 0 -> 0x0cb4 v
0ca8: beq %r11_0, 1 -> 0x0cc0 v
0cac: beq %r11_0, 2 -> 0x0ccc v
0cb0: beq %r11_0, 3 -> 0x0cd8 v
0cb4: %r11_1 = 0x00faf306
0cbc: jmp 0x0ce0 v
0cc0: %r11_1 = 0x00faf306
0cc8: jmp 0x0ce0 v
0ccc: %r11_1 = 0x00fef306
0cd4: jmp 0x0ce0 v
0cd8: %r11_1 = 0x00fef306
0ce0: jmp 0x0cf0 v
0ce4: delay -7
0cec: jmp 0x0ce4 ^
0cf0: return
0cf4: %r10_0 = 0
0cf8: bne %r10_0, 5 -> 0x0d08 v
0cfc: store_word 0x0015159a, 0xe4000024
0d04: jmp 0x11f0 v
0d08: %r10_0 = add %r10_0, 1
0d0c: store_word_0_100 %r11_1, MC0_PAD_CAL_CNTL
0d10: %r10_0 = load_word -6
0d14: sync
0d18: delay -7
0d1c: %r10_1 = and %r11_1, -7
0d20: store_word_0_100 %r10_1, MC0_PAD_CAL_CNTL
0d24: %r10_0 = load_word -6
0d28: sync
0d2c: delay -7
0d30: store_word 0x00000200, MC0_PAD_CAL_CNTL
0d38: %r10_0 = load_word -6
0d3c: %r10_0 = rotlw_by_20_then_and %r10_1, 0x00f00000
0d44: store_word 0, MC0_PAD_CAL_CNTL
0d48: %r10_0 = load_word -6
0d4c: %r10_1 = rotlw_by_5_then_and %r10_1, 0x00000200
0d54: %r10_0 = or %r11_0, %r10_1
0d58: %r10_0 = load_word -6
0d5c: %r10_1 = xor %r10_1, 0x0000000f
0d64: %r10_1 = rotlw_by_16_then_and %r10_1, 0x000f0000
0d6c: %r10_0 = or %r11_0, %r10_1
0d70: store_word 0x00000100, MC0_PAD_CAL_CNTL
0d78: %r10_0 = load_word -6
0d7c: %r10_1 = rotlw_by_4_then_and %r10_1, 0x00000100
0d84: %r10_0 = or %r11_0, %r10_1
0d88: %r10_0 = load_word -6
0d8c: %r10_1 = rotlw_by_12_then_and %r10_1, 0x0000f000
0d94: %r10_0 = or %r11_0, %r10_1
0d98: %r10_1 = and %r11_1, 0x00fff300
0da0: bne %r10_1, %r11_0 -> 0x0cf8 ^
0da4: store_word 0x00000200, MC1_PAD_CAL_CNTL
0dac: %r10_0 = load_word -6
0db0: %r10_0 = rotlw_by_20_then_and %r10_1, 0x00f00000
0db8: store_word 0, MC1_PAD_CAL_CNTL
0dbc: %r10_0 = load_word -6
0dc0: %r10_1 = rotlw_by_5_then_and %r10_1, 0x00000200
0dc8: %r10_0 = or %r11_0, %r10_1
0dcc: %r10_0 = load_word -6
0dd0: %r10_1 = xor %r10_1, 0x0000000f
0dd8: %r10_1 = rotlw_by_16_then_and %r10_1, 0x000f0000
0de0: %r10_0 = or %r11_0, %r10_1
0de4: store_word 0x00000100, MC1_PAD_CAL_CNTL
0dec: %r10_0 = load_word -6
0df0: %r10_1 = rotlw_by_4_then_and %r10_1, 0x00000100
0df8: %r10_0 = or %r11_0, %r10_1
0dfc: %r10_0 = load_word -6
0e00: %r10_1 = rotlw_by_12_then_and %r10_1, 0x0000f000
0e08: %r10_0 = or %r11_0, %r10_1
0e0c: %r10_1 = and %r11_1, 0x00fff300
0e14: bne %r10_1, %r11_0 -> 0x0cf8 ^
0e18: return
0e1c: %r12_0 = load_word -5
0e20: %r11_1 = rotlw_by_0_then_and %r13_0, 0x000000ff
0e28: blt? %r11_1, %r11_0 -> 0x0e30 v
0e2c: %r10_0 = %r11_1
0e30: %r11_1 = rotlw_by_8_then_and %r13_0, 0x000000ff
0e38: blt? %r11_1, %r11_0 -> 0x0e40 v
0e3c: %r10_0 = %r11_1
0e40: %r11_1 = rotlw_by_16_then_and %r13_0, 0x000000ff
0e48: blt? %r11_1, %r11_0 -> 0x0e50 v
0e4c: %r10_0 = %r11_1
0e50: %r11_1 = rotlw_by_24_then_and %r13_0, 0x000000ff
0e58: blt? %r11_1, %r11_0 -> 0x0e60 v
0e5c: %r10_0 = %r11_1
0e60: store_word %r11_0, 0xe4000024
0e64: return
0e68: return
0e6c: return
0e70: store_word 0x0010109a, 0xe4000024
0e78: call 0x11f0
0e7c: jmp 0x1b88 v
0e80: %r10_0 = *(SMC_FIFO_INBOX_CTRL_STATUS)
0e88: %r10_0 = and %r10_0, 4
0e8c: beq %r10_0, 0 -> 0x0e80 ^
0e90: store_word 4, SMC_FIFO_INBOX_CTRL_STATUS
0e98: store_word %r10_1, SMC_FIFO_INBOX_DATA
0ea0: store_word 0, SMC_FIFO_INBOX_CTRL_STATUS
0ea8: return
0eac: beq %r10_0, 3 -> 0x0f3c v
0eb0: beq %r10_0, 2 -> 0x0f10 v
0eb4: beq %r10_0, 1 -> 0x0ee4 v
0eb8: %r10_1 = 0x000f0199
0ec0: call 0x0e80
0ec4: delay -7
0ecc: %r10_1 = 0x00000099
0ed4: call 0x0e80
0ed8: delay -7
0ee0: return
0ee4: %r10_1 = 0x00010199
0eec: call 0x0e80
0ef0: delay -7
0ef8: %r10_1 = 0x00000099
0f00: call 0x0e80
0f04: delay -7
0f0c: return
0f10: %r10_1 = 0x00030199
0f18: call 0x0e80
0f1c: delay -7
0f24: %r10_1 = 0x00000099
0f2c: call 0x0e80
0f30: delay -7
0f38: return
0f3c: %r10_1 = 0x00070199
0f44: call 0x0e80
0f48: delay -7
0f50: %r10_1 = 0x00000099
0f58: call 0x0e80
0f5c: delay -7
0f64: return
0f68: beq %r10_0, 3 -> 0x0ff8 v
0f6c: beq %r10_0, 2 -> 0x0fcc v
0f70: beq %r10_0, 1 -> 0x0fa0 v
0f74: %r10_1 = 0x00f00199
0f7c: call 0x0e80
0f80: delay -7
0f88: %r10_1 = 0x00000099
0f90: call 0x0e80
0f94: delay -7
0f9c: return
0fa0: %r10_1 = 0x00100199
0fa8: call 0x0e80
0fac: delay -7
0fb4: %r10_1 = 0x00000099
0fbc: call 0x0e80
0fc0: delay -7
0fc8: return
0fcc: %r10_1 = 0x00300199
0fd4: call 0x0e80
0fd8: delay -7
0fe0: %r10_1 = 0x00000099
0fe8: call 0x0e80
0fec: delay -7
0ff4: return
0ff8: %r10_1 = 0x00700199
1000: call 0x0e80
1004: delay -7
100c: %r10_1 = 0x00000099
1014: call 0x0e80
1018: delay -7
1020: return
1024: beq %r10_0, 3 -> 0x10b4 v
1028: beq %r10_0, 2 -> 0x1088 v
102c: beq %r10_0, 1 -> 0x105c v
1030: %r10_1 = 0x00ff0199
1038: call 0x0e80
103c: delay -7
1044: %r10_1 = 0x00000099
104c: call 0x0e80
1050: delay -7
1058: return
105c: %r10_1 = 0x00110199
1064: call 0x0e80
1068: delay -7
1070: %r10_1 = 0x00000099
1078: call 0x0e80
107c: delay -7
1084: return
1088: %r10_1 = 0x00330199
1090: call 0x0e80
1094: delay -7
109c: %r10_1 = 0x00000099
10a4: call 0x0e80
10a8: delay -7
10b0: return
10b4: %r10_1 = 0x00770199
10bc: call 0x0e80
10c0: delay -7
10c8: %r10_1 = 0x00000099
10d0: call 0x0e80
10d4: delay -7
10dc: return
10e0: %r10_1 = 1
10e4: call 0x0e80
10e8: %r10_1 = 0x0000038c
10f0: call 0x0e80
10f4: delay -7
10fc: %r11_1 = 0
1100: %r10_0 = rotlw_by_26_then_and %r11_1, 3
1104: call 0x1024
1108: %r10_0 = rotlw_by_28_then_and %r11_1, 3
110c: call 0x1024
1110: %r10_0 = rotlw_by_30_then_and %r11_1, 3
1114: call 0x1024
1118: %r10_0 = rotlw_by_0_then_and %r11_1, 3
111c: call 0x1024
1120: delay -7
1128: %r11_1 = 0x00000032
1130: %r10_0 = rotlw_by_26_then_and %r11_1, 3
1134: call 0x0f68
1138: %r10_0 = rotlw_by_28_then_and %r11_1, 3
113c: call 0x0f68
1140: %r10_0 = rotlw_by_30_then_and %r11_1, 3
1144: call 0x0f68
1148: %r10_0 = rotlw_by_0_then_and %r11_1, 3
114c: call 0x0f68
1150: delay -7
1158: %r10_1 = 0x0000018c
1160: call 0x0e80
1164: delay -7
116c: return
1170: %r12_0 = load_word -4
1174: call 0x10e0
1178: %r12_0 = load_word -4
117c: %r11_1 = rotlw_by_24_then_and %r11_1, 0x000000ff
1184: %r10_0 = rotlw_by_26_then_and %r11_1, 3
1188: call 0x0eac
118c: %r10_0 = rotlw_by_28_then_and %r11_1, 3
1190: call 0x0eac
1194: %r10_0 = rotlw_by_30_then_and %r11_1, 3
1198: call 0x0eac
119c: %r10_0 = rotlw_by_0_then_and %r11_1, 3
11a0: call 0x0eac
11a4: delay -7
11ac: %r12_0 = load_word -4
11b0: %r10_0 = rotlw_by_26_then_and %r11_1, 3
11b4: call 0x0f68
11b8: %r10_0 = rotlw_by_28_then_and %r11_1, 3
11bc: call 0x0f68
11c0: %r10_0 = rotlw_by_30_then_and %r11_1, 3
11c4: call 0x0f68
11c8: %r10_0 = rotlw_by_0_then_and %r11_1, 3
11cc: call 0x0f68
11d0: delay -7
11d8: jmp 0x1178 ^
11dc: call 0x10e0
11e0: %r10_1 = 0x00ff0199
11e8: call 0x0e80
11ec: jmp 0x11ec ^
11f0: store_word %r10_0, 0xe4000028
11f4: store_word %r10_0, 0xe40015e0
11f8: %r10_0 = *(0xe40015e8)
11fc: %r10_0 = rotlw_by_0_then_and %r10_0, 1
1200: bne %r10_0, 1 -> 0x120c v
1204: %r10_0 = *(0xe40015e0)
1208: jmp 0x123c v
120c: %r10_0 = *(0xe40015e0)
1210: %r10_0 = *(SMC_FIFO_INBOX_CTRL_STATUS)
1218: %r10_0 = and %r10_0, 4
121c: beq %r10_0, 0 -> 0x1210 ^
1220: store_word 4, SMC_FIFO_INBOX_CTRL_STATUS
1228: %r12_0 = *(0xe4000024)
122c: store_word %r10_0, SMC_FIFO_INBOX_DATA
1234: store_word 0, SMC_FIFO_INBOX_CTRL_STATUS
123c: %r10_0 = *(0xe4000028)
1240: return
1244: store_word %r10_0, 0xe40015e0
1248: %r10_0 = *(0xe40015e8)
124c: %r10_0 = rotlw_by_28_then_and %r10_0, 1
1250: bne %r10_0, 0 -> 0x125c v
1254: %r10_0 = *(0xe40015e0)
1258: jmp 0x1274 v
125c: %r10_0 = *(0xe40015e0)
1260: %r10_0 = rotlw_by_28_then_and %r11_1, 0x0000000f
1268: %r11_1 = or %r11_1, %r10_0
126c: %r11_1 = and %r11_1, 0x0000000f
1274: return
1278: %r11_1 = rotlw_by_31_then_and %r11_1, 0x0000007f
1280: bne %r10_0, %r10_1 -> 0x1288 v
1284: return
1288: %r11_1 = or %r11_1, 0x00000080
1290: return
1294: %r11_1 = rotlw_by_31_then_and %r11_1, 7
1298: %r10_0 = rotlw_by_0_then_and %r13_0, 0x000000ff
12a0: beq %r10_0, 0 -> 0x12cc v
12a4: %r10_0 = rotlw_by_24_then_and %r13_0, 0x000000ff
12ac: beq %r10_0, 0 -> 0x12cc v
12b0: %r10_0 = rotlw_by_16_then_and %r13_0, 0x000000ff
12b8: beq %r10_0, 0 -> 0x12cc v
12bc: %r10_0 = rotlw_by_8_then_and %r13_0, 0x000000ff
12c4: beq %r10_0, 0 -> 0x12cc v
12c8: return
12cc: %r11_1 = or %r11_1, 0x00000008
12d4: return
12d8: %r10_1 = 0
12dc: %r10_0 = and %r12_0, 0x000000ff
12e4: bne %r10_0, 0 -> 0x12ec v
12e8: %r10_1 = or %r10_1, 1
12ec: %r10_0 = and %r12_0, 0x0000ff00
12f4: bne %r10_0, 0 -> 0x12fc v
12f8: %r10_1 = or %r10_1, 2
12fc: %r10_0 = and %r12_0, 0x00ff0000
1304: bne %r10_0, 0 -> 0x130c v
1308: %r10_1 = or %r10_1, 4
130c: %r10_0 = and %r12_0, 0xff000000
1314: bne %r10_0, 0 -> 0x1320 v
1318: %r10_1 = or %r10_1, 0x00000008
1320: %r10_0 = and %r12_1, 0x000000ff
1328: bne %r10_0, 0 -> 0x1330 v
132c: %r10_1 = or %r10_1, 1
1330: %r10_0 = and %r12_1, 0x0000ff00
1338: bne %r10_0, 0 -> 0x1340 v
133c: %r10_1 = or %r10_1, 2
1340: %r10_0 = and %r12_1, 0x00ff0000
1348: bne %r10_0, 0 -> 0x1350 v
134c: %r10_1 = or %r10_1, 4
1350: %r10_0 = and %r12_1, 0xff000000
1358: bne %r10_0, 0 -> 0x1364 v
135c: %r10_1 = or %r10_1, 0x00000008
1364: return
1368: %r12_0 = 0
136c: %r10_0 = and %r13_1, 0x0000000f
1374: beq %r10_0, 0x0000000f -> 0x1380 v
137c: %r12_0 = or %r12_0, 1
1380: %r10_0 = and %r13_1, 0x000000f0
1388: beq %r10_0, 0x000000f0 -> 0x1394 v
1390: %r12_0 = or %r12_0, 2
1394: %r10_0 = and %r13_1, 0x00000f00
139c: beq %r10_0, 0x00000f00 -> 0x13a8 v
13a4: %r12_0 = or %r12_0, 4
13a8: %r10_0 = and %r13_1, 0x0000f000
13b0: beq %r10_0, 0x0000f000 -> 0x13c0 v
13b8: %r12_0 = or %r12_0, 0x00000008
13c0: %r10_0 = and %r13_1, 0x000f0000
13c8: beq %r10_0, 0x000f0000 -> 0x13d8 v
13d0: %r12_0 = or %r12_0, 0x00000010
13d8: %r10_0 = and %r13_1, 0x00f00000
13e0: beq %r10_0, 0x00f00000 -> 0x13f0 v
13e8: %r12_0 = or %r12_0, 0x00000020
13f0: %r10_0 = and %r13_1, 0x0f000000
13f8: beq %r10_0, 0x0f000000 -> 0x1408 v
1400: %r12_0 = or %r12_0, 0x00000040
1408: %r10_0 = and %r13_1, 0xf0000000
1410: beq %r10_0, 0xf0000000 -> 0x1420 v
1418: %r12_0 = or %r12_0, 0x00000080
1420: return
1424: return
1428: store_word 0x20000000, 0xe1020000
1430: store_word 0x20000000, 0xe1040000
1438: store_word 0, 0xe4002800
143c: store_word 0x08000000, 0xe4002804
1444: %r12_0 = load_word -4
1448: %r11_1 = rotlw_by_28_then_and %r11_1, 7
144c: bne %r11_1, 5 -> 0x1458 v
1450: %r10_1 = 0x20003021
1458: bne %r11_1, 6 -> 0x1464 v
145c: %r10_1 = 0x20001011
1464: bne %r11_1, 7 -> 0x1470 v
1468: %r10_1 = 0x20003025
1470: bne %r11_1, 0 -> 0x147c v
1474: %r10_1 = 0x20000009
147c: bne %r11_1, 1 -> 0x1488 v
1480: %r10_1 = 0x20003029
1488: bne %r11_1, 2 -> 0x1494 v
148c: %r10_1 = 0x20001015
1494: bne %r11_1, 3 -> 0x14a0 v
1498: %r10_1 = 0x2000302d
14a0: bne %r11_1, 4 -> 0x14ac v
14a4: %r10_1 = 0x2000000b
14ac: store_word %r10_1, 0xe4000210
14b0: %r10_1 = or %r10_1, 0x000c0000
14b8: store_word %r10_1, 0xe4000210
14bc: %r10_0 = *(0xe4000210)
14c0: sync
14c4: delay -7
14c8: %r10_1 = and %r10_1, 0xdff3ffff
14d0: store_word %r10_1, 0xe4000210
14d4: store_word 0x00000200, 0xe4000200
14dc: store_word %r10_1, 0xe4000284
14e0: %r10_1 = or %r10_1, 0x000c0000
14e8: store_word %r10_1, 0xe4000284
14ec: %r12_0 = *(0xe4000284)
14f0: sync
14f4: delay -7
14f8: %r10_1 = and %r10_1, 0xdff3ffff
1500: store_word %r10_1, 0xe4000284
1504: call 0x433c
1508: %r10_1 = 0x20000013
1510: store_word %r10_1, 0xe4000244
1514: %r10_1 = or %r10_1, 0x000c0000
151c: store_word %r10_1, 0xe4000244
1520: %r12_0 = *(0xe4000244)
1524: sync
1528: delay -7
152c: %r10_1 = and %r10_1, 0xdff3ffff
1534: store_word %r10_1, 0xe4000244
1538: store_word 0, 0xe40001a8
153c: %r10_0 = *(0xd0008000)
1540: %r10_0 = rotlw_by_16_then_and %r10_0, 0x0000ffff
1548: %r10_1 = rotlw_by_28_then_and %r10_0, 0x0000000f
1550: store_word %r10_0, 0xe40015e0
1554: store_word %r10_1, 0xe40015e4
1558: %r10_1 = and %r10_1, 0x0000000f
1560: %r12_0 = *(0xe40015ec)
1564: %r10_0 = rotlw_by_24_then_and %r10_0, 0xfffffff0
156c: %r10_0 = or %r10_0, %r10_1
1570: %r10_0 = rotlw_by_8_then_and %r10_0, -1
1574: store_word %r10_0, 0xe40015ec
1578: %r10_0 = *(0xe40015e0)
157c: %r12_0 = load_word -6
1580: %r10_0 = *(0xd0008008)
1584: %r10_0 = and %r10_0, 0x000000ff
158c: store_word %r10_0, 0xe40015e0
1590: %r12_0 = *(0xe40015ec)
1594: %r10_0 = rotlw_by_24_then_and %r10_0, 0x0000000f
159c: bne %r10_0, 1 -> 0x15a8 v
15a0: %r10_0 = *(0xe40015e0)
15a4: jmp 0x15f0 v
15a8: %r10_0 = *(0xe40015e0)
15ac: store_word %r10_0, 0xe40015e0
15b0: %r12_0 = *(0xe40015ec)
15b4: %r10_0 = rotlw_by_24_then_and %r10_0, 0x0000000f
15bc: bne %r10_0, 2 -> 0x15c8 v
15c0: %r10_0 = *(0xe40015e0)
15c4: jmp 0x15f0 v
15c8: %r10_0 = *(0xe40015e0)
15cc: store_word %r10_0, 0xe40015e0
15d0: %r12_0 = *(0xe40015ec)
15d4: %r10_0 = rotlw_by_24_then_and %r10_0, 0x0000000f
15dc: bne %r10_0, 3 -> 0x15e8 v
15e0: %r10_0 = *(0xe40015e0)
15e4: jmp 0x15f0 v
15e8: %r10_0 = *(0xe40015e0)
15ec: jmp 0x15ec ^
15f0: store_word %r10_0, 0xe40015e0
15f4: %r12_0 = *(0xe40015ec)
15f8: %r10_0 = rotlw_by_24_then_and %r10_0, 0x0000000f
1600: beq %r10_0, 2 -> 0x160c v
1604: %r10_0 = *(0xe40015e0)
1608: jmp 0x164c v
160c: %r10_0 = *(0xe40015e0)
1610: store_word 0x0000000e, 0xe1016100
1618: delay -7
161c: sync
1620: store_word 0x00000009, 0xe1016000
1628: %r10_0 = *(0xe1016000)
162c: sync
1630: store_word 0x00000401, 0xe1016100
1638: delay -7
163c: sync
1640: store_word 3, 0xe1016000
1644: %r10_0 = *(0xe1016000)
1648: sync
164c: store_word %r10_0, 0xe40015e0
1650: %r12_0 = *(0xe40015ec)
1654: %r10_0 = rotlw_by_24_then_and %r10_0, 0x0000000f
165c: beq %r10_0, 3 -> 0x1668 v
1660: %r10_0 = *(0xe40015e0)
1664: jmp 0x16d0 v
1668: %r10_0 = *(0xe40015e0)
166c: %r10_0 = load_word -6
1670: %r10_1 = and %r10_1, 0xffefffff
1678: store_word %r10_1, 0xe4000248
167c: store_word 4, 0xe1016100
1680: delay -7
1684: sync
1688: store_word 4, 0xe1016000
168c: %r10_0 = *(0xe1016000)
1690: sync
1694: store_word 0x00001027, 0xe1016000
169c: %r10_0 = *(0xe1016000)
16a0: sync
16a4: %r10_0 = *(0xe1016200)
16a8: sync
16ac: %r10_0 = and %r10_0, 0xbfffffff
16b4: store_word %r10_0, 0xe1016100
16b8: delay -7
16bc: sync
16c0: store_word 0x00000027, 0xe1016000
16c8: %r10_0 = *(0xe1016000)
16cc: sync
16d0: store_word 0x00024024, 0xe40002a0
16d8: store_word 0x00024024, 0xe40002a8
16e0: store_word_0_100 0x00000342, MC0_PAD_IF_CNTL
16e8: %r10_0 = 0
16ec: store_word %r10_0, 0xe40015e0
16f0: %r12_0 = *(0xe40015ec)
16f4: %r10_0 = rotlw_by_24_then_and %r10_0, 0x0000000f
16fc: beq %r10_0, 3 -> 0x1708 v
1700: %r10_0 = *(0xe40015e0)
1704: jmp 0x1714 v
1708: %r10_0 = *(0xe40015e0)
170c: %r10_0 = 0x11111111
1714: store_word_0_100 %r10_0, MC0_PAD_IF_CNTL_2
1718: %r10_0 = 0x50505050
1720: store_word_0_100 %r10_0, MC0_DLL_MASTER_ADJ_0
1724: store_word_0_100 %r10_0, MC0_DLL_MASTER_ADJ_1
1728: %r10_0 = 0x0a0a0a0a
1730: store_word_0_100 %r10_0, MC0_RD_STR_DLY_0
1734: store_word_0_100 %r10_0, MC0_RD_STR_DLY_1
1738: %r10_0 = 0x0f0f0f0f
1740: store_word_0_100 %r10_0, MC0_WR_STR_DLL_0
1744: store_word_0_100 %r10_0, MC0_WR_STR_DLL_1
1748: %r12_0 = *(MC1_WR_STR_DLL_1)
174c: sync
1750: delay -7
1754: call 0x433c
1758: %r10_0 = 0
175c: %r10_1 = -1
1760: store_word %r10_0, 0xe40015e0
1764: %r12_0 = *(0xe40015ec)
1768: %r10_0 = rotlw_by_24_then_and %r10_0, 0x0000000f
1770: beq %r10_0, 3 -> 0x177c v
1774: %r10_0 = *(0xe40015e0)
1778: jmp 0x1790 v
177c: %r10_0 = *(0xe40015e0)
1780: %r10_0 = 0x00009000
1788: %r10_1 = 0x22222222
1790: store_word_0_100 %r10_0, MC0_TERM_CNTL
1794: store_word_0_100 %r10_1, MC0_WR_STR_DLY
1798: store_word %r10_0, 0xe40015e0
179c: %r12_0 = *(0xe40015ec)
17a0: %r10_0 = rotlw_by_24_then_and %r10_0, 0x0000000f
17a8: bne %r10_0, 3 -> 0x17b4 v
17ac: %r10_0 = *(0xe40015e0)
17b0: jmp 0x17d8 v
17b4: %r10_0 = *(0xe40015e0)
17b8: store_word_0_100 1, MC0_PAD_CAL_CNTL
17bc: %r10_0 = *(MC1_PAD_CAL_CNTL)
17c0: sync
17c4: delay -7
17c8: store_word_0_100 0, MC0_PAD_CAL_CNTL
17cc: %r11_1 = 0x000ff306
17d4: call 0x0cf4
17d8: store_word %r10_0, 0xe40015e0
17dc: %r12_0 = *(0xe40015ec)
17e0: %r10_0 = rotlw_by_24_then_and %r10_0, 0x0000000f
17e8: beq %r10_0, 3 -> 0x17f4 v
17ec: %r10_0 = *(0xe40015e0)
17f0: jmp 0x1804 v
17f4: %r10_0 = *(0xe40015e0)
17f8: store_word_0_100 1, MC0_PAD_CAL_CNTL
17fc: store_word_0_100 0x00000008, MC0_PAD_CAL_CNTL
1804: store_word 0, 0xe40002a4
1808: store_word_0_100 0, MC0_CNTL
180c: store_word_0_100 0, MC0_POINTER
1810: store_word_0_100 0x001c0000, MC0_DRAM_CMD
1818: store_word_0_100 2, MC0_CNTL
181c: %r10_0 = *(MC1_CNTL)
1820: sync
1824: delay -7
1828: %r10_0 = 0x00000019
1830: store_word %r10_0, 0xe40015e0
1834: %r12_0 = *(0xe40015ec)
1838: %r10_0 = rotlw_by_24_then_and %r10_0, 0x0000000f
1840: beq %r10_0, 3 -> 0x184c v
1844: %r10_0 = *(0xe40015e0)
1848: jmp 0x1854 v
184c: %r10_0 = *(0xe40015e0)
1850: %r10_0 = 1
1854: store_word %r10_0, 0xe40002a4
1858: %r12_0 = *(0xe40002a4)
185c: sync
1860: delay -7
1864: store_word_0_100 0, MC0_POINTER
1868: store_word_0_100 0x423c0000, MC0_DRAM_CMD
1870: store_word_0_100 0x0a280100, MC0_DRAM_CMD
1878: store_word_0_100 0x06200221, MC0_DRAM_CMD
1880: store_word_0_100 0x0620808d, MC0_DRAM_CMD
1888: store_word_0_100 0x06200772, MC0_DRAM_CMD
1890: store_word_0_100 2, MC0_CNTL
1894: %r10_0 = *(MC1_CNTL)
1898: sync
189c: delay -7
18a0: store_word_0_100 0, MC0_POINTER
18a4: store_word_0_100 0x0a280100, MC0_DRAM_CMD
18ac: store_word_0_100 0x2f240000, MC0_DRAM_CMD
18b4: store_word_0_100 0x2f240000, MC0_DRAM_CMD
18bc: store_word_0_100 0x0620c48d, MC0_DRAM_CMD
18c4: store_word_0_100 2, MC0_CNTL
18c8: %r10_0 = *(MC1_CNTL)
18cc: sync
18d0: %r12_0 = load_word -3
18d4: %r12_0 = load_word -2
18d8: store_word_0_100 0, MC0_POINTER
18dc: store_word_0_100 0x0620c08d, MC0_DRAM_CMD
18e4: store_word_0_100 2, MC0_CNTL
18e8: store_word_0_100 0, MC0_POINTER
18ec: store_word_0_100 0x0620a48d, MC0_DRAM_CMD
18f4: store_word_0_100 2, MC0_CNTL
18f8: %r10_0 = *(MC1_CNTL)
18fc: sync
1900: %r12_0 = load_word -1
1904: %r12_0 = load_word 0
1908: store_word_0_100 0, MC0_POINTER
190c: store_word_0_100 0x0620a08d, MC0_DRAM_CMD
1914: store_word_0_100 2, MC0_CNTL
1918: %r10_1 = rotlw_by_0_then_and %r12_0, 0x000000ff
1920: %r10_0 = %r10_1
1924: call 0x1278
1928: %r10_1 = rotlw_by_16_then_and %r12_0, 0x000000ff
1930: call 0x1278
1934: %r10_1 = rotlw_by_0_then_and %r12_1, 0x000000ff
193c: call 0x1278
1940: %r10_1 = rotlw_by_16_then_and %r12_1, 0x000000ff
1948: call 0x1278
194c: store_word %r10_0, 0xe40015e0
1950: %r10_0 = *(0xe40015e8)
1954: %r10_0 = and %r10_0, 0xffffffef
195c: %r10_0 = or %r10_0, 0
1960: store_word %r10_0, 0xe40015e8
1964: %r10_0 = *(0xe40015e0)
1968: %r10_1 = rotlw_by_24_then_and %r13_0, 0x000000ff
1970: bne %r10_1, 0x000000ff -> 0x19a0 v
1978: store_word %r10_0, 0xe40015e0
197c: %r10_0 = *(0xe40015e8)
1980: %r10_0 = and %r10_0, 0xffffffef
1988: %r10_0 = or %r10_0, 0x00000010
1990: store_word %r10_0, 0xe40015e8
1994: %r10_0 = *(0xe40015e0)
1998: %r10_0 = 0x000000ff
19a0: %r10_1 = rotlw_by_24_then_and %r13_0, 0x000000ff
19a8: call 0x1278
19ac: %r10_1 = rotlw_by_8_then_and %r13_0, 0x000000ff
19b4: call 0x1278
19b8: %r10_1 = rotlw_by_24_then_and %r13_1, 0x000000ff
19c0: call 0x1278
19c4: %r10_1 = rotlw_by_8_then_and %r13_1, 0x000000ff
19cc: call 0x1278
19d0: bne %r11_1, 0 -> 0x0e70 ^
19d4: %r10_1 = rotlw_by_28_then_and %r12_0, 0x0000000f
19dc: store_word %r10_0, 0xe40015e0
19e0: store_word %r10_1, 0xe40015e4
19e4: %r10_1 = and %r10_1, 0x0000000f
19ec: %r12_0 = *(0xe40015ec)
19f0: %r10_0 = rotlw_by_28_then_and %r10_0, 0xfffffff0
19f8: %r10_0 = or %r10_0, %r10_1
19fc: %r10_0 = rotlw_by_4_then_and %r10_0, -1
1a00: store_word %r10_0, 0xe40015ec
1a04: %r10_0 = *(0xe40015e0)
1a08: %r12_0 = load_word -6
1a0c: %r10_1 = and %r12_0, 0x0000000f
1a14: store_word %r10_0, 0xe40015e0
1a18: %r10_0 = *(0xe40015e8)
1a1c: %r10_0 = and %r10_0, 0xfffffff7
1a24: %r10_0 = or %r10_0, 0x00000008
1a2c: store_word %r10_0, 0xe40015e8
1a30: %r10_0 = *(0xe40015e0)
1a34: bne %r10_1, 1 -> 0x1ab0 v
1a38: store_word %r10_0, 0xe40015e0
1a3c: %r12_0 = *(0xe40015ec)
1a40: %r10_0 = and %r10_0, 0xfffffff0
1a48: %r10_0 = or %r10_0, 1
1a4c: store_word %r10_0, 0xe40015ec
1a50: %r10_0 = *(0xe40015e0)
1a54: store_word %r10_0, 0xe40015e0
1a58: %r12_0 = *(0xe40015ec)
1a5c: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
1a64: bne %r10_0, 1 -> 0x1a70 v
1a68: %r10_0 = *(0xe40015e0)
1a6c: jmp 0x1ab0 v
1a70: %r10_0 = *(0xe40015e0)
1a74: store_word %r10_0, 0xe40015e0
1a78: %r12_0 = *(0xe40015ec)
1a7c: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
1a84: bne %r10_0, 4 -> 0x1a90 v
1a88: %r10_0 = *(0xe40015e0)
1a8c: jmp 0x1ab0 v
1a90: %r10_0 = *(0xe40015e0)
1a94: store_word %r10_0, 0xe40015e0
1a98: %r10_0 = *(0xe40015e8)
1a9c: %r10_0 = and %r10_0, 0xfffffff7
1aa4: %r10_0 = or %r10_0, 0
1aa8: store_word %r10_0, 0xe40015e8
1aac: %r10_0 = *(0xe40015e0)
1ab0: bne %r10_1, 2 -> 0x1b2c v
1ab4: store_word %r10_0, 0xe40015e0
1ab8: %r12_0 = *(0xe40015ec)
1abc: %r10_0 = and %r10_0, 0xfffffff0
1ac4: %r10_0 = or %r10_0, 2
1ac8: store_word %r10_0, 0xe40015ec
1acc: %r10_0 = *(0xe40015e0)
1ad0: store_word %r10_0, 0xe40015e0
1ad4: %r12_0 = *(0xe40015ec)
1ad8: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
1ae0: bne %r10_0, 4 -> 0x1aec v
1ae4: %r10_0 = *(0xe40015e0)
1ae8: jmp 0x1b2c v
1aec: %r10_0 = *(0xe40015e0)
1af0: store_word %r10_0, 0xe40015e0
1af4: %r12_0 = *(0xe40015ec)
1af8: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
1b00: bne %r10_0, 5 -> 0x1b0c v
1b04: %r10_0 = *(0xe40015e0)
1b08: jmp 0x1b2c v
1b0c: %r10_0 = *(0xe40015e0)
1b10: store_word %r10_0, 0xe40015e0
1b14: %r10_0 = *(0xe40015e8)
1b18: %r10_0 = and %r10_0, 0xfffffff7
1b20: %r10_0 = or %r10_0, 0
1b24: store_word %r10_0, 0xe40015e8
1b28: %r10_0 = *(0xe40015e0)
1b2c: bne %r10_1, 6 -> 0x1b88 v
1b30: store_word %r10_0, 0xe40015e0
1b34: %r12_0 = *(0xe40015ec)
1b38: %r10_0 = and %r10_0, 0xfffffff0
1b40: %r10_0 = or %r10_0, 6
1b44: store_word %r10_0, 0xe40015ec
1b48: %r10_0 = *(0xe40015e0)
1b4c: store_word %r10_0, 0xe40015e0
1b50: %r12_0 = *(0xe40015ec)
1b54: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
1b5c: bne %r10_0, 4 -> 0x1b68 v
1b60: %r10_0 = *(0xe40015e0)
1b64: jmp 0x1b88 v
1b68: %r10_0 = *(0xe40015e0)
1b6c: store_word %r10_0, 0xe40015e0
1b70: %r10_0 = *(0xe40015e8)
1b74: %r10_0 = and %r10_0, 0xfffffff7
1b7c: %r10_0 = or %r10_0, 0
1b80: store_word %r10_0, 0xe40015e8
1b84: %r10_0 = *(0xe40015e0)
1b88: store_word %r10_0, 0xe40015e0
1b8c: %r10_0 = *(0xe40015e8)
1b90: %r10_0 = and %r10_0, -5
1b94: %r10_0 = or %r10_0, 0
1b98: store_word %r10_0, 0xe40015e8
1b9c: %r10_0 = *(0xe40015e0)
1ba0: store_word %r10_0, 0xe40015e0
1ba4: %r10_0 = *(0xe40015e8)
1ba8: %r10_0 = rotlw_by_29_then_and %r10_0, 1
1bac: bne %r10_0, 1 -> 0x1bb8 v
1bb0: %r10_0 = *(0xe40015e0)
1bb4: jmp 0x1bf0 v
1bb8: %r10_0 = *(0xe40015e0)
1bbc: store_word %r10_0, 0xe40015e0
1bc0: %r10_0 = *(0xe40015e8)
1bc4: %r10_0 = rotlw_by_28_then_and %r10_0, 1
1bc8: bne %r10_0, 0 -> 0x1bd4 v
1bcc: %r10_0 = *(0xe40015e0)
1bd0: jmp 0x1bf0 v
1bd4: %r10_0 = *(0xe40015e0)
1bd8: store_word %r10_0, 0xe40015e0
1bdc: %r10_0 = *(0xe40015e8)
1be0: %r10_0 = and %r10_0, -5
1be4: %r10_0 = or %r10_0, 4
1be8: store_word %r10_0, 0xe40015e8
1bec: %r10_0 = *(0xe40015e0)
1bf0: %r10_0 = 0x10000000
1bf8: store_word %r10_0, 0xe40015e0
1bfc: %r10_0 = *(0xe40015e8)
1c00: %r10_0 = rotlw_by_28_then_and %r10_0, 1
1c04: bne %r10_0, 1 -> 0x1c10 v
1c08: %r10_0 = *(0xe40015e0)
1c0c: jmp 0x1c18 v
1c10: %r10_0 = *(0xe40015e0)
1c14: %r10_0 = rotlw_by_1_then_and %r11_0, -2
1c18: store_word %r10_0, 0xe40015e0
1c1c: %r10_0 = *(0xe40015e8)
1c20: %r10_0 = rotlw_by_29_then_and %r10_0, 1
1c24: bne %r10_0, 0 -> 0x1c30 v
1c28: %r10_0 = *(0xe40015e0)
1c2c: jmp 0x1c38 v
1c30: %r10_0 = *(0xe40015e0)
1c34: %r10_0 = rotlw_by_1_then_and %r11_0, -2
1c38: %r10_1 = 0
1c3c: store_word %r10_0, 0xe40015e0
1c40: %r12_0 = *(0xe40015ec)
1c44: %r10_0 = rotlw_by_24_then_and %r10_0, 0x0000000f
1c4c: bne %r10_0, 3 -> 0x1c58 v
1c50: %r10_0 = *(0xe40015e0)
1c54: jmp 0x1c9c v
1c58: %r10_0 = *(0xe40015e0)
1c5c: store_word %r10_0, 0xe40015e0
1c60: %r10_0 = *(0xe40015e8)
1c64: %r10_0 = rotlw_by_29_then_and %r10_0, 1
1c68: bne %r10_0, 1 -> 0x1c74 v
1c6c: %r10_0 = *(0xe40015e0)
1c70: jmp 0x1c9c v
1c74: %r10_0 = *(0xe40015e0)
1c78: store_word %r10_0, 0xe40015e0
1c7c: %r10_0 = *(0xe40015e8)
1c80: %r10_0 = rotlw_by_28_then_and %r10_0, 1
1c84: bne %r10_0, 0 -> 0x1c90 v
1c88: %r10_0 = *(0xe40015e0)
1c8c: jmp 0x1c9c v
1c90: %r10_0 = *(0xe40015e0)
1c94: %r10_1 = 0x00000018
1c9c: %r12_0 = load_word -4
1ca0: %r11_1 = and %r11_1, 0xffffffe7
1ca8: %r11_1 = or %r11_1, %r10_1
1cac: store_word %r11_1, 0xe40002a4
1cb0: store_word %r11_0, 0xe1020000
1cb4: store_word %r11_0, 0xe1040000
1cb8: store_word %r10_0, 0xe40015e0
1cbc: %r12_0 = *(0xe40015ec)
1cc0: %r10_0 = rotlw_by_24_then_and %r10_0, 0x0000000f
1cc8: bne %r10_0, 3 -> 0x1cd4 v
1ccc: %r10_0 = *(0xe40015e0)
1cd0: jmp 0x1ce8 v
1cd4: %r10_0 = *(0xe40015e0)
1cd8: call 0x01ec
1cdc: %r11_1 = %r10_1
1ce0: call 0x0cf4
1ce4: %r10_1 = %r11_1
1ce8: %r12_0 = load_word -6
1cec: %r10_1 = and %r10_1, -2
1cf0: store_word %r10_1, 0xe40002a4
1cf4: store_word_0_100 0, MC0_POINTER
1cf8: store_word_0_100 0x001c0000, MC0_DRAM_CMD
1d00: store_word_0_100 2, MC0_CNTL
1d04: %r10_0 = *(MC1_CNTL)
1d08: sync
1d0c: delay -7
1d10: %r10_1 = or %r10_1, 1
1d14: store_word %r10_1, 0xe40002a4
1d18: %r12_0 = *(0xe40002a4)
1d1c: sync
1d20: delay -7
1d24: %r10_1 = 0x040e3202
1d2c: store_word %r10_0, 0xe40015e0
1d30: %r10_0 = *(0xe40015e8)
1d34: %r10_0 = rotlw_by_30_then_and %r10_0, 1
1d38: bne %r10_0, 1 -> 0x1d44 v
1d3c: %r10_0 = *(0xe40015e0)
1d40: jmp 0x1d94 v
1d44: %r10_0 = *(0xe40015e0)
1d48: %r10_1 = or %r10_1, 1
1d4c: store_word %r10_0, 0xe40015e0
1d50: %r10_0 = *(0xe40015e8)
1d54: %r10_0 = rotlw_by_29_then_and %r10_0, 1
1d58: bne %r10_0, 0 -> 0x1d64 v
1d5c: %r10_0 = *(0xe40015e0)
1d60: jmp 0x1d94 v
1d64: %r10_0 = *(0xe40015e0)
1d68: store_word %r10_0, 0xe40015e0
1d6c: %r10_0 = *(0xe40015e8)
1d70: %r10_0 = rotlw_by_28_then_and %r10_0, 1
1d74: bne %r10_0, 1 -> 0x1d80 v
1d78: %r10_0 = *(0xe40015e0)
1d7c: jmp 0x1d94 v
1d80: %r10_0 = *(0xe40015e0)
1d84: %r10_1 = or %r10_1, 0x08000080
1d8c: %r10_1 = and %r10_1, 0xfbffffff
1d94: store_word_0_100 %r10_1, MC0_DRAM_CONFIG
1d98: store_word_0_100 0x00000080, MC0_BSB_SNOOPED_TIMER_CNTL
1da0: store_word_0_100 0x00348084, MC0_TUNING_0
1da8: store_word_0_100 0x0000007a, MC0_TUNING_1
1db0: store_word_0_100 0x00106514, MC0_RD_BUFFER_CNTL_0
1db8: store_word_0_100 0x00210414, MC0_RD_BUFFER_CNTL_1
1dc0: store_word_0_100 0x01283446, MC0_TIMING_CNTL_0
1dc8: store_word_0_100 0x03620991, MC0_TIMING_CNTL_1
1dd0: store_word_0_100 0x0c958107, MC0_TIMING_CNTL_2
1dd8: store_word_0_100 0x00000018, MC0_WR_DATA_DLY_0
1de0: store_word %r10_0, 0xe40015e0
1de4: %r12_0 = *(0xe40015ec)
1de8: %r10_0 = rotlw_by_24_then_and %r10_0, 0x0000000f
1df0: beq %r10_0, 3 -> 0x1dfc v
1df4: %r10_0 = *(0xe40015e0)
1df8: jmp 0x1e18 v
1dfc: %r10_0 = *(0xe40015e0)
1e00: delay -7
1e04: store_word 0x00000100, 0xe40000f0
1e0c: delay -7
1e10: store_word 0, 0xe40000f0
1e14: delay -7
1e18: store_word_0_100 0x00000030, MC0_INTERRUPT_MASK
1e20: store_word %r10_0, 0xe40015e0
1e24: %r12_0 = *(0xe40015ec)
1e28: %r10_0 = rotlw_by_24_then_and %r10_0, 0x0000000f
1e30: beq %r10_0, 3 -> 0x1e3c v
1e34: %r10_0 = *(0xe40015e0)
1e38: jmp 0x1e44 v
1e3c: %r10_0 = *(0xe40015e0)
1e40: call 0x433c
1e44: store_word_0_100 0, MC0_POINTER
1e48: store_word_0_100 0x423c0000, MC0_DRAM_CMD
1e50: store_word_0_100 0x0a280100, MC0_DRAM_CMD
1e58: store_word_0_100 0x06200221, MC0_DRAM_CMD
1e60: call 0x0270
1e64: store_word_0_100 %r10_1, MC0_DRAM_CMD
1e68: store_word_0_100 0x06200772, MC0_DRAM_CMD
1e70: call 0x05e0
1e74: beq %r10_1, 0 -> 0x1e7c v
1e78: store_word_0_100 %r10_1, MC0_DRAM_CMD
1e7c: store_word_0_100 2, MC0_CNTL
1e80: %r10_0 = *(MC1_CNTL)
1e84: sync
1e88: delay -7
1e8c: store_word_0_100 0, MC0_POINTER
1e90: store_word_0_100 0x0a280100, MC0_DRAM_CMD
1e98: store_word_0_100 0x2f240000, MC0_DRAM_CMD
1ea0: store_word_0_100 0x2f240000, MC0_DRAM_CMD
1ea8: store_word_0_100 0x003c0000, MC0_DRAM_CMD
1eb0: store_word_0_100 2, MC0_CNTL
1eb4: store_word_0_100 0x00001000, MC0_CNTL
1ebc: store_word_0_100 0x00000605, MC0_CNTL
1ec4: %r10_0 = *(MC1_CNTL)
1ec8: sync
1ecc: delay -7
1ed0: store_word %r12_0, 4
1ed4: store_word %r12_1, 0x00000008
1ed8: store_word %r13_0, 0x0000000c
1edc: store_word %r13_1, 0x00000010
1ee0: call 0x3b88
1ee4: beq %r11_0, 0 -> 0x1ef4 v
1ee8: store_word 0x0011119a, 0xe4000024
1ef0: call 0x11f0
1ef4: store_word_0_100 0, MC0_CNTL
1ef8: store_word_0_100 0, MC0_POINTER
1efc: store_word_0_100 0x00040000, MC0_DRAM_CMD
1f04: store_word_0_100 2, MC0_CNTL
1f08: %r10_0 = *(MC1_CNTL)
1f0c: sync
1f10: delay -7
1f14: %r10_0 = 0x040e3202
1f1c: %r12_0 = load_word -4
1f20: %r11_1 = and %r11_1, 0x0000000f
1f28: bne %r11_1, 0x0000000c -> 0x1f40 v
1f30: %r10_1 = 0x2000000b
1f38: %r10_0 = 0x04113202
1f40: bne %r11_1, 0x0000000d -> 0x1f58 v
1f48: %r10_1 = 0x20007061
1f50: %r10_0 = 0x04113202
1f58: bne %r11_1, 0x0000000e -> 0x1f70 v
1f60: %r10_1 = 0x20003031
1f68: %r10_0 = 0x04123202
1f70: bne %r11_1, 0x0000000f -> 0x1f88 v
1f78: %r10_1 = 0x20007065
1f80: %r10_0 = 0x04123202
1f88: bne %r11_1, 0 -> 0x1f9c v
1f8c: %r10_1 = 0x20001019
1f94: %r10_0 = 0x04123202
1f9c: bne %r11_1, 1 -> 0x1fb0 v
1fa0: %r10_1 = 0x20007069
1fa8: %r10_0 = 0x04133202
1fb0: bne %r11_1, 2 -> 0x1fc4 v
1fb4: %r10_1 = 0x20003035
1fbc: %r10_0 = 0x04133202
1fc4: bne %r11_1, 3 -> 0x1fd8 v
1fc8: %r10_1 = 0x2000706d
1fd0: %r10_0 = 0x04133202
1fd8: bne %r11_1, 4 -> 0x1fec v
1fdc: %r10_1 = 0x2000000d
1fe4: %r10_0 = 0x04143202
1fec: bne %r11_1, 5 -> 0x2000 v
1ff0: %r10_1 = 0x20007071
1ff8: %r10_0 = 0x04143202
2000: bne %r11_1, 6 -> 0x2014 v
2004: %r10_1 = 0x20003039
200c: %r10_0 = 0x04153202
2014: bne %r11_1, 7 -> 0x2028 v
2018: %r10_1 = 0x20007075
2020: %r10_0 = 0x04153202
2028: bne %r11_1, 0x00000008 -> 0x2040 v
2030: %r10_1 = 0x2000101d
2038: %r10_0 = 0x04153202
2040: bne %r11_1, 0x00000009 -> 0x2058 v
2048: %r10_1 = 0x20007079
2050: %r10_0 = 0x04163202
2058: bne %r11_1, 0x0000000a -> 0x2070 v
2060: %r10_1 = 0x2000303d
2068: %r10_0 = 0x04163202
2070: bne %r11_1, 0x0000000b -> 0x2088 v
2078: %r10_1 = 0x2000707d
2080: %r10_0 = 0x04163202
2088: store_word %r10_1, 0xe4000284
208c: %r10_1 = or %r10_1, 0x000c0000
2094: store_word %r10_1, 0xe4000284
2098: %r12_0 = *(0xe4000284)
209c: sync
20a0: delay -7
20a4: %r10_1 = and %r10_1, 0xdff3ffff
20ac: store_word %r10_1, 0xe4000284
20b0: call 0x433c
20b4: store_word %r10_0, 0xe40015e0
20b8: %r10_0 = *(0xe40015e8)
20bc: %r10_0 = rotlw_by_30_then_and %r10_0, 1
20c0: bne %r10_0, 1 -> 0x20cc v
20c4: %r10_0 = *(0xe40015e0)
20c8: jmp 0x211c v
20cc: %r10_0 = *(0xe40015e0)
20d0: %r10_0 = or %r11_0, 1
20d4: store_word %r10_0, 0xe40015e0
20d8: %r10_0 = *(0xe40015e8)
20dc: %r10_0 = rotlw_by_29_then_and %r10_0, 1
20e0: bne %r10_0, 0 -> 0x20ec v
20e4: %r10_0 = *(0xe40015e0)
20e8: jmp 0x211c v
20ec: %r10_0 = *(0xe40015e0)
20f0: store_word %r10_0, 0xe40015e0
20f4: %r10_0 = *(0xe40015e8)
20f8: %r10_0 = rotlw_by_28_then_and %r10_0, 1
20fc: bne %r10_0, 1 -> 0x2108 v
2100: %r10_0 = *(0xe40015e0)
2104: jmp 0x211c v
2108: %r10_0 = *(0xe40015e0)
210c: %r10_0 = or %r11_0, 0x08000080
2114: %r10_0 = and %r11_0, 0xfbffffff
211c: store_word_0_100 %r11_0, MC0_DRAM_CONFIG
2120: store_word_0_100 0x00000080, MC0_BSB_SNOOPED_TIMER_CNTL
2128: store_word_0_100 0x20988088, MC0_TUNING_0
2130: store_word_0_100 0x0000007a, MC0_TUNING_1
2138: store_word_0_100 1, MC0_ARBITRATION_CNTL
213c: store_word_0_100 0x00106514, MC0_RD_BUFFER_CNTL_0
2144: store_word_0_100 0x00210414, MC0_RD_BUFFER_CNTL_1
214c: store_word_0_100 0x0128d87b, MC0_TIMING_CNTL_0
2154: store_word_0_100 0x03820edb, MC0_TIMING_CNTL_1
215c: store_word_0_100 0x0c97914b, MC0_TIMING_CNTL_2
2164: store_word_0_100 0x00000025, MC0_WR_DATA_DLY_0
216c: store_word %r10_0, 0xe40015e0
2170: %r12_0 = *(0xe40015ec)
2174: %r10_0 = rotlw_by_24_then_and %r10_0, 0x0000000f
217c: beq %r10_0, 3 -> 0x2188 v
2180: %r10_0 = *(0xe40015e0)
2184: jmp 0x21a4 v
2188: %r10_0 = *(0xe40015e0)
218c: delay -7
2190: store_word 0x00000100, 0xe40000f0
2198: delay -7
219c: store_word 0, 0xe40000f0
21a0: delay -7
21a4: store_word_0_100 0x00000030, MC0_INTERRUPT_MASK
21ac: store_word_0_100 0, MC0_POINTER
21b0: store_word_0_100 0x003c0000, MC0_DRAM_CMD
21b8: store_word_0_100 2, MC0_CNTL
21bc: %r10_0 = *(MC1_CNTL)
21c0: sync
21c4: delay -7
21c8: store_word_0_100 0, MC0_POINTER
21cc: store_word_0_100 0x0c280100, MC0_DRAM_CMD
21d4: store_word_0_100 0x2f240000, MC0_DRAM_CMD
21dc: call 0x0400
21e0: store_word %r10_1, 0xe4000014
21e4: store_word_0_100 %r10_1, MC0_DRAM_CMD
21e8: %r10_1 = 0x06200712
21f0: store_word %r10_1, 0xe4000010
21f4: store_word_0_100 %r10_1, MC0_DRAM_CMD
21f8: call 0x05e0
21fc: beq %r10_1, 0 -> 0x2204 v
2200: store_word_0_100 %r10_1, MC0_DRAM_CMD
2204: store_word_0_100 0x003c0000, MC0_DRAM_CMD
220c: store_word_0_100 2, MC0_CNTL
2210: store_word_0_100 0x00001000, MC0_CNTL
2218: store_word_0_100 0x00000605, MC0_CNTL
2220: %r10_0 = *(MC1_CNTL)
2224: sync
2228: delay -7
222c: call 0x3c38
2230: op_1E 0, -7
2234: store_word %r13_1, MC0_RD_STR_DLY_0
2238: op_1E 0, -7
223c: op_1E 1, -7
2240: store_word %r13_1, MC0_RD_STR_DLY_1
2244: op_1E 1, -7
2248: op_1E 2, -7
224c: store_word %r13_1, MC1_RD_STR_DLY_0
2250: op_1E 2, -7
2254: op_1E 3, -7
2258: store_word %r13_1, MC1_RD_STR_DLY_1
225c: op_1E 3, -7
2260: store_word %r10_0, 0xe40015e0
2264: %r12_0 = *(0xe40015ec)
2268: %r10_0 = rotlw_by_24_then_and %r10_0, 0x0000000f
2270: beq %r10_0, 1 -> 0x227c v
2274: %r10_0 = *(0xe40015e0)
2278: jmp 0x23ec v
227c: %r10_0 = *(0xe40015e0)
2280: store_word %r10_0, 0xe40015e0
2284: %r12_0 = *(0xe40015ec)
2288: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
2290: beq %r10_0, 1 -> 0x229c v
2294: %r10_0 = *(0xe40015e0)
2298: jmp 0x22f8 v
229c: %r10_0 = *(0xe40015e0)
22a0: %r10_0 = 0
22a4: %r11_1 = 0
22a8: %r10_0 = MC0_RD_STR_DLY_0
22b0: %r10_1 = 0x0a0a0a0a
22b8: call 0x06f4
22bc: %r10_0 = MC0_RD_STR_DLY_1
22c4: %r10_1 = 0x0a0a0a0a
22cc: call 0x06f4
22d0: %r10_0 = MC1_RD_STR_DLY_0
22d8: %r10_1 = 0x0a0a0a0a
22e0: call 0x06f4
22e4: %r10_0 = MC1_RD_STR_DLY_1
22ec: %r10_1 = 0x0a0a0a0a
22f4: call 0x06f4
22f8: store_word %r10_0, 0xe40015e0
22fc: %r12_0 = *(0xe40015ec)
2300: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
2308: beq %r10_0, 2 -> 0x2314 v
230c: %r10_0 = *(0xe40015e0)
2310: jmp 0x2370 v
2314: %r10_0 = *(0xe40015e0)
2318: %r10_0 = 0
231c: %r11_1 = 0
2320: %r10_0 = MC0_RD_STR_DLY_0
2328: %r10_1 = 0x05060505
2330: call 0x06f4
2334: %r10_0 = MC0_RD_STR_DLY_1
233c: %r10_1 = 0x03060504
2344: call 0x06f4
2348: %r10_0 = MC1_RD_STR_DLY_0
2350: %r10_1 = 0x04060605
2358: call 0x06f4
235c: %r10_0 = MC1_RD_STR_DLY_1
2364: %r10_1 = 0x05050605
236c: call 0x06f4
2370: store_word %r10_0, 0xe40015e0
2374: %r12_0 = *(0xe40015ec)
2378: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
2380: beq %r10_0, 6 -> 0x238c v
2384: %r10_0 = *(0xe40015e0)
2388: jmp 0x23e8 v
238c: %r10_0 = *(0xe40015e0)
2390: %r10_0 = 0
2394: %r11_1 = 0
2398: %r10_0 = MC0_RD_STR_DLY_0
23a0: %r10_1 = 0x10101011
23a8: call 0x06f4
23ac: %r10_0 = MC0_RD_STR_DLY_1
23b4: %r10_1 = 0x0e100f0e
23bc: call 0x06f4
23c0: %r10_0 = MC1_RD_STR_DLY_0
23c8: %r10_1 = 0x0d110f10
23d0: call 0x06f4
23d4: %r10_0 = MC1_RD_STR_DLY_1
23dc: %r10_1 = 0x0d0d100d
23e4: call 0x06f4
23e8: jmp 0x2cfc v
23ec: store_word %r10_0, 0xe40015e0
23f0: %r12_0 = *(0xe40015ec)
23f4: %r10_0 = rotlw_by_24_then_and %r10_0, 0x0000000f
23fc: beq %r10_0, 2 -> 0x2408 v
2400: %r10_0 = *(0xe40015e0)
2404: jmp 0x283c v
2408: %r10_0 = *(0xe40015e0)
240c: store_word %r10_0, 0xe40015e0
2410: %r12_0 = *(0xe40015ec)
2414: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
241c: beq %r10_0, 1 -> 0x2428 v
2420: %r10_0 = *(0xe40015e0)
2424: jmp 0x24a4 v
2428: %r10_0 = *(0xe40015e0)
242c: store_word %r10_0, 0xe40015e0
2430: %r12_0 = *(0xe40015ec)
2434: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
243c: beq %r10_0, 4 -> 0x2448 v
2440: %r10_0 = *(0xe40015e0)
2444: jmp 0x24a4 v
2448: %r10_0 = *(0xe40015e0)
244c: %r10_0 = 0
2450: %r11_1 = 0
2454: %r10_0 = MC0_RD_STR_DLY_0
245c: %r10_1 = 0x0a0a0a0a
2464: call 0x06f4
2468: %r10_0 = MC0_RD_STR_DLY_1
2470: %r10_1 = 0x0a0a0a0a
2478: call 0x06f4
247c: %r10_0 = MC1_RD_STR_DLY_0
2484: %r10_1 = 0x0a0a0a0a
248c: call 0x06f4
2490: %r10_0 = MC1_RD_STR_DLY_1
2498: %r10_1 = 0x0a0a0a0a
24a0: call 0x06f4
24a4: store_word %r10_0, 0xe40015e0
24a8: %r12_0 = *(0xe40015ec)
24ac: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
24b4: beq %r10_0, 1 -> 0x24c0 v
24b8: %r10_0 = *(0xe40015e0)
24bc: jmp 0x2540 v
24c0: %r10_0 = *(0xe40015e0)
24c4: store_word %r10_0, 0xe40015e0
24c8: %r12_0 = *(0xe40015ec)
24cc: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
24d4: beq %r10_0, 0x00000009 -> 0x24e4 v
24dc: %r10_0 = *(0xe40015e0)
24e0: jmp 0x2540 v
24e4: %r10_0 = *(0xe40015e0)
24e8: %r10_0 = 0
24ec: %r11_1 = 0
24f0: %r10_0 = MC0_RD_STR_DLY_0
24f8: %r10_1 = 0x0a0a0a0a
2500: call 0x06f4
2504: %r10_0 = MC0_RD_STR_DLY_1
250c: %r10_1 = 0x0a0a0a0a
2514: call 0x06f4
2518: %r10_0 = MC1_RD_STR_DLY_0
2520: %r10_1 = 0x0a0a0a0a
2528: call 0x06f4
252c: %r10_0 = MC1_RD_STR_DLY_1
2534: %r10_1 = 0x0a0a0a0a
253c: call 0x06f4
2540: store_word %r10_0, 0xe40015e0
2544: %r12_0 = *(0xe40015ec)
2548: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
2550: beq %r10_0, 2 -> 0x255c v
2554: %r10_0 = *(0xe40015e0)
2558: jmp 0x25d8 v
255c: %r10_0 = *(0xe40015e0)
2560: store_word %r10_0, 0xe40015e0
2564: %r12_0 = *(0xe40015ec)
2568: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
2570: beq %r10_0, 0 -> 0x257c v
2574: %r10_0 = *(0xe40015e0)
2578: jmp 0x25d8 v
257c: %r10_0 = *(0xe40015e0)
2580: %r10_0 = 0
2584: %r11_1 = 0
2588: %r10_0 = MC0_RD_STR_DLY_0
2590: %r10_1 = 0x090c0905
2598: call 0x06f4
259c: %r10_0 = MC0_RD_STR_DLY_1
25a4: %r10_1 = 0x0a0a0a09
25ac: call 0x06f4
25b0: %r10_0 = MC1_RD_STR_DLY_0
25b8: %r10_1 = 0x04050505
25c0: call 0x06f4
25c4: %r10_0 = MC1_RD_STR_DLY_1
25cc: %r10_1 = 0x05050906
25d4: call 0x06f4
25d8: store_word %r10_0, 0xe40015e0
25dc: %r12_0 = *(0xe40015ec)
25e0: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
25e8: beq %r10_0, 2 -> 0x25f4 v
25ec: %r10_0 = *(0xe40015e0)
25f0: jmp 0x2670 v
25f4: %r10_0 = *(0xe40015e0)
25f8: store_word %r10_0, 0xe40015e0
25fc: %r12_0 = *(0xe40015ec)
2600: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
2608: beq %r10_0, 3 -> 0x2614 v
260c: %r10_0 = *(0xe40015e0)
2610: jmp 0x2670 v
2614: %r10_0 = *(0xe40015e0)
2618: %r10_0 = 0
261c: %r11_1 = 0
2620: %r10_0 = MC0_RD_STR_DLY_0
2628: %r10_1 = 0x06090605
2630: call 0x06f4
2634: %r10_0 = MC0_RD_STR_DLY_1
263c: %r10_1 = 0x08050a08
2644: call 0x06f4
2648: %r10_0 = MC1_RD_STR_DLY_0
2650: %r10_1 = 0x03040303
2658: call 0x06f4
265c: %r10_0 = MC1_RD_STR_DLY_1
2664: %r10_1 = 0x05050706
266c: call 0x06f4
2670: store_word %r10_0, 0xe40015e0
2674: %r12_0 = *(0xe40015ec)
2678: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
2680: beq %r10_0, 2 -> 0x268c v
2684: %r10_0 = *(0xe40015e0)
2688: jmp 0x2708 v
268c: %r10_0 = *(0xe40015e0)
2690: store_word %r10_0, 0xe40015e0
2694: %r12_0 = *(0xe40015ec)
2698: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
26a0: beq %r10_0, 4 -> 0x26ac v
26a4: %r10_0 = *(0xe40015e0)
26a8: jmp 0x2708 v
26ac: %r10_0 = *(0xe40015e0)
26b0: %r10_0 = 0
26b4: %r11_1 = 0
26b8: %r10_0 = MC0_RD_STR_DLY_0
26c0: %r10_1 = 0x070a0706
26c8: call 0x06f4
26cc: %r10_0 = MC0_RD_STR_DLY_1
26d4: %r10_1 = 0x09060b09
26dc: call 0x06f4
26e0: %r10_0 = MC1_RD_STR_DLY_0
26e8: %r10_1 = 0x04050404
26f0: call 0x06f4
26f4: %r10_0 = MC1_RD_STR_DLY_1
26fc: %r10_1 = 0x06060807
2704: call 0x06f4
2708: store_word %r10_0, 0xe40015e0
270c: %r12_0 = *(0xe40015ec)
2710: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
2718: beq %r10_0, 6 -> 0x2724 v
271c: %r10_0 = *(0xe40015e0)
2720: jmp 0x27a0 v
2724: %r10_0 = *(0xe40015e0)
2728: store_word %r10_0, 0xe40015e0
272c: %r12_0 = *(0xe40015ec)
2730: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
2738: beq %r10_0, 1 -> 0x2744 v
273c: %r10_0 = *(0xe40015e0)
2740: jmp 0x27a0 v
2744: %r10_0 = *(0xe40015e0)
2748: %r10_0 = 0
274c: %r11_1 = 0
2750: %r10_0 = MC0_RD_STR_DLY_0
2758: %r10_1 = 0x110f0f0f
2760: call 0x06f4
2764: %r10_0 = MC0_RD_STR_DLY_1
276c: %r10_1 = 0x0f100f0e
2774: call 0x06f4
2778: %r10_0 = MC1_RD_STR_DLY_0
2780: %r10_1 = 0x0a0b0d09
2788: call 0x06f4
278c: %r10_0 = MC1_RD_STR_DLY_1
2794: %r10_1 = 0x0f0d0d0d
279c: call 0x06f4
27a0: store_word %r10_0, 0xe40015e0
27a4: %r12_0 = *(0xe40015ec)
27a8: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
27b0: beq %r10_0, 6 -> 0x27bc v
27b4: %r10_0 = *(0xe40015e0)
27b8: jmp 0x2838 v
27bc: %r10_0 = *(0xe40015e0)
27c0: store_word %r10_0, 0xe40015e0
27c4: %r12_0 = *(0xe40015ec)
27c8: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
27d0: beq %r10_0, 2 -> 0x27dc v
27d4: %r10_0 = *(0xe40015e0)
27d8: jmp 0x2838 v
27dc: %r10_0 = *(0xe40015e0)
27e0: %r10_0 = 0
27e4: %r11_1 = 0
27e8: %r10_0 = MC0_RD_STR_DLY_0
27f0: %r10_1 = 0x110f0f0f
27f8: call 0x06f4
27fc: %r10_0 = MC0_RD_STR_DLY_1
2804: %r10_1 = 0x0f100f0e
280c: call 0x06f4
2810: %r10_0 = MC1_RD_STR_DLY_0
2818: %r10_1 = 0x0a0b0d09
2820: call 0x06f4
2824: %r10_0 = MC1_RD_STR_DLY_1
282c: %r10_1 = 0x0f0d0d0d
2834: call 0x06f4
2838: jmp 0x2cfc v
283c: store_word %r10_0, 0xe40015e0
2840: %r12_0 = *(0xe40015ec)
2844: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
284c: beq %r10_0, 1 -> 0x2858 v
2850: %r10_0 = *(0xe40015e0)
2854: jmp 0x28d4 v
2858: %r10_0 = *(0xe40015e0)
285c: store_word %r10_0, 0xe40015e0
2860: %r12_0 = *(0xe40015ec)
2864: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
286c: beq %r10_0, 1 -> 0x2878 v
2870: %r10_0 = *(0xe40015e0)
2874: jmp 0x28d4 v
2878: %r10_0 = *(0xe40015e0)
287c: %r10_0 = 0
2880: %r11_1 = 0
2884: %r10_0 = MC0_RD_STR_DLY_0
288c: %r10_1 = 0x0a0a0a0a
2894: call 0x06f4
2898: %r10_0 = MC0_RD_STR_DLY_1
28a0: %r10_1 = 0x0a0a0a0a
28a8: call 0x06f4
28ac: %r10_0 = MC1_RD_STR_DLY_0
28b4: %r10_1 = 0x0a0a0a0a
28bc: call 0x06f4
28c0: %r10_0 = MC1_RD_STR_DLY_1
28c8: %r10_1 = 0x0a0a0a0a
28d0: call 0x06f4
28d4: store_word %r10_0, 0xe40015e0
28d8: %r12_0 = *(0xe40015ec)
28dc: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
28e4: beq %r10_0, 1 -> 0x28f0 v
28e8: %r10_0 = *(0xe40015e0)
28ec: jmp 0x296c v
28f0: %r10_0 = *(0xe40015e0)
28f4: store_word %r10_0, 0xe40015e0
28f8: %r12_0 = *(0xe40015ec)
28fc: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
2904: beq %r10_0, 4 -> 0x2910 v
2908: %r10_0 = *(0xe40015e0)
290c: jmp 0x296c v
2910: %r10_0 = *(0xe40015e0)
2914: %r10_0 = 0
2918: %r11_1 = 0
291c: %r10_0 = MC0_RD_STR_DLY_0
2924: %r10_1 = 0x0a0a0a0a
292c: call 0x06f4
2930: %r10_0 = MC0_RD_STR_DLY_1
2938: %r10_1 = 0x0a0a0a0a
2940: call 0x06f4
2944: %r10_0 = MC1_RD_STR_DLY_0
294c: %r10_1 = 0x0a0a0a0a
2954: call 0x06f4
2958: %r10_0 = MC1_RD_STR_DLY_1
2960: %r10_1 = 0x0a0a0a0a
2968: call 0x06f4
296c: store_word %r10_0, 0xe40015e0
2970: %r12_0 = *(0xe40015ec)
2974: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
297c: beq %r10_0, 2 -> 0x2988 v
2980: %r10_0 = *(0xe40015e0)
2984: jmp 0x2a04 v
2988: %r10_0 = *(0xe40015e0)
298c: store_word %r10_0, 0xe40015e0
2990: %r12_0 = *(0xe40015ec)
2994: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
299c: beq %r10_0, 3 -> 0x29a8 v
29a0: %r10_0 = *(0xe40015e0)
29a4: jmp 0x2a04 v
29a8: %r10_0 = *(0xe40015e0)
29ac: %r10_0 = 0
29b0: %r11_1 = 0
29b4: %r10_0 = MC0_RD_STR_DLY_0
29bc: %r10_1 = 0x0b0b0909
29c4: call 0x06f4
29c8: %r10_0 = MC0_RD_STR_DLY_1
29d0: %r10_1 = 0x090a0a09
29d8: call 0x06f4
29dc: %r10_0 = MC1_RD_STR_DLY_0
29e4: %r10_1 = 0x0c0b0b09
29ec: call 0x06f4
29f0: %r10_0 = MC1_RD_STR_DLY_1
29f8: %r10_1 = 0x0a0e0c0f
2a00: call 0x06f4
2a04: store_word %r10_0, 0xe40015e0
2a08: %r12_0 = *(0xe40015ec)
2a0c: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
2a14: beq %r10_0, 2 -> 0x2a20 v
2a18: %r10_0 = *(0xe40015e0)
2a1c: jmp 0x2a9c v
2a20: %r10_0 = *(0xe40015e0)
2a24: store_word %r10_0, 0xe40015e0
2a28: %r12_0 = *(0xe40015ec)
2a2c: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
2a34: beq %r10_0, 4 -> 0x2a40 v
2a38: %r10_0 = *(0xe40015e0)
2a3c: jmp 0x2a9c v
2a40: %r10_0 = *(0xe40015e0)
2a44: %r10_0 = 0
2a48: %r11_1 = 0
2a4c: %r10_0 = MC0_RD_STR_DLY_0
2a54: %r10_1 = 0x0a0a0a0a
2a5c: call 0x06f4
2a60: %r10_0 = MC0_RD_STR_DLY_1
2a68: %r10_1 = 0x0a0a0a0a
2a70: call 0x06f4
2a74: %r10_0 = MC1_RD_STR_DLY_0
2a7c: %r10_1 = 0x0a0a0a0a
2a84: call 0x06f4
2a88: %r10_0 = MC1_RD_STR_DLY_1
2a90: %r10_1 = 0x0a0a0a0a
2a98: call 0x06f4
2a9c: store_word %r10_0, 0xe40015e0
2aa0: %r12_0 = *(0xe40015ec)
2aa4: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
2aac: beq %r10_0, 2 -> 0x2ab8 v
2ab0: %r10_0 = *(0xe40015e0)
2ab4: jmp 0x2b34 v
2ab8: %r10_0 = *(0xe40015e0)
2abc: store_word %r10_0, 0xe40015e0
2ac0: %r12_0 = *(0xe40015ec)
2ac4: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
2acc: beq %r10_0, 5 -> 0x2ad8 v
2ad0: %r10_0 = *(0xe40015e0)
2ad4: jmp 0x2b34 v
2ad8: %r10_0 = *(0xe40015e0)
2adc: %r10_0 = 0
2ae0: %r11_1 = 0
2ae4: %r10_0 = MC0_RD_STR_DLY_0
2aec: %r10_1 = 0x0a0a0a0a
2af4: call 0x06f4
2af8: %r10_0 = MC0_RD_STR_DLY_1
2b00: %r10_1 = 0x0a0a0a0a
2b08: call 0x06f4
2b0c: %r10_0 = MC1_RD_STR_DLY_0
2b14: %r10_1 = 0x0a0a0a0a
2b1c: call 0x06f4
2b20: %r10_0 = MC1_RD_STR_DLY_1
2b28: %r10_1 = 0x0a0a0a0a
2b30: call 0x06f4
2b34: store_word %r10_0, 0xe40015e0
2b38: %r12_0 = *(0xe40015ec)
2b3c: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
2b44: beq %r10_0, 6 -> 0x2b50 v
2b48: %r10_0 = *(0xe40015e0)
2b4c: jmp 0x2bcc v
2b50: %r10_0 = *(0xe40015e0)
2b54: store_word %r10_0, 0xe40015e0
2b58: %r12_0 = *(0xe40015ec)
2b5c: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
2b64: beq %r10_0, 1 -> 0x2b70 v
2b68: %r10_0 = *(0xe40015e0)
2b6c: jmp 0x2bcc v
2b70: %r10_0 = *(0xe40015e0)
2b74: %r10_0 = 0
2b78: %r11_1 = 0
2b7c: %r10_0 = MC0_RD_STR_DLY_0
2b84: %r10_1 = 0x0d0d0d0d
2b8c: call 0x06f4
2b90: %r10_0 = MC0_RD_STR_DLY_1
2b98: %r10_1 = 0x0d0d0d0d
2ba0: call 0x06f4
2ba4: %r10_0 = MC1_RD_STR_DLY_0
2bac: %r10_1 = 0x0d0d0d0d
2bb4: call 0x06f4
2bb8: %r10_0 = MC1_RD_STR_DLY_1
2bc0: %r10_1 = 0x0e0d0d0d
2bc8: call 0x06f4
2bcc: store_word %r10_0, 0xe40015e0
2bd0: %r12_0 = *(0xe40015ec)
2bd4: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
2bdc: beq %r10_0, 6 -> 0x2be8 v
2be0: %r10_0 = *(0xe40015e0)
2be4: jmp 0x2c64 v
2be8: %r10_0 = *(0xe40015e0)
2bec: store_word %r10_0, 0xe40015e0
2bf0: %r12_0 = *(0xe40015ec)
2bf4: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
2bfc: beq %r10_0, 2 -> 0x2c08 v
2c00: %r10_0 = *(0xe40015e0)
2c04: jmp 0x2c64 v
2c08: %r10_0 = *(0xe40015e0)
2c0c: %r10_0 = 0
2c10: %r11_1 = 0
2c14: %r10_0 = MC0_RD_STR_DLY_0
2c1c: %r10_1 = 0x0f0f0f0f
2c24: call 0x06f4
2c28: %r10_0 = MC0_RD_STR_DLY_1
2c30: %r10_1 = 0x0f0f0f0f
2c38: call 0x06f4
2c3c: %r10_0 = MC1_RD_STR_DLY_0
2c44: %r10_1 = 0x0f0f0f0f
2c4c: call 0x06f4
2c50: %r10_0 = MC1_RD_STR_DLY_1
2c58: %r10_1 = 0x0e0f0f0f
2c60: call 0x06f4
2c64: store_word %r10_0, 0xe40015e0
2c68: %r12_0 = *(0xe40015ec)
2c6c: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
2c74: beq %r10_0, 6 -> 0x2c80 v
2c78: %r10_0 = *(0xe40015e0)
2c7c: jmp 0x2cfc v
2c80: %r10_0 = *(0xe40015e0)
2c84: store_word %r10_0, 0xe40015e0
2c88: %r12_0 = *(0xe40015ec)
2c8c: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
2c94: beq %r10_0, 4 -> 0x2ca0 v
2c98: %r10_0 = *(0xe40015e0)
2c9c: jmp 0x2cfc v
2ca0: %r10_0 = *(0xe40015e0)
2ca4: %r10_0 = 0
2ca8: %r11_1 = 0
2cac: %r10_0 = MC0_RD_STR_DLY_0
2cb4: %r10_1 = 0x0f0f0f0f
2cbc: call 0x06f4
2cc0: %r10_0 = MC0_RD_STR_DLY_1
2cc8: %r10_1 = 0x0f0f0f0f
2cd0: call 0x06f4
2cd4: %r10_0 = MC1_RD_STR_DLY_0
2cdc: %r10_1 = 0x0f0f0f0f
2ce4: call 0x06f4
2ce8: %r10_0 = MC1_RD_STR_DLY_1
2cf0: %r10_1 = 0x0e0f0f0f
2cf8: call 0x06f4
2cfc: %r10_0 = *(MC1_RD_STR_DLY_1)
2d00: sync
2d04: delay -7
2d08: store_word_0_100 0x00001605, MC0_CNTL
2d10: store_word_0_100 0x00000605, MC0_CNTL
2d18: store_word 0, 0xe4000020
2d1c: %r11_1 = 0
2d20: store_word %r10_0, 0xe40015e0
2d24: %r12_0 = *(0xe40015ec)
2d28: %r10_0 = rotlw_by_24_then_and %r10_0, 0x0000000f
2d30: beq %r10_0, 3 -> 0x2d3c v
2d34: %r10_0 = *(0xe40015e0)
2d38: jmp 0x2d44 v
2d3c: %r10_0 = *(0xe40015e0)
2d40: %r11_1 = 1
2d44: store_word %r11_1, 0xe4000028
2d48: %r11_1 = and %r11_1, 0x0000000f
2d50: bne %r11_1, 0 -> 0x2d68 v
2d54: call 0x0e6c
2d58: store_word %r11_1, 0xe4000028
2d5c: %r10_0 = rotlw_by_28_then_and %r11_1, 7
2d60: call 0x0820
2d64: call 0x0cf4
2d68: call 0x3fa4
2d6c: op_1E 0, -7
2d70: store_word %r13_1, MC0_WR_STR_DLL_0
2d74: op_1E 0, -7
2d78: op_1E 1, -7
2d7c: store_word %r13_1, MC0_WR_STR_DLL_1
2d80: op_1E 1, -7
2d84: op_1E 2, -7
2d88: store_word %r13_1, MC1_WR_STR_DLL_0
2d8c: op_1E 2, -7
2d90: op_1E 3, -7
2d94: store_word %r13_1, MC1_WR_STR_DLL_1
2d98: op_1E 3, -7
2d9c: store_word %r10_0, 0xe40015e0
2da0: %r12_0 = *(0xe40015ec)
2da4: %r10_0 = rotlw_by_24_then_and %r10_0, 0x0000000f
2dac: beq %r10_0, 1 -> 0x2db8 v
2db0: %r10_0 = *(0xe40015e0)
2db4: jmp 0x2f18 v
2db8: %r10_0 = *(0xe40015e0)
2dbc: store_word %r10_0, 0xe40015e0
2dc0: %r12_0 = *(0xe40015ec)
2dc4: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
2dcc: beq %r10_0, 1 -> 0x2dd8 v
2dd0: %r10_0 = *(0xe40015e0)
2dd4: jmp 0x2e24 v
2dd8: %r10_0 = *(0xe40015e0)
2ddc: %r10_0 = 0
2de0: %r11_1 = 1
2de4: %r10_0 = MC0_WR_STR_DLL_0
2dec: %r10_1 = 0
2df0: call 0x06f4
2df4: %r10_0 = MC0_WR_STR_DLL_1
2dfc: %r10_1 = 0
2e00: call 0x06f4
2e04: %r10_0 = MC1_WR_STR_DLL_0
2e0c: %r10_1 = 0
2e10: call 0x06f4
2e14: %r10_0 = MC1_WR_STR_DLL_1
2e1c: %r10_1 = 0
2e20: call 0x06f4
2e24: store_word %r10_0, 0xe40015e0
2e28: %r12_0 = *(0xe40015ec)
2e2c: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
2e34: beq %r10_0, 2 -> 0x2e40 v
2e38: %r10_0 = *(0xe40015e0)
2e3c: jmp 0x2e9c v
2e40: %r10_0 = *(0xe40015e0)
2e44: %r10_0 = 0
2e48: %r11_1 = 1
2e4c: %r10_0 = MC0_WR_STR_DLL_0
2e54: %r10_1 = 0x01ff0301
2e5c: call 0x06f4
2e60: %r10_0 = MC0_WR_STR_DLL_1
2e68: %r10_1 = 0x01000101
2e70: call 0x06f4
2e74: %r10_0 = MC1_WR_STR_DLL_0
2e7c: %r10_1 = 0x01020201
2e84: call 0x06f4
2e88: %r10_0 = MC1_WR_STR_DLL_1
2e90: %r10_1 = 0x01010101
2e98: call 0x06f4
2e9c: store_word %r10_0, 0xe40015e0
2ea0: %r12_0 = *(0xe40015ec)
2ea4: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
2eac: beq %r10_0, 6 -> 0x2eb8 v
2eb0: %r10_0 = *(0xe40015e0)
2eb4: jmp 0x2f14 v
2eb8: %r10_0 = *(0xe40015e0)
2ebc: %r10_0 = 0
2ec0: %r11_1 = 1
2ec4: %r10_0 = MC0_WR_STR_DLL_0
2ecc: %r10_1 = 0xfafcfefe
2ed4: call 0x06f4
2ed8: %r10_0 = MC0_WR_STR_DLL_1
2ee0: %r10_1 = 0xfdfefdfc
2ee8: call 0x06f4
2eec: %r10_0 = MC1_WR_STR_DLL_0
2ef4: %r10_1 = 0xfdfdfe00
2efc: call 0x06f4
2f00: %r10_0 = MC1_WR_STR_DLL_1
2f08: %r10_1 = 0xfffdfefd
2f10: call 0x06f4
2f14: jmp 0x37f4 v
2f18: store_word %r10_0, 0xe40015e0
2f1c: %r12_0 = *(0xe40015ec)
2f20: %r10_0 = rotlw_by_24_then_and %r10_0, 0x0000000f
2f28: beq %r10_0, 2 -> 0x2f34 v
2f2c: %r10_0 = *(0xe40015e0)
2f30: jmp 0x3354 v
2f34: %r10_0 = *(0xe40015e0)
2f38: store_word %r10_0, 0xe40015e0
2f3c: %r12_0 = *(0xe40015ec)
2f40: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
2f48: beq %r10_0, 1 -> 0x2f54 v
2f4c: %r10_0 = *(0xe40015e0)
2f50: jmp 0x2fc8 v
2f54: %r10_0 = *(0xe40015e0)
2f58: store_word %r10_0, 0xe40015e0
2f5c: %r12_0 = *(0xe40015ec)
2f60: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
2f68: beq %r10_0, 4 -> 0x2f74 v
2f6c: %r10_0 = *(0xe40015e0)
2f70: jmp 0x2fc8 v
2f74: %r10_0 = *(0xe40015e0)
2f78: %r10_0 = 0
2f7c: %r11_1 = 1
2f80: %r10_0 = MC0_WR_STR_DLL_0
2f88: %r10_1 = 0
2f8c: call 0x06f4
2f90: %r10_0 = MC0_WR_STR_DLL_1
2f98: %r10_1 = 0
2f9c: call 0x06f4
2fa0: %r10_0 = MC1_WR_STR_DLL_0
2fa8: %r10_1 = 0xfdfe00fe
2fb0: call 0x06f4
2fb4: %r10_0 = MC1_WR_STR_DLL_1
2fbc: %r10_1 = 0xff00fffe
2fc4: call 0x06f4
2fc8: store_word %r10_0, 0xe40015e0
2fcc: %r12_0 = *(0xe40015ec)
2fd0: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
2fd8: beq %r10_0, 1 -> 0x2fe4 v
2fdc: %r10_0 = *(0xe40015e0)
2fe0: jmp 0x305c v
2fe4: %r10_0 = *(0xe40015e0)
2fe8: store_word %r10_0, 0xe40015e0
2fec: %r12_0 = *(0xe40015ec)
2ff0: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
2ff8: beq %r10_0, 0x00000009 -> 0x3008 v
3000: %r10_0 = *(0xe40015e0)
3004: jmp 0x305c v
3008: %r10_0 = *(0xe40015e0)
300c: %r10_0 = 0
3010: %r11_1 = 1
3014: %r10_0 = MC0_WR_STR_DLL_0
301c: %r10_1 = 0
3020: call 0x06f4
3024: %r10_0 = MC0_WR_STR_DLL_1
302c: %r10_1 = 0
3030: call 0x06f4
3034: %r10_0 = MC1_WR_STR_DLL_0
303c: %r10_1 = 0xfdfe00fe
3044: call 0x06f4
3048: %r10_0 = MC1_WR_STR_DLL_1
3050: %r10_1 = 0xff00fffe
3058: call 0x06f4
305c: store_word %r10_0, 0xe40015e0
3060: %r12_0 = *(0xe40015ec)
3064: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
306c: beq %r10_0, 2 -> 0x3078 v
3070: %r10_0 = *(0xe40015e0)
3074: jmp 0x30f4 v
3078: %r10_0 = *(0xe40015e0)
307c: store_word %r10_0, 0xe40015e0
3080: %r12_0 = *(0xe40015ec)
3084: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
308c: beq %r10_0, 0 -> 0x3098 v
3090: %r10_0 = *(0xe40015e0)
3094: jmp 0x30f4 v
3098: %r10_0 = *(0xe40015e0)
309c: %r10_0 = 0
30a0: %r11_1 = 1
30a4: %r10_0 = MC0_WR_STR_DLL_0
30ac: %r10_1 = 0x00ff0202
30b4: call 0x06f4
30b8: %r10_0 = MC0_WR_STR_DLL_1
30c0: %r10_1 = 0x01000100
30c8: call 0x06f4
30cc: %r10_0 = MC1_WR_STR_DLL_0
30d4: %r10_1 = 0xfeff00ff
30dc: call 0x06f4
30e0: %r10_0 = MC1_WR_STR_DLL_1
30e8: %r10_1 = 0x0201ff00
30f0: call 0x06f4
30f4: store_word %r10_0, 0xe40015e0
30f8: %r12_0 = *(0xe40015ec)
30fc: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
3104: beq %r10_0, 2 -> 0x3110 v
3108: %r10_0 = *(0xe40015e0)
310c: jmp 0x318c v
3110: %r10_0 = *(0xe40015e0)
3114: store_word %r10_0, 0xe40015e0
3118: %r12_0 = *(0xe40015ec)
311c: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
3124: beq %r10_0, 3 -> 0x3130 v
3128: %r10_0 = *(0xe40015e0)
312c: jmp 0x318c v
3130: %r10_0 = *(0xe40015e0)
3134: %r10_0 = 0
3138: %r11_1 = 1
313c: %r10_0 = MC0_WR_STR_DLL_0
3144: %r10_1 = 0xfe030202
314c: call 0x06f4
3150: %r10_0 = MC0_WR_STR_DLL_1
3158: %r10_1 = 0x01000100
3160: call 0x06f4
3164: %r10_0 = MC1_WR_STR_DLL_0
316c: %r10_1 = 0xfdff0000
3174: call 0x06f4
3178: %r10_0 = MC1_WR_STR_DLL_1
3180: %r10_1 = 0x00ffffff
3188: call 0x06f4
318c: store_word %r10_0, 0xe40015e0
3190: %r12_0 = *(0xe40015ec)
3194: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
319c: beq %r10_0, 2 -> 0x31a8 v
31a0: %r10_0 = *(0xe40015e0)
31a4: jmp 0x3220 v
31a8: %r10_0 = *(0xe40015e0)
31ac: store_word %r10_0, 0xe40015e0
31b0: %r12_0 = *(0xe40015ec)
31b4: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
31bc: beq %r10_0, 4 -> 0x31c8 v
31c0: %r10_0 = *(0xe40015e0)
31c4: jmp 0x3220 v
31c8: %r10_0 = *(0xe40015e0)
31cc: %r10_0 = 0
31d0: %r11_1 = 1
31d4: %r10_0 = MC0_WR_STR_DLL_0
31dc: %r10_1 = 0x00010000
31e4: call 0x06f4
31e8: %r10_0 = MC0_WR_STR_DLL_1
31f0: %r10_1 = 0
31f4: call 0x06f4
31f8: %r10_0 = MC1_WR_STR_DLL_0
3200: %r10_1 = 0xfdfffefe
3208: call 0x06f4
320c: %r10_0 = MC1_WR_STR_DLL_1
3214: %r10_1 = 0x00fffeff
321c: call 0x06f4
3220: store_word %r10_0, 0xe40015e0
3224: %r12_0 = *(0xe40015ec)
3228: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
3230: beq %r10_0, 6 -> 0x323c v
3234: %r10_0 = *(0xe40015e0)
3238: jmp 0x32b8 v
323c: %r10_0 = *(0xe40015e0)
3240: store_word %r10_0, 0xe40015e0
3244: %r12_0 = *(0xe40015ec)
3248: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
3250: beq %r10_0, 1 -> 0x325c v
3254: %r10_0 = *(0xe40015e0)
3258: jmp 0x32b8 v
325c: %r10_0 = *(0xe40015e0)
3260: %r10_0 = 0
3264: %r11_1 = 1
3268: %r10_0 = MC0_WR_STR_DLL_0
3270: %r10_1 = 0xfcfafefc
3278: call 0x06f4
327c: %r10_0 = MC0_WR_STR_DLL_1
3284: %r10_1 = 0xfbfcf8f8
328c: call 0x06f4
3290: %r10_0 = MC1_WR_STR_DLL_0
3298: %r10_1 = 0xfcf9fbfc
32a0: call 0x06f4
32a4: %r10_0 = MC1_WR_STR_DLL_1
32ac: %r10_1 = 0xfcfbfafb
32b4: call 0x06f4
32b8: store_word %r10_0, 0xe40015e0
32bc: %r12_0 = *(0xe40015ec)
32c0: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
32c8: beq %r10_0, 6 -> 0x32d4 v
32cc: %r10_0 = *(0xe40015e0)
32d0: jmp 0x3350 v
32d4: %r10_0 = *(0xe40015e0)
32d8: store_word %r10_0, 0xe40015e0
32dc: %r12_0 = *(0xe40015ec)
32e0: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
32e8: beq %r10_0, 2 -> 0x32f4 v
32ec: %r10_0 = *(0xe40015e0)
32f0: jmp 0x3350 v
32f4: %r10_0 = *(0xe40015e0)
32f8: %r10_0 = 0
32fc: %r11_1 = 1
3300: %r10_0 = MC0_WR_STR_DLL_0
3308: %r10_1 = 0xfcfafefc
3310: call 0x06f4
3314: %r10_0 = MC0_WR_STR_DLL_1
331c: %r10_1 = 0xfbfcf8f8
3324: call 0x06f4
3328: %r10_0 = MC1_WR_STR_DLL_0
3330: %r10_1 = 0xfcf9fbfc
3338: call 0x06f4
333c: %r10_0 = MC1_WR_STR_DLL_1
3344: %r10_1 = 0xfcfbfafb
334c: call 0x06f4
3350: jmp 0x37f4 v
3354: store_word %r10_0, 0xe40015e0
3358: %r12_0 = *(0xe40015ec)
335c: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
3364: beq %r10_0, 1 -> 0x3370 v
3368: %r10_0 = *(0xe40015e0)
336c: jmp 0x33ec v
3370: %r10_0 = *(0xe40015e0)
3374: store_word %r10_0, 0xe40015e0
3378: %r12_0 = *(0xe40015ec)
337c: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
3384: beq %r10_0, 1 -> 0x3390 v
3388: %r10_0 = *(0xe40015e0)
338c: jmp 0x33ec v
3390: %r10_0 = *(0xe40015e0)
3394: %r10_0 = 0
3398: %r11_1 = 1
339c: %r10_0 = MC0_WR_STR_DLL_0
33a4: %r10_1 = 0x00000303
33ac: call 0x06f4
33b0: %r10_0 = MC0_WR_STR_DLL_1
33b8: %r10_1 = 0x03000000
33c0: call 0x06f4
33c4: %r10_0 = MC1_WR_STR_DLL_0
33cc: %r10_1 = 0x03010304
33d4: call 0x06f4
33d8: %r10_0 = MC1_WR_STR_DLL_1
33e0: %r10_1 = 0x04030003
33e8: call 0x06f4
33ec: store_word %r10_0, 0xe40015e0
33f0: %r12_0 = *(0xe40015ec)
33f4: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
33fc: beq %r10_0, 1 -> 0x3408 v
3400: %r10_0 = *(0xe40015e0)
3404: jmp 0x3484 v
3408: %r10_0 = *(0xe40015e0)
340c: store_word %r10_0, 0xe40015e0
3410: %r12_0 = *(0xe40015ec)
3414: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
341c: beq %r10_0, 4 -> 0x3428 v
3420: %r10_0 = *(0xe40015e0)
3424: jmp 0x3484 v
3428: %r10_0 = *(0xe40015e0)
342c: %r10_0 = 0
3430: %r11_1 = 1
3434: %r10_0 = MC0_WR_STR_DLL_0
343c: %r10_1 = 0x00000303
3444: call 0x06f4
3448: %r10_0 = MC0_WR_STR_DLL_1
3450: %r10_1 = 0x03000000
3458: call 0x06f4
345c: %r10_0 = MC1_WR_STR_DLL_0
3464: %r10_1 = 0x03010304
346c: call 0x06f4
3470: %r10_0 = MC1_WR_STR_DLL_1
3478: %r10_1 = 0x04030003
3480: call 0x06f4
3484: store_word %r10_0, 0xe40015e0
3488: %r12_0 = *(0xe40015ec)
348c: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
3494: beq %r10_0, 2 -> 0x34a0 v
3498: %r10_0 = *(0xe40015e0)
349c: jmp 0x351c v
34a0: %r10_0 = *(0xe40015e0)
34a4: store_word %r10_0, 0xe40015e0
34a8: %r12_0 = *(0xe40015ec)
34ac: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
34b4: beq %r10_0, 3 -> 0x34c0 v
34b8: %r10_0 = *(0xe40015e0)
34bc: jmp 0x351c v
34c0: %r10_0 = *(0xe40015e0)
34c4: %r10_0 = 0
34c8: %r11_1 = 1
34cc: %r10_0 = MC0_WR_STR_DLL_0
34d4: %r10_1 = 0xfe030202
34dc: call 0x06f4
34e0: %r10_0 = MC0_WR_STR_DLL_1
34e8: %r10_1 = 0x01000100
34f0: call 0x06f4
34f4: %r10_0 = MC1_WR_STR_DLL_0
34fc: %r10_1 = 0xfdff0000
3504: call 0x06f4
3508: %r10_0 = MC1_WR_STR_DLL_1
3510: %r10_1 = 0x00ffffff
3518: call 0x06f4
351c: store_word %r10_0, 0xe40015e0
3520: %r12_0 = *(0xe40015ec)
3524: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
352c: beq %r10_0, 2 -> 0x3538 v
3530: %r10_0 = *(0xe40015e0)
3534: jmp 0x35b4 v
3538: %r10_0 = *(0xe40015e0)
353c: store_word %r10_0, 0xe40015e0
3540: %r12_0 = *(0xe40015ec)
3544: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
354c: beq %r10_0, 4 -> 0x3558 v
3550: %r10_0 = *(0xe40015e0)
3554: jmp 0x35b4 v
3558: %r10_0 = *(0xe40015e0)
355c: %r10_0 = 0
3560: %r11_1 = 1
3564: %r10_0 = MC0_WR_STR_DLL_0
356c: %r10_1 = 0xfe030202
3574: call 0x06f4
3578: %r10_0 = MC0_WR_STR_DLL_1
3580: %r10_1 = 0x01000100
3588: call 0x06f4
358c: %r10_0 = MC1_WR_STR_DLL_0
3594: %r10_1 = 0xfdff0000
359c: call 0x06f4
35a0: %r10_0 = MC1_WR_STR_DLL_1
35a8: %r10_1 = 0x00ffffff
35b0: call 0x06f4
35b4: store_word %r10_0, 0xe40015e0
35b8: %r12_0 = *(0xe40015ec)
35bc: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
35c4: beq %r10_0, 2 -> 0x35d0 v
35c8: %r10_0 = *(0xe40015e0)
35cc: jmp 0x364c v
35d0: %r10_0 = *(0xe40015e0)
35d4: store_word %r10_0, 0xe40015e0
35d8: %r12_0 = *(0xe40015ec)
35dc: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
35e4: beq %r10_0, 5 -> 0x35f0 v
35e8: %r10_0 = *(0xe40015e0)
35ec: jmp 0x364c v
35f0: %r10_0 = *(0xe40015e0)
35f4: %r10_0 = 0
35f8: %r11_1 = 1
35fc: %r10_0 = MC0_WR_STR_DLL_0
3604: %r10_1 = 0xfe030202
360c: call 0x06f4
3610: %r10_0 = MC0_WR_STR_DLL_1
3618: %r10_1 = 0x01000100
3620: call 0x06f4
3624: %r10_0 = MC1_WR_STR_DLL_0
362c: %r10_1 = 0xfdff0000
3634: call 0x06f4
3638: %r10_0 = MC1_WR_STR_DLL_1
3640: %r10_1 = 0x00ffffff
3648: call 0x06f4
364c: store_word %r10_0, 0xe40015e0
3650: %r12_0 = *(0xe40015ec)
3654: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
365c: beq %r10_0, 6 -> 0x3668 v
3660: %r10_0 = *(0xe40015e0)
3664: jmp 0x36e4 v
3668: %r10_0 = *(0xe40015e0)
366c: store_word %r10_0, 0xe40015e0
3670: %r12_0 = *(0xe40015ec)
3674: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
367c: beq %r10_0, 1 -> 0x3688 v
3680: %r10_0 = *(0xe40015e0)
3684: jmp 0x36e4 v
3688: %r10_0 = *(0xe40015e0)
368c: %r10_0 = 0
3690: %r11_1 = 1
3694: %r10_0 = MC0_WR_STR_DLL_0
369c: %r10_1 = 0xfcfafefc
36a4: call 0x06f4
36a8: %r10_0 = MC0_WR_STR_DLL_1
36b0: %r10_1 = 0xfbfcf8f8
36b8: call 0x06f4
36bc: %r10_0 = MC1_WR_STR_DLL_0
36c4: %r10_1 = 0xfcf9fbfc
36cc: call 0x06f4
36d0: %r10_0 = MC1_WR_STR_DLL_1
36d8: %r10_1 = 0xfcfbfafb
36e0: call 0x06f4
36e4: store_word %r10_0, 0xe40015e0
36e8: %r12_0 = *(0xe40015ec)
36ec: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
36f4: beq %r10_0, 6 -> 0x3700 v
36f8: %r10_0 = *(0xe40015e0)
36fc: jmp 0x376c v
3700: %r10_0 = *(0xe40015e0)
3704: store_word %r10_0, 0xe40015e0
3708: %r12_0 = *(0xe40015ec)
370c: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
3714: beq %r10_0, 2 -> 0x3720 v
3718: %r10_0 = *(0xe40015e0)
371c: jmp 0x376c v
3720: %r10_0 = *(0xe40015e0)
3724: %r10_0 = 0
3728: %r11_1 = 1
372c: %r10_0 = MC0_WR_STR_DLL_0
3734: %r10_1 = 0
3738: call 0x06f4
373c: %r10_0 = MC0_WR_STR_DLL_1
3744: %r10_1 = 0
3748: call 0x06f4
374c: %r10_0 = MC1_WR_STR_DLL_0
3754: %r10_1 = 0
3758: call 0x06f4
375c: %r10_0 = MC1_WR_STR_DLL_1
3764: %r10_1 = 0
3768: call 0x06f4
376c: store_word %r10_0, 0xe40015e0
3770: %r12_0 = *(0xe40015ec)
3774: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
377c: beq %r10_0, 6 -> 0x3788 v
3780: %r10_0 = *(0xe40015e0)
3784: jmp 0x37f4 v
3788: %r10_0 = *(0xe40015e0)
378c: store_word %r10_0, 0xe40015e0
3790: %r12_0 = *(0xe40015ec)
3794: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
379c: beq %r10_0, 4 -> 0x37a8 v
37a0: %r10_0 = *(0xe40015e0)
37a4: jmp 0x37f4 v
37a8: %r10_0 = *(0xe40015e0)
37ac: %r10_0 = 0
37b0: %r11_1 = 1
37b4: %r10_0 = MC0_WR_STR_DLL_0
37bc: %r10_1 = 0
37c0: call 0x06f4
37c4: %r10_0 = MC0_WR_STR_DLL_1
37cc: %r10_1 = 0
37d0: call 0x06f4
37d4: %r10_0 = MC1_WR_STR_DLL_0
37dc: %r10_1 = 0
37e0: call 0x06f4
37e4: %r10_0 = MC1_WR_STR_DLL_1
37ec: %r10_1 = 0
37f0: call 0x06f4
37f4: %r12_0 = *(MC1_WR_STR_DLL_1)
37f8: sync
37fc: delay -7
3800: %r10_0 = load_word -4
3804: %r10_0 = and %r11_1, 0x0000000f
380c: bne %r11_0, 0 -> 0x38d4 v
3810: %r12_0 = load_word -4
3814: %r10_0 = load_word -5
3818: %r10_0 = and %r11_0, 0x0000ffff
3820: bgt? %r11_1, %r11_0 -> 0x3838 v
3824: %r10_0 = load_word -5
3828: %r10_0 = rotlw_by_12_then_and %r11_0, 0x00070000
3830: %r10_0 = or %r11_1, %r11_0
3834: store_word %r11_0, 0xe4000020
3838: %r10_0 = load_word -4
383c: %r11_1 = add %r11_1, 0x00000010
3844: %r10_0 = rotlw_by_28_then_and %r11_1, 7
3848: ble %r11_0, 4 -> 0x2d54 ^
384c: %r10_0 = load_word -5
3850: %r10_0 = rotlw_by_16_then_and %r11_0, 7
3854: store_word %r10_0, 0xe40015e0
3858: %r12_0 = *(0xe40015ec)
385c: %r10_0 = rotlw_by_24_then_and %r10_0, 0x0000000f
3864: beq %r10_0, 1 -> 0x3870 v
3868: %r10_0 = *(0xe40015e0)
386c: jmp 0x389c v
3870: %r10_0 = *(0xe40015e0)
3874: store_word %r10_0, 0xe40015e0
3878: %r12_0 = *(0xe40015ec)
387c: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
3884: beq %r10_0, 2 -> 0x3890 v
3888: %r10_0 = *(0xe40015e0)
388c: jmp 0x3898 v
3890: %r10_0 = *(0xe40015e0)
3894: %r10_0 = 1
3898: jmp 0x38cc v
389c: store_word %r10_0, 0xe40015e0
38a0: %r12_0 = *(0xe40015ec)
38a4: %r10_0 = rotlw_by_24_then_and %r10_0, 0x0000000f
38ac: beq %r10_0, 2 -> 0x38b8 v
38b0: %r10_0 = *(0xe40015e0)
38b4: jmp 0x38c0 v
38b8: %r10_0 = *(0xe40015e0)
38bc: jmp 0x38cc v
38c0: delay -7
38c8: jmp 0x38c0 ^
38cc: call 0x0820
38d0: call 0x0cf4
38d4: %r10_0 = load_word -4
38d8: %r11_1 = add %r11_1, 1
38dc: %r10_0 = and %r11_1, 0x0000000f
38e4: ble %r11_0, 2 -> 0x2d44 ^
38e8: call 0x4558
38ec: store_word_0_100 0, MC0_CNTL
38f0: store_word_0_100 0, MC0_POINTER
38f4: %r10_0 = load_word -6
38f8: store_word_0_100 %r10_1, MC0_DRAM_CMD
38fc: store_word_0_100 0x003c0000, MC0_DRAM_CMD
3904: store_word_0_100 2, MC0_CNTL
3908: store_word %r10_0, 0xe40015e0
390c: %r12_0 = *(0xe40015ec)
3910: %r10_0 = rotlw_by_0_then_and %r10_0, 0x0000000f
3918: beq %r10_0, 6 -> 0x3924 v
391c: %r10_0 = *(0xe40015e0)
3920: jmp 0x3a0c v
3924: %r10_0 = *(0xe40015e0)
3928: store_word %r10_0, 0xe40015e0
392c: %r12_0 = *(0xe40015ec)
3930: %r10_0 = rotlw_by_28_then_and %r10_0, 0x0000000f
3938: beq %r10_0, 1 -> 0x3944 v
393c: %r10_0 = *(0xe40015e0)
3940: jmp 0x3a0c v
3944: %r10_0 = *(0xe40015e0)
3948: store_word_0_100 0, MC0_POINTER
394c: store_word_0_100 0x062003da, MC0_DRAM_CMD
3954: store_word_0_100 0x062006da, MC0_DRAM_CMD
395c: store_word_0_100 0x062001da, MC0_DRAM_CMD
3964: store_word_0_100 0x062003e2, MC0_DRAM_CMD
396c: store_word_0_100 0x062006e2, MC0_DRAM_CMD
3974: store_word_0_100 0x062001e2, MC0_DRAM_CMD
397c: store_word_0_100 0x06200712, MC0_DRAM_CMD
3984: store_word_0_100 2, MC0_CNTL
3988: sync
398c: delay -7
3990: store_word_0_100 0, MC0_POINTER
3994: store_word_0_100 0x062003f6, MC0_DRAM_CMD
399c: store_word_0_100 0x062006f6, MC0_DRAM_CMD
39a4: store_word_0_100 0x062001f6, MC0_DRAM_CMD
39ac: store_word_0_100 0x062003f2, MC0_DRAM_CMD
39b4: store_word_0_100 0x062006f2, MC0_DRAM_CMD
39bc: store_word_0_100 0x062001f2, MC0_DRAM_CMD
39c4: store_word_0_100 2, MC0_CNTL
39c8: sync
39cc: delay -7
39d0: store_word_0_100 0, MC0_POINTER
39d4: store_word_0_100 0x0620038e, MC0_DRAM_CMD
39dc: store_word_0_100 0x0620068e, MC0_DRAM_CMD
39e4: store_word_0_100 0x0620018e, MC0_DRAM_CMD
39ec: store_word_0_100 0x062003b2, MC0_DRAM_CMD
39f4: store_word_0_100 0x062006b2, MC0_DRAM_CMD
39fc: store_word_0_100 0x062001b2, MC0_DRAM_CMD
3a04: store_word_0_100 2, MC0_CNTL
3a08: store_word_0_100 0, MC0_POINTER
3a0c: store_word_0_100 0x00001605, MC0_CNTL
3a14: store_word_0_100 0x00000605, MC0_CNTL
3a1c: %r10_0 = *(MC1_CNTL)
3a20: sync
3a24: delay -7
3a28: store_word_0_100 0, MC0_POINTER
3a2c: store_word_0_100 0x003c0000, MC0_DRAM_CMD
3a34: store_word_0_100 2, MC0_CNTL
3a38: store_word_0_100 0x00001000, MC0_CNTL
3a40: store_word_0_100 0x00000605, MC0_CNTL
3a48: %r10_0 = *(MC1_CNTL)
3a4c: sync
3a50: delay -7
3a54: call 0x4bb8
3a58: %r10_0 = 0
3a5c: %r11_1 = 1
3a60: %r12_0 = 3
3a64: store_word 0, 0xe4000024
3a68: store_word %r10_0, 0xe40015e0
3a6c: %r10_0 = *(0xe40015e8)
3a70: %r10_0 = rotlw_by_30_then_and %r10_0, 1
3a74: bne %r10_0, 1 -> 0x3a80 v
3a78: %r10_0 = *(0xe40015e0)
3a7c: jmp 0x3a88 v
3a80: %r10_0 = *(0xe40015e0)
3a84: %r12_0 = 7
3a88: call 0x3ab0
3a8c: %r10_0 = add %r11_0, 1
3a90: %r11_1 = rotlw_by_1_then_and %r11_1, -2
3a94: bgt? %r11_0, %r12_0 -> 0x3a88 ^
3a98: %r12_0 = *(0xe4000024)
3a9c: beq %r10_0, 0 -> 0x3aac v
3aa0: store_word 0x0014149a, 0xe4000024
3aa8: call 0x11f0
3aac: jmp 0x562c v
3ab0: %r12_1 = rotlw_by_26_then_and %r11_0, 0x10000000
3ab8: store_word %r10_0, 0xe40015e0
3abc: %r10_0 = *(0xe40015e8)
3ac0: %r10_0 = rotlw_by_29_then_and %r10_0, 1
3ac4: bne %r10_0, 0 -> 0x3ad0 v
3ac8: %r10_0 = *(0xe40015e0)
3acc: jmp 0x3af4 v
3ad0: %r10_0 = *(0xe40015e0)
3ad4: store_word %r10_0, 0xe40015e0
3ad8: %r10_0 = *(0xe40015e8)
3adc: %r10_0 = rotlw_by_28_then_and %r10_0, 1
3ae0: bne %r10_0, 1 -> 0x3aec v
3ae4: %r10_0 = *(0xe40015e0)
3ae8: jmp 0x3af4 v
3aec: %r10_0 = *(0xe40015e0)
3af0: %r12_1 = rotlw_by_1_then_and %r12_1, -2
3af4: %r10_0 = rotlw_by_6_then_and %r11_0, 0x00000080
3afc: %r12_1 = add %r12_1, %r10_0
3b00: %r10_0 = rotlw_by_2_then_and %r11_0, 4
3b04: %r12_1 = add %r12_1, %r10_0
3b08: %r12_0 = 0x10000000
3b10: store_word %r10_0, 0xe40015e0
3b14: %r10_0 = *(0xe40015e8)
3b18: %r10_0 = rotlw_by_29_then_and %r10_0, 1
3b1c: bne %r10_0, 0 -> 0x3b28 v
3b20: %r10_0 = *(0xe40015e0)
3b24: jmp 0x3b4c v
3b28: %r10_0 = *(0xe40015e0)
3b2c: store_word %r10_0, 0xe40015e0
3b30: %r10_0 = *(0xe40015e8)
3b34: %r10_0 = rotlw_by_28_then_and %r10_0, 1
3b38: bne %r10_0, 1 -> 0x3b44 v
3b3c: %r10_0 = *(0xe40015e0)
3b40: jmp 0x3b4c v
3b44: %r10_0 = *(0xe40015e0)
3b48: %r12_0 = rotlw_by_1_then_and %r13_0, -2
3b4c: %r12_0 = rotlw_by_31_then_and %r13_0, -1
3b50: beq %r13_0, 4 -> 0x3b84 v
3b54: beq %r13_0, 0x00000080 -> 0x3b4c ^
3b5c: %r13_1 = add %r12_1, %r13_0
3b60: store_word 0, %r12_1
3b64: store_word -1, %r13_1
3b68: %r10_0 = *(%r12_1)
3b6c: %r10_0 = load_word -6
3b70: bne %r10_0, 0 -> 0x3b78 v
3b74: beq %r10_1, -1 -> 0x3b4c ^
3b78: %r12_0 = *(0xe4000024)
3b7c: %r10_0 = or %r10_0, %r11_1
3b80: store_word %r10_0, 0xe4000024
3b84: return
3b88: call 0x4bb8
3b8c: %r10_0 = 0
3b90: op_1E 0, -7
3b94: %r10_1 = 0x00001800
3b9c: call 0x4d60
3ba0: beq %r12_0, 0 -> 0x3ba8 v
3ba4: %r10_0 = or %r11_0, 1
3ba8: beq %r12_1, 0 -> 0x3bb4 v
3bac: %r10_0 = or %r11_0, 0x00000010
3bb4: op_1E 0, -7
3bb8: op_1E 1, -7
3bbc: %r10_1 = 0x00001804
3bc4: call 0x4d60
3bc8: beq %r12_0, 0 -> 0x3bd0 v
3bcc: %r10_0 = or %r11_0, 2
3bd0: beq %r12_1, 0 -> 0x3bdc v
3bd4: %r10_0 = or %r11_0, 0x00000020
3bdc: op_1E 1, -7
3be0: op_1E 2, -7
3be4: %r10_1 = 0x00001880
3bec: call 0x4d60
3bf0: beq %r12_0, 0 -> 0x3bf8 v
3bf4: %r10_0 = or %r11_0, 4
3bf8: beq %r12_1, 0 -> 0x3c04 v
3bfc: %r10_0 = or %r11_0, 0x00000040
3c04: op_1E 2, -7
3c08: op_1E 3, -7
3c0c: %r10_1 = 0x00001884
3c14: call 0x4d60
3c18: beq %r12_0, 0 -> 0x3c24 v
3c1c: %r10_0 = or %r11_0, 0x00000008
3c24: beq %r12_1, 0 -> 0x3c30 v
3c28: %r10_0 = or %r11_0, 0x00000080
3c30: op_1E 3, -7
3c34: return
3c38: %r10_0 = 0
3c3c: op_1E %r11_0, -7
3c40: %r12_0 = 0
3c44: %r12_1 = 0
3c48: %r12_0 = 0
3c4c: op_1E %r11_0, -7
3c50: %r10_0 = add %r11_0, 1
3c54: bne %r11_0, 4 -> 0x3c3c ^
3c58: %r10_0 = 0
3c5c: %r13_1 = 0
3c60: store_word %r11_0, 0xe4000018
3c64: store_word_0_100 %r11_0, MC0_RD_STR_DLY_0
3c68: store_word_0_100 %r11_0, MC0_RD_STR_DLY_1
3c6c: %r10_0 = *(MC1_RD_STR_DLY_1)
3c70: sync
3c74: delay -7
3c78: store_word_0_100 0x00001605, MC0_CNTL
3c80: store_word_0_100 0x00000605, MC0_CNTL
3c88: %r10_0 = 0
3c8c: %r11_1 = 0
3c90: %r10_1 = 0x00001808
3c98: call 0x4f38
3c9c: call 0x12d8
3ca0: %r10_1 = rotlw_by_0_then_and %r10_1, -1
3ca4: %r13_1 = or %r13_1, %r10_1
3ca8: %r10_1 = 0x000000ff
3cb0: store_word %r10_0, 0xe40015e0
3cb4: %r10_0 = *(0xe40015e8)
3cb8: %r10_0 = rotlw_by_30_then_and %r10_0, 1
3cbc: bne %r10_0, 1 -> 0x3cc8 v
3cc0: %r10_0 = *(0xe40015e0)
3cc4: jmp 0x3ce4 v
3cc8: %r10_0 = *(0xe40015e0)
3ccc: %r10_0 = load_word -6
3cd0: %r10_1 = rotlw_by_31_then_and %r10_1, -1
3cd4: %r10_1 = add %r10_1, 0x00001808
3cdc: call 0x4f38
3ce0: call 0x12d8
3ce4: %r10_1 = rotlw_by_16_then_and %r10_1, -1
3ce8: %r13_1 = or %r13_1, %r10_1
3cec: op_1E 0, -7
3cf0: call 0x52a8
3cf4: call 0x5338
3cf8: store_word %r10_0, 0xe40015e0
3cfc: %r10_0 = *(0xe40015e8)
3d00: %r10_0 = rotlw_by_31_then_and %r10_0, 1
3d04: bne %r10_0, 0 -> 0x3d10 v
3d08: %r10_0 = *(0xe40015e0)
3d0c: jmp 0x3d18 v
3d10: %r10_0 = *(0xe40015e0)
3d14: call 0x1424
3d18: op_1E 0, -7
3d1c: %r10_0 = 0
3d20: %r11_1 = 0
3d24: %r10_1 = 0x0000180c
3d2c: call 0x4f38
3d30: call 0x12d8
3d34: %r10_1 = rotlw_by_4_then_and %r10_1, -1
3d38: %r13_1 = or %r13_1, %r10_1
3d3c: %r10_1 = 0x000000ff
3d44: store_word %r10_0, 0xe40015e0
3d48: %r10_0 = *(0xe40015e8)
3d4c: %r10_0 = rotlw_by_30_then_and %r10_0, 1
3d50: bne %r10_0, 1 -> 0x3d5c v
3d54: %r10_0 = *(0xe40015e0)
3d58: jmp 0x3d78 v
3d5c: %r10_0 = *(0xe40015e0)
3d60: %r10_0 = load_word -6
3d64: %r10_1 = rotlw_by_31_then_and %r10_1, -1
3d68: %r10_1 = add %r10_1, 0x0000180c
3d70: call 0x4f38
3d74: call 0x12d8
3d78: %r10_1 = rotlw_by_20_then_and %r10_1, -1
3d7c: %r13_1 = or %r13_1, %r10_1
3d80: op_1E 1, -7
3d84: call 0x52a8
3d88: call 0x5338
3d8c: store_word %r10_0, 0xe40015e0
3d90: %r10_0 = *(0xe40015e8)
3d94: %r10_0 = rotlw_by_31_then_and %r10_0, 1
3d98: bne %r10_0, 0 -> 0x3da4 v
3d9c: %r10_0 = *(0xe40015e0)
3da0: jmp 0x3dac v
3da4: %r10_0 = *(0xe40015e0)
3da8: call 0x1424
3dac: op_1E 1, -7
3db0: %r10_0 = 0
3db4: %r11_1 = 0
3db8: %r10_1 = 0x00001888
3dc0: call 0x4f38
3dc4: call 0x12d8
3dc8: %r10_1 = rotlw_by_8_then_and %r10_1, -1
3dcc: %r13_1 = or %r13_1, %r10_1
3dd0: %r10_1 = 0x000000ff
3dd8: store_word %r10_0, 0xe40015e0
3ddc: %r10_0 = *(0xe40015e8)
3de0: %r10_0 = rotlw_by_30_then_and %r10_0, 1
3de4: bne %r10_0, 1 -> 0x3df0 v
3de8: %r10_0 = *(0xe40015e0)
3dec: jmp 0x3e0c v
3df0: %r10_0 = *(0xe40015e0)
3df4: %r10_0 = load_word -6
3df8: %r10_1 = rotlw_by_31_then_and %r10_1, -1
3dfc: %r10_1 = add %r10_1, 0x00001888
3e04: call 0x4f38
3e08: call 0x12d8
3e0c: %r10_1 = rotlw_by_24_then_and %r10_1, -1
3e10: %r13_1 = or %r13_1, %r10_1
3e14: op_1E 2, -7
3e18: call 0x52a8
3e1c: call 0x5338
3e20: store_word %r10_0, 0xe40015e0
3e24: %r10_0 = *(0xe40015e8)
3e28: %r10_0 = rotlw_by_31_then_and %r10_0, 1
3e2c: bne %r10_0, 0 -> 0x3e38 v
3e30: %r10_0 = *(0xe40015e0)
3e34: jmp 0x3e40 v
3e38: %r10_0 = *(0xe40015e0)
3e3c: call 0x1424
3e40: op_1E 2, -7
3e44: %r10_0 = 0
3e48: %r11_1 = 0
3e4c: %r10_1 = 0x0000188c
3e54: call 0x4f38
3e58: call 0x12d8
3e5c: %r10_1 = rotlw_by_12_then_and %r10_1, -1
3e60: %r13_1 = or %r13_1, %r10_1
3e64: %r10_1 = 0x000000ff
3e6c: store_word %r10_0, 0xe40015e0
3e70: %r10_0 = *(0xe40015e8)
3e74: %r10_0 = rotlw_by_30_then_and %r10_0, 1
3e78: bne %r10_0, 1 -> 0x3e84 v
3e7c: %r10_0 = *(0xe40015e0)
3e80: jmp 0x3ea0 v
3e84: %r10_0 = *(0xe40015e0)
3e88: %r10_0 = load_word -6
3e8c: %r10_1 = rotlw_by_31_then_and %r10_1, -1
3e90: %r10_1 = add %r10_1, 0x0000188c
3e98: call 0x4f38
3e9c: call 0x12d8
3ea0: %r10_1 = rotlw_by_28_then_and %r10_1, -1
3ea4: %r13_1 = or %r13_1, %r10_1
3ea8: op_1E 3, -7
3eac: call 0x52a8
3eb0: call 0x5338
3eb4: store_word %r10_0, 0xe40015e0
3eb8: %r10_0 = *(0xe40015e8)
3ebc: %r10_0 = rotlw_by_31_then_and %r10_0, 1
3ec0: bne %r10_0, 0 -> 0x3ecc v
3ec4: %r10_0 = *(0xe40015e0)
3ec8: jmp 0x3ed4 v
3ecc: %r10_0 = *(0xe40015e0)
3ed0: call 0x1424
3ed4: op_1E 3, -7
3ed8: %r10_0 = load_word -5
3edc: %r10_0 = add %r11_0, 0x01010101
3ee4: bne %r11_0, 0x50505050 -> 0x3c60 ^
3eec: %r10_0 = 0
3ef0: op_1E %r10_0, -7
3ef4: %r10_0 = rotlw_by_2_then_and %r10_0, 0x000000ff
3efc: %r11_1 = add %r11_0, 0xe4001600
3f04: store_word %r13_0, %r11_1
3f08: %r11_1 = rotlw_by_0_then_and %r13_0, 0x000000ff
3f10: beq %r11_1, 0 -> 0x53e8 v
3f14: %r10_0 = and %r12_0, 0x0000ffff
3f1c: %r10_0 = div %r11_0, %r11_1
3f20: %r13_1 = rotlw_by_0_then_and %r11_0, 0x000000ff
3f28: %r11_1 = rotlw_by_24_then_and %r13_0, 0x000000ff
3f30: beq %r11_1, 0 -> 0x5414 v
3f34: %r10_0 = rotlw_by_16_then_and %r12_0, 0x0000ffff
3f3c: %r10_0 = div %r11_0, %r11_1
3f40: %r10_0 = rotlw_by_8_then_and %r11_0, 0x0000ff00
3f48: %r13_1 = or %r13_1, %r11_0
3f4c: %r11_1 = rotlw_by_16_then_and %r13_0, 0x000000ff
3f54: beq %r11_1, 0 -> 0x5440 v
3f58: %r10_0 = and %r12_1, 0x0000ffff
3f60: %r10_0 = div %r11_0, %r11_1
3f64: %r10_0 = rotlw_by_16_then_and %r11_0, 0x00ff0000
3f6c: %r13_1 = or %r13_1, %r11_0
3f70: %r11_1 = rotlw_by_8_then_and %r13_0, 0x000000ff
3f78: beq %r11_1, 0 -> 0x546c v
3f7c: %r10_0 = rotlw_by_16_then_and %r12_1, 0x0000ffff
3f84: %r10_0 = div %r11_0, %r11_1
3f88: %r10_0 = rotlw_by_24_then_and %r11_0, 0xff000000
3f90: %r13_1 = or %r13_1, %r11_0
3f94: op_1E %r10_0, -7
3f98: %r10_0 = add %r10_0, 1
3f9c: bne %r10_0, 4 -> 0x3ef0 ^
3fa0: return
3fa4: %r10_0 = 0
3fa8: op_1E %r11_0, -7
3fac: %r12_0 = 0
3fb0: %r12_1 = 0
3fb4: %r12_0 = 0
3fb8: op_1E %r11_0, -7
3fbc: %r10_0 = add %r11_0, 1
3fc0: bne %r11_0, 4 -> 0x3fa8 ^
3fc4: store_word_0_100 0, MC0_WR_STR_DLL_0
3fc8: store_word_0_100 0, MC0_WR_STR_DLL_1
3fcc: call 0x43cc
3fd0: %r10_0 = 0
3fd4: %r13_1 = 0
3fd8: store_word %r11_0, 0xe4000018
3fdc: call 0x4438
3fe0: call 0x4bb8
3fe4: %r10_0 = 0
3fe8: %r11_1 = 0
3fec: %r10_1 = 0x00001808
3ff4: %r10_0 = load_word -3
3ff8: call 0x50f0
3ffc: call 0x12d8
4000: %r10_1 = rotlw_by_0_then_and %r10_1, -1
4004: %r13_1 = or %r13_1, %r10_1
4008: %r10_1 = 0x000000ff
4010: store_word %r10_0, 0xe40015e0
4014: %r10_0 = *(0xe40015e8)
4018: %r10_0 = rotlw_by_30_then_and %r10_0, 1
401c: bne %r10_0, 1 -> 0x4028 v
4020: %r10_0 = *(0xe40015e0)
4024: jmp 0x4048 v
4028: %r10_0 = *(0xe40015e0)
402c: %r10_0 = load_word -6
4030: %r10_1 = rotlw_by_31_then_and %r10_1, -1
4034: %r10_1 = add %r10_1, 0x00001808
403c: %r10_0 = load_word -3
4040: call 0x50f0
4044: call 0x12d8
4048: %r10_1 = rotlw_by_16_then_and %r10_1, -1
404c: %r13_1 = or %r13_1, %r10_1
4050: op_1E 0, -7
4054: call 0x5168
4058: call 0x51f8
405c: store_word %r10_0, 0xe40015e0
4060: %r10_0 = *(0xe40015e8)
4064: %r10_0 = rotlw_by_31_then_and %r10_0, 1
4068: bne %r10_0, 0 -> 0x4074 v
406c: %r10_0 = *(0xe40015e0)
4070: jmp 0x407c v
4074: %r10_0 = *(0xe40015e0)
4078: call 0x1424
407c: op_1E 0, -7
4080: %r10_0 = 0
4084: %r11_1 = 0
4088: %r10_1 = 0x0000180c
4090: %r12_0 = load_word -3
4094: call 0x50f0
4098: call 0x12d8
409c: %r10_1 = rotlw_by_4_then_and %r10_1, -1
40a0: %r13_1 = or %r13_1, %r10_1
40a4: %r10_1 = 0x000000ff
40ac: store_word %r10_0, 0xe40015e0
40b0: %r10_0 = *(0xe40015e8)
40b4: %r10_0 = rotlw_by_30_then_and %r10_0, 1
40b8: bne %r10_0, 1 -> 0x40c4 v
40bc: %r10_0 = *(0xe40015e0)
40c0: jmp 0x40e4 v
40c4: %r10_0 = *(0xe40015e0)
40c8: %r10_0 = load_word -6
40cc: %r10_1 = rotlw_by_31_then_and %r10_1, -1
40d0: %r10_1 = add %r10_1, 0x0000180c
40d8: %r12_0 = load_word -3
40dc: call 0x50f0
40e0: call 0x12d8
40e4: %r10_1 = rotlw_by_20_then_and %r10_1, -1
40e8: %r13_1 = or %r13_1, %r10_1
40ec: op_1E 1, -7
40f0: call 0x5168
40f4: call 0x51f8
40f8: store_word %r10_0, 0xe40015e0
40fc: %r10_0 = *(0xe40015e8)
4100: %r10_0 = rotlw_by_31_then_and %r10_0, 1
4104: bne %r10_0, 0 -> 0x4110 v
4108: %r10_0 = *(0xe40015e0)
410c: jmp 0x4118 v
4110: %r10_0 = *(0xe40015e0)
4114: call 0x1424
4118: op_1E 1, -7
411c: %r10_0 = 0
4120: %r11_1 = 0
4124: %r10_1 = 0x00001888
412c: %r10_0 = load_word -3
4130: call 0x50f0
4134: call 0x12d8
4138: %r10_1 = rotlw_by_8_then_and %r10_1, -1
413c: %r13_1 = or %r13_1, %r10_1
4140: %r10_1 = 0x000000ff
4148: store_word %r10_0, 0xe40015e0
414c: %r10_0 = *(0xe40015e8)
4150: %r10_0 = rotlw_by_30_then_and %r10_0, 1
4154: bne %r10_0, 1 -> 0x4160 v
4158: %r10_0 = *(0xe40015e0)
415c: jmp 0x4180 v
4160: %r10_0 = *(0xe40015e0)
4164: %r10_0 = load_word -6
4168: %r10_1 = rotlw_by_31_then_and %r10_1, -1
416c: %r10_1 = add %r10_1, 0x00001888
4174: %r10_0 = load_word -3
4178: call 0x50f0
417c: call 0x12d8
4180: %r10_1 = rotlw_by_24_then_and %r10_1, -1
4184: %r13_1 = or %r13_1, %r10_1
4188: op_1E 2, -7
418c: call 0x5168
4190: call 0x51f8
4194: store_word %r10_0, 0xe40015e0
4198: %r10_0 = *(0xe40015e8)
419c: %r10_0 = rotlw_by_31_then_and %r10_0, 1
41a0: bne %r10_0, 0 -> 0x41ac v
41a4: %r10_0 = *(0xe40015e0)
41a8: jmp 0x41b4 v
41ac: %r10_0 = *(0xe40015e0)
41b0: call 0x1424
41b4: op_1E 2, -7
41b8: %r10_0 = 0
41bc: %r11_1 = 0
41c0: %r10_1 = 0x0000188c
41c8: %r12_0 = load_word -3
41cc: call 0x50f0
41d0: call 0x12d8
41d4: %r10_1 = rotlw_by_12_then_and %r10_1, -1
41d8: %r13_1 = or %r13_1, %r10_1
41dc: %r10_1 = 0x000000ff
41e4: store_word %r10_0, 0xe40015e0
41e8: %r10_0 = *(0xe40015e8)
41ec: %r10_0 = rotlw_by_30_then_and %r10_0, 1
41f0: bne %r10_0, 1 -> 0x41fc v
41f4: %r10_0 = *(0xe40015e0)
41f8: jmp 0x421c v
41fc: %r10_0 = *(0xe40015e0)
4200: %r10_0 = load_word -6
4204: %r10_1 = rotlw_by_31_then_and %r10_1, -1
4208: %r10_1 = add %r10_1, 0x0000188c
4210: %r12_0 = load_word -3
4214: call 0x50f0
4218: call 0x12d8
421c: %r10_1 = rotlw_by_28_then_and %r10_1, -1
4220: %r13_1 = or %r13_1, %r10_1
4224: op_1E 3, -7
4228: call 0x5168
422c: call 0x51f8
4230: store_word %r10_0, 0xe40015e0
4234: %r10_0 = *(0xe40015e8)
4238: %r10_0 = rotlw_by_31_then_and %r10_0, 1
423c: bne %r10_0, 0 -> 0x4248 v
4240: %r10_0 = *(0xe40015e0)
4244: jmp 0x4250 v
4248: %r10_0 = *(0xe40015e0)
424c: call 0x1424
4250: op_1E 3, -7
4254: %r10_0 = load_word -5
4258: %r10_0 = add %r11_0, 0x01010101
4260: bne %r11_0, 0x50505050 -> 0x3fd8 ^
4268: store_word 0x000000ff, 0xe4000024
4270: %r10_0 = 0
4274: op_1E %r10_0, -7
4278: %r10_0 = rotlw_by_2_then_and %r10_0, 0x000000ff
4280: %r11_1 = add %r11_0, 0xe4001610
4288: store_word %r13_0, %r11_1
428c: call 0x0e1c
4290: %r11_1 = rotlw_by_0_then_and %r13_0, 0x000000ff
4298: beq %r11_1, 0 -> 0x5508 v
429c: %r10_0 = and %r12_0, 0x0000ffff
42a4: %r10_0 = div %r11_0, %r11_1
42a8: %r13_1 = rotlw_by_0_then_and %r11_0, 0x000000ff
42b0: %r11_1 = rotlw_by_24_then_and %r13_0, 0x000000ff
42b8: beq %r11_1, 0 -> 0x5540 v
42bc: %r10_0 = rotlw_by_16_then_and %r12_0, 0x0000ffff
42c4: %r10_0 = div %r11_0, %r11_1
42c8: %r10_0 = rotlw_by_8_then_and %r11_0, 0x0000ff00
42d0: %r13_1 = or %r13_1, %r11_0
42d4: %r11_1 = rotlw_by_16_then_and %r13_0, 0x000000ff
42dc: beq %r11_1, 0 -> 0x5578 v
42e0: %r10_0 = and %r12_1, 0x0000ffff
42e8: %r10_0 = div %r11_0, %r11_1
42ec: %r10_0 = rotlw_by_16_then_and %r11_0, 0x00ff0000
42f4: %r13_1 = or %r13_1, %r11_0
42f8: %r11_1 = rotlw_by_8_then_and %r13_0, 0x000000ff
4300: beq %r11_1, 0 -> 0x55b0 v
4304: %r10_0 = rotlw_by_16_then_and %r12_1, 0x0000ffff
430c: %r10_0 = div %r11_0, %r11_1
4310: %r10_0 = rotlw_by_24_then_and %r11_0, 0xff000000
4318: %r13_1 = or %r13_1, %r11_0
431c: op_1E %r10_0, -7
4320: %r10_0 = add %r10_0, 1
4324: bne %r10_0, 4 -> 0x4274 ^
4328: return
432c: %r10_0 = *(0xe4000288)
4330: sync
4334: delay -7
4338: return
433c: store_word 2, 0xe400028c
4340: %r12_0 = *(0xe400028c)
4344: sync
4348: delay -7
434c: store_word 0, 0xe400028c
4350: %r12_0 = *(0xe400028c)
4354: sync
4358: delay -7
435c: store_word 0, 0xe4000288
4360: call 0x432c
4364: store_word 1, 0xe4000288
4368: call 0x432c
436c: store_word 5, 0xe4000288
4370: call 0x432c
4374: store_word 1, 0xe4000288
4378: call 0x432c
437c: store_word 0, 0xe4000288
4380: call 0x432c
4384: return
4388: %r10_0 = and %r10_1, 0x000000ff
4390: bge %r11_0, %r10_0 -> 0x4398 v
4394: %r10_0 = or %r11_0, %r11_0
4398: %r10_0 = rotlw_by_24_then_and %r10_1, 0x000000ff
43a0: bge %r11_0, %r10_0 -> 0x43a8 v
43a4: %r10_0 = or %r11_0, %r11_0
43a8: %r10_0 = rotlw_by_16_then_and %r10_1, 0x000000ff
43b0: bge %r11_0, %r10_0 -> 0x43b8 v
43b4: %r10_0 = or %r11_0, %r11_0
43b8: %r10_0 = rotlw_by_8_then_and %r10_1, 0x000000ff
43c0: bge %r11_0, %r10_0 -> 0x43c8 v
43c4: %r10_0 = or %r11_0, %r11_0
43c8: return
43cc: %r10_0 = 0x00000050
43d4: %r10_0 = load_word -6
43d8: call 0x4388
43dc: %r12_0 = load_word -6
43e0: call 0x4388
43e4: %r10_0 = load_word -6
43e8: call 0x4388
43ec: %r12_0 = load_word -6
43f0: call 0x4388
43f4: %r10_1 = rotlw_by_8_then_and %r10_0, -1
43f8: %r10_0 = or %r10_0, %r10_1
43fc: %r10_1 = rotlw_by_16_then_and %r10_0, -1
4400: %r10_0 = or %r10_0, %r10_1
4404: %r10_0 = load_word -6
4408: %r10_1 = subf %r10_1, %r10_0
440c: store_word %r10_1, MC0_WR_STR_DLL_0
4410: %r12_0 = load_word -6
4414: %r10_1 = subf %r10_1, %r10_0
4418: store_word %r10_1, MC0_WR_STR_DLL_1
441c: %r10_0 = load_word -6
4420: %r10_1 = subf %r10_1, %r10_0
4424: store_word %r10_1, MC1_WR_STR_DLL_0
4428: %r12_0 = load_word -6
442c: %r10_1 = subf %r10_1, %r10_0
4430: store_word %r10_1, MC1_WR_STR_DLL_1
4434: return
4438: %r10_0 = load_word -6
443c: %r10_1 = add %r10_1, 0x01010101
4444: store_word %r10_1, MC0_WR_STR_DLL_0
4448: %r12_0 = load_word -6
444c: %r10_1 = add %r10_1, 0x01010101
4454: store_word %r10_1, MC0_WR_STR_DLL_1
4458: %r10_0 = load_word -6
445c: %r10_1 = add %r10_1, 0x01010101
4464: store_word %r10_1, MC1_WR_STR_DLL_0
4468: %r12_0 = load_word -6
446c: %r10_1 = add %r10_1, 0x01010101
4474: store_word %r10_1, MC1_WR_STR_DLL_1
4478: %r12_0 = *(MC1_WR_STR_DLL_1)
447c: sync
4480: delay -7
4484: call 0x433c
4488: store_word_0_100 0, MC0_CNTL
448c: %r12_0 = load_word -6
4490: %r10_1 = and %r10_1, -2
4494: store_word %r10_1, 0xe40002a4
4498: store_word_0_100 0, MC0_POINTER
449c: store_word_0_100 0x001c0000, MC0_DRAM_CMD
44a4: store_word_0_100 2, MC0_CNTL
44a8: %r10_0 = *(MC1_CNTL)
44ac: sync
44b0: delay -7
44b4: %r10_1 = or %r10_1, 1
44b8: store_word %r10_1, 0xe40002a4
44bc: %r12_0 = *(0xe40002a4)
44c0: sync
44c4: delay -7
44c8: store_word_0_100 0, MC0_POINTER
44cc: store_word_0_100 0x423c0000, MC0_DRAM_CMD
44d4: store_word_0_100 0x0c280100, MC0_DRAM_CMD
44dc: store_word_0_100 0x06200221, MC0_DRAM_CMD
44e4: %r12_0 = *(0xe4000014)
44e8: store_word_0_100 %r10_0, MC0_DRAM_CMD
44ec: %r10_0 = *(0xe4000010)
44f0: store_word_0_100 %r10_0, MC0_DRAM_CMD
44f4: call 0x05e0
44f8: beq %r10_1, 0 -> 0x4500 v
44fc: store_word_0_100 %r10_1, MC0_DRAM_CMD
4500: store_word_0_100 2, MC0_CNTL
4504: %r10_0 = *(MC1_CNTL)
4508: sync
450c: delay -7
4510: store_word_0_100 0, MC0_POINTER
4514: store_word_0_100 0x0c280100, MC0_DRAM_CMD
451c: store_word_0_100 0x2f240000, MC0_DRAM_CMD
4524: store_word_0_100 0x2f240000, MC0_DRAM_CMD
452c: store_word_0_100 0x003c0000, MC0_DRAM_CMD
4534: store_word_0_100 2, MC0_CNTL
4538: store_word_0_100 0x00001605, MC0_CNTL
4540: store_word_0_100 0x00000605, MC0_CNTL
4548: %r10_0 = *(MC1_CNTL)
454c: sync
4550: delay -7
4554: return
4558: store_word_0_100 0, MC0_CNTL
455c: store_word_0_100 0, MC0_POINTER
4560: store_word_0_100 0x00040000, MC0_DRAM_CMD
4568: store_word_0_100 2, MC0_CNTL
456c: %r10_0 = *(MC1_CNTL)
4570: sync
4574: delay -7
4578: call 0x433c
457c: store_word_0_100 0, MC0_POINTER
4580: store_word_0_100 0x003c0000, MC0_DRAM_CMD
4588: store_word_0_100 2, MC0_CNTL
458c: %r10_0 = *(MC1_CNTL)
4590: sync
4594: delay -7
4598: return
459c: store_word_0_100 0, MC0_CNTL
45a0: store_word_0_100 0, MC0_POINTER
45a4: store_word_0_100 -1, MC0_DRAM_DATA
45a8: store_word_0_100 %r10_0, MC0_DRAM_DATA
45ac: store_word_0_100 %r10_0, MC0_DRAM_DATA
45b0: store_word_0_100 %r10_0, MC0_DRAM_DATA
45b4: store_word_0_100 %r10_0, MC0_DRAM_DATA
45b8: store_word_0_100 %r10_0, MC0_DRAM_DATA
45bc: store_word_0_100 %r10_0, MC0_DRAM_DATA
45c0: store_word_0_100 %r10_0, MC0_DRAM_DATA
45c4: store_word_0_100 %r10_0, MC0_DRAM_DATA
45c8: store_word_0_100 -1, MC0_DRAM_DATA
45cc: store_word_0_100 %r10_0, MC0_DRAM_DATA
45d0: store_word_0_100 %r10_0, MC0_DRAM_DATA
45d4: %r10_0 = xor %r10_0, -1
45d8: store_word_0_100 %r10_0, MC0_DRAM_DATA
45dc: store_word_0_100 %r10_0, MC0_DRAM_DATA
45e0: %r10_0 = xor %r10_0, -1
45e4: store_word_0_100 %r10_0, MC0_DRAM_DATA
45e8: store_word_0_100 %r10_0, MC0_DRAM_DATA
45ec: %r10_0 = xor %r10_0, -1
45f0: store_word_0_100 %r10_0, MC0_DRAM_DATA
45f4: store_word_0_100 %r10_0, MC0_DRAM_DATA
45f8: %r10_0 = %r12_0
45fc: %r11_1 = rotlw_by_1_then_and %r10_1, 0x00008000
4604: %r10_0 = or %r11_0, %r11_1
4608: %r11_1 = rotlw_by_5_then_and %r10_1, 0x00010000
4610: %r10_0 = or %r11_0, %r11_1
4614: %r11_1 = rotlw_by_2_then_and %r10_1, 0x00020000
461c: %r10_0 = or %r11_0, %r11_1
4620: %r11_1 = rotlw_by_16_then_and %r10_1, 0x00001fff
4628: %r10_0 = or %r11_0, %r11_1
462c: store_word_0_100 %r11_0, MC0_DRAM_CMD
4630: %r10_0 = and %r11_0, 0x0003e000
4638: %r10_0 = xor %r11_0, 0x00008000
4640: %r10_0 = or %r11_0, 0x012c0000
4648: store_word_0_100 %r11_0, MC0_DRAM_CMD
464c: %r10_0 = xor %r11_0, 0x00008000
4654: %r10_0 = and %r11_0, 0x0003e000
465c: %r10_0 = or %r11_0, 0x01b00000
4664: %r11_1 = rotlw_by_29_then_and %r10_1, 0x0000000f
466c: %r10_0 = or %r11_0, %r11_1
4670: %r11_1 = rotlw_by_28_then_and %r10_1, 0x00000070
4678: %r10_0 = or %r11_0, %r11_1
467c: %r11_1 = rotlw_by_27_then_and %r10_1, 0x00000080
4684: %r10_0 = or %r11_0, %r11_1
4688: %r11_1 = rotlw_by_28_then_and %r10_1, 0x00000200
4690: %r10_0 = or %r11_0, %r11_1
4694: store_word_0_100 %r11_0, MC0_DRAM_CMD
4698: %r10_0 = or %r11_0, 0x02000000
46a0: store_word_0_100 %r11_0, MC0_DRAM_CMD
46a4: %r10_0 = and %r11_0, 0x0003e000
46ac: %r10_0 = xor %r11_0, 0x00010000
46b4: %r10_0 = or %r11_0, 0x1f2c0000
46bc: store_word_0_100 %r11_0, MC0_DRAM_CMD
46c0: %r10_0 = xor %r11_0, 0x00010000
46c8: %r10_0 = and %r11_0, 0x0003e000
46d0: %r10_0 = or %r11_0, 0x1f280000
46d8: store_word_0_100 %r11_0, MC0_DRAM_CMD
46dc: %r10_0 = xor %r11_0, 0x00008000
46e4: store_word_0_100 %r11_0, MC0_DRAM_CMD
46e8: %r10_0 = xor %r11_0, 0x00008000
46f0: %r10_0 = xor %r11_0, 0x00010000
46f8: store_word_0_100 %r11_0, MC0_DRAM_CMD
46fc: %r10_0 = xor %r11_0, 0x00010000
4704: store_word_0_100 2, MC0_CNTL
4708: store_word_0_100 0x00001605, MC0_CNTL
4710: store_word_0_100 0x00000605, MC0_CNTL
4718: %r10_1 = add %r10_1, 0x00000020
4720: store_word_0_100 0, MC0_CNTL
4724: store_word_0_100 0, MC0_POINTER
4728: store_word_0_100 -1, MC0_DRAM_DATA
472c: store_word_0_100 %r10_0, MC0_DRAM_DATA
4730: store_word_0_100 %r10_0, MC0_DRAM_DATA
4734: store_word_0_100 %r10_0, MC0_DRAM_DATA
4738: store_word_0_100 %r10_0, MC0_DRAM_DATA
473c: store_word_0_100 %r10_0, MC0_DRAM_DATA
4740: store_word_0_100 %r10_0, MC0_DRAM_DATA
4744: store_word_0_100 %r10_0, MC0_DRAM_DATA
4748: store_word_0_100 %r10_0, MC0_DRAM_DATA
474c: store_word_0_100 -1, MC0_DRAM_DATA
4750: store_word_0_100 %r10_0, MC0_DRAM_DATA
4754: store_word_0_100 %r10_0, MC0_DRAM_DATA
4758: %r10_0 = xor %r10_0, -1
475c: store_word_0_100 %r10_0, MC0_DRAM_DATA
4760: store_word_0_100 %r10_0, MC0_DRAM_DATA
4764: %r10_0 = xor %r10_0, -1
4768: store_word_0_100 %r10_0, MC0_DRAM_DATA
476c: store_word_0_100 %r10_0, MC0_DRAM_DATA
4770: %r10_0 = xor %r10_0, -1
4774: store_word_0_100 %r10_0, MC0_DRAM_DATA
4778: store_word_0_100 %r10_0, MC0_DRAM_DATA
477c: %r10_0 = %r12_0
4780: %r11_1 = rotlw_by_1_then_and %r10_1, 0x00008000
4788: %r10_0 = or %r11_0, %r11_1
478c: %r11_1 = rotlw_by_5_then_and %r10_1, 0x00010000
4794: %r10_0 = or %r11_0, %r11_1
4798: %r11_1 = rotlw_by_2_then_and %r10_1, 0x00020000
47a0: %r10_0 = or %r11_0, %r11_1
47a4: %r11_1 = rotlw_by_16_then_and %r10_1, 0x00001fff
47ac: %r10_0 = or %r11_0, %r11_1
47b0: store_word_0_100 %r11_0, MC0_DRAM_CMD
47b4: %r10_0 = and %r11_0, 0x0003e000
47bc: %r10_0 = xor %r11_0, 0x00008000
47c4: %r10_0 = or %r11_0, 0x012c0000
47cc: store_word_0_100 %r11_0, MC0_DRAM_CMD
47d0: %r10_0 = xor %r11_0, 0x00008000
47d8: %r10_0 = and %r11_0, 0x0003e000
47e0: %r10_0 = or %r11_0, 0x01b00000
47e8: %r11_1 = rotlw_by_29_then_and %r10_1, 0x0000000f
47f0: %r10_0 = or %r11_0, %r11_1
47f4: %r11_1 = rotlw_by_28_then_and %r10_1, 0x00000070
47fc: %r10_0 = or %r11_0, %r11_1
4800: %r11_1 = rotlw_by_27_then_and %r10_1, 0x00000080
4808: %r10_0 = or %r11_0, %r11_1
480c: %r11_1 = rotlw_by_28_then_and %r10_1, 0x00000200
4814: %r10_0 = or %r11_0, %r11_1
4818: store_word_0_100 %r11_0, MC0_DRAM_CMD
481c: %r10_0 = or %r11_0, 0x02000000
4824: store_word_0_100 %r11_0, MC0_DRAM_CMD
4828: %r10_0 = and %r11_0, 0x0003e000
4830: %r10_0 = xor %r11_0, 0x00010000
4838: %r10_0 = or %r11_0, 0x1f2c0000
4840: store_word_0_100 %r11_0, MC0_DRAM_CMD
4844: %r10_0 = xor %r11_0, 0x00010000
484c: %r10_0 = and %r11_0, 0x0003e000
4854: %r10_0 = or %r11_0, 0x1f280000
485c: store_word_0_100 %r11_0, MC0_DRAM_CMD
4860: %r10_0 = xor %r11_0, 0x00008000
4868: store_word_0_100 %r11_0, MC0_DRAM_CMD
486c: %r10_0 = xor %r11_0, 0x00008000
4874: %r10_0 = xor %r11_0, 0x00010000
487c: store_word_0_100 %r11_0, MC0_DRAM_CMD
4880: %r10_0 = xor %r11_0, 0x00010000
4888: store_word_0_100 2, MC0_CNTL
488c: store_word_0_100 0x00001605, MC0_CNTL
4894: store_word_0_100 0x00000605, MC0_CNTL
489c: %r10_1 = add %r10_1, 0x00000020
48a4: store_word_0_100 0, MC0_CNTL
48a8: store_word_0_100 0, MC0_POINTER
48ac: store_word_0_100 -1, MC0_DRAM_DATA
48b0: store_word_0_100 %r10_0, MC0_DRAM_DATA
48b4: store_word_0_100 %r10_0, MC0_DRAM_DATA
48b8: store_word_0_100 %r10_0, MC0_DRAM_DATA
48bc: store_word_0_100 %r10_0, MC0_DRAM_DATA
48c0: store_word_0_100 %r10_0, MC0_DRAM_DATA
48c4: store_word_0_100 %r10_0, MC0_DRAM_DATA
48c8: store_word_0_100 %r10_0, MC0_DRAM_DATA
48cc: store_word_0_100 %r10_0, MC0_DRAM_DATA
48d0: store_word_0_100 -1, MC0_DRAM_DATA
48d4: store_word_0_100 %r10_0, MC0_DRAM_DATA
48d8: store_word_0_100 %r10_0, MC0_DRAM_DATA
48dc: store_word_0_100 %r10_0, MC0_DRAM_DATA
48e0: store_word_0_100 %r10_0, MC0_DRAM_DATA
48e4: %r10_0 = xor %r10_0, -1
48e8: store_word_0_100 %r10_0, MC0_DRAM_DATA
48ec: store_word_0_100 %r10_0, MC0_DRAM_DATA
48f0: %r10_0 = xor %r10_0, -1
48f4: store_word_0_100 %r10_0, MC0_DRAM_DATA
48f8: store_word_0_100 %r10_0, MC0_DRAM_DATA
48fc: %r10_0 = xor %r10_0, -1
4900: %r10_0 = %r12_0
4904: %r11_1 = rotlw_by_1_then_and %r10_1, 0x00008000
490c: %r10_0 = or %r11_0, %r11_1
4910: %r11_1 = rotlw_by_5_then_and %r10_1, 0x00010000
4918: %r10_0 = or %r11_0, %r11_1
491c: %r11_1 = rotlw_by_2_then_and %r10_1, 0x00020000
4924: %r10_0 = or %r11_0, %r11_1
4928: %r11_1 = rotlw_by_16_then_and %r10_1, 0x00001fff
4930: %r10_0 = or %r11_0, %r11_1
4934: store_word_0_100 %r11_0, MC0_DRAM_CMD
4938: %r10_0 = and %r11_0, 0x0003e000
4940: %r10_0 = xor %r11_0, 0x00008000
4948: %r10_0 = or %r11_0, 0x012c0000
4950: store_word_0_100 %r11_0, MC0_DRAM_CMD
4954: %r10_0 = xor %r11_0, 0x00008000
495c: %r10_0 = and %r11_0, 0x0003e000
4964: %r10_0 = or %r11_0, 0x01b00000
496c: %r11_1 = rotlw_by_29_then_and %r10_1, 0x0000000f
4974: %r10_0 = or %r11_0, %r11_1
4978: %r11_1 = rotlw_by_28_then_and %r10_1, 0x00000070
4980: %r10_0 = or %r11_0, %r11_1
4984: %r11_1 = rotlw_by_27_then_and %r10_1, 0x00000080
498c: %r10_0 = or %r11_0, %r11_1
4990: %r11_1 = rotlw_by_28_then_and %r10_1, 0x00000200
4998: %r10_0 = or %r11_0, %r11_1
499c: store_word_0_100 %r11_0, MC0_DRAM_CMD
49a0: %r10_0 = or %r11_0, 0x02000000
49a8: store_word_0_100 %r11_0, MC0_DRAM_CMD
49ac: %r10_0 = and %r11_0, 0x0003e000
49b4: %r10_0 = xor %r11_0, 0x00010000
49bc: %r10_0 = or %r11_0, 0x1f2c0000
49c4: store_word_0_100 %r11_0, MC0_DRAM_CMD
49c8: %r10_0 = xor %r11_0, 0x00010000
49d0: %r10_0 = and %r11_0, 0x0003e000
49d8: %r10_0 = or %r11_0, 0x1f280000
49e0: store_word_0_100 %r11_0, MC0_DRAM_CMD
49e4: %r10_0 = xor %r11_0, 0x00008000
49ec: store_word_0_100 %r11_0, MC0_DRAM_CMD
49f0: %r10_0 = xor %r11_0, 0x00008000
49f8: %r10_0 = xor %r11_0, 0x00010000
4a00: store_word_0_100 %r11_0, MC0_DRAM_CMD
4a04: %r10_0 = xor %r11_0, 0x00010000
4a0c: store_word_0_100 2, MC0_CNTL
4a10: store_word_0_100 0x00001605, MC0_CNTL
4a18: store_word_0_100 0x00000605, MC0_CNTL
4a20: %r10_1 = add %r10_1, 0x00000020
4a28: store_word_0_100 0, MC0_CNTL
4a2c: store_word_0_100 0, MC0_POINTER
4a30: store_word_0_100 -1, MC0_DRAM_DATA
4a34: store_word_0_100 %r10_0, MC0_DRAM_DATA
4a38: store_word_0_100 %r10_0, MC0_DRAM_DATA
4a3c: store_word_0_100 %r10_0, MC0_DRAM_DATA
4a40: store_word_0_100 %r10_0, MC0_DRAM_DATA
4a44: store_word_0_100 %r10_0, MC0_DRAM_DATA
4a48: store_word_0_100 %r10_0, MC0_DRAM_DATA
4a4c: store_word_0_100 %r10_0, MC0_DRAM_DATA
4a50: store_word_0_100 %r10_0, MC0_DRAM_DATA
4a54: store_word_0_100 -1, MC0_DRAM_DATA
4a58: store_word_0_100 %r10_0, MC0_DRAM_DATA
4a5c: store_word_0_100 %r10_0, MC0_DRAM_DATA
4a60: store_word_0_100 %r10_0, MC0_DRAM_DATA
4a64: store_word_0_100 %r10_0, MC0_DRAM_DATA
4a68: %r10_0 = xor %r10_0, -1
4a6c: store_word_0_100 %r10_0, MC0_DRAM_DATA
4a70: store_word_0_100 %r10_0, MC0_DRAM_DATA
4a74: %r10_0 = xor %r10_0, -1
4a78: store_word_0_100 %r10_0, MC0_DRAM_DATA
4a7c: store_word_0_100 %r10_0, MC0_DRAM_DATA
4a80: %r10_0 = xor %r10_0, -1
4a84: %r10_0 = %r12_0
4a88: %r11_1 = rotlw_by_1_then_and %r10_1, 0x00008000
4a90: %r10_0 = or %r11_0, %r11_1
4a94: %r11_1 = rotlw_by_5_then_and %r10_1, 0x00010000
4a9c: %r10_0 = or %r11_0, %r11_1
4aa0: %r11_1 = rotlw_by_2_then_and %r10_1, 0x00020000
4aa8: %r10_0 = or %r11_0, %r11_1
4aac: %r11_1 = rotlw_by_16_then_and %r10_1, 0x00001fff
4ab4: %r10_0 = or %r11_0, %r11_1
4ab8: store_word_0_100 %r11_0, MC0_DRAM_CMD
4abc: %r10_0 = and %r11_0, 0x0003e000
4ac4: %r10_0 = xor %r11_0, 0x00008000
4acc: %r10_0 = or %r11_0, 0x012c0000
4ad4: store_word_0_100 %r11_0, MC0_DRAM_CMD
4ad8: %r10_0 = xor %r11_0, 0x00008000
4ae0: %r10_0 = and %r11_0, 0x0003e000
4ae8: %r10_0 = or %r11_0, 0x01b00000
4af0: %r11_1 = rotlw_by_29_then_and %r10_1, 0x0000000f
4af8: %r10_0 = or %r11_0, %r11_1
4afc: %r11_1 = rotlw_by_28_then_and %r10_1, 0x00000070
4b04: %r10_0 = or %r11_0, %r11_1
4b08: %r11_1 = rotlw_by_27_then_and %r10_1, 0x00000080
4b10: %r10_0 = or %r11_0, %r11_1
4b14: %r11_1 = rotlw_by_28_then_and %r10_1, 0x00000200
4b1c: %r10_0 = or %r11_0, %r11_1
4b20: store_word_0_100 %r11_0, MC0_DRAM_CMD
4b24: %r10_0 = or %r11_0, 0x02000000
4b2c: store_word_0_100 %r11_0, MC0_DRAM_CMD
4b30: %r10_0 = and %r11_0, 0x0003e000
4b38: %r10_0 = xor %r11_0, 0x00010000
4b40: %r10_0 = or %r11_0, 0x1f2c0000
4b48: store_word_0_100 %r11_0, MC0_DRAM_CMD
4b4c: %r10_0 = xor %r11_0, 0x00010000
4b54: %r10_0 = and %r11_0, 0x0003e000
4b5c: %r10_0 = or %r11_0, 0x1f280000
4b64: store_word_0_100 %r11_0, MC0_DRAM_CMD
4b68: %r10_0 = xor %r11_0, 0x00008000
4b70: store_word_0_100 %r11_0, MC0_DRAM_CMD
4b74: %r10_0 = xor %r11_0, 0x00008000
4b7c: %r10_0 = xor %r11_0, 0x00010000
4b84: store_word_0_100 %r11_0, MC0_DRAM_CMD
4b88: %r10_0 = xor %r11_0, 0x00010000
4b90: store_word_0_100 2, MC0_CNTL
4b94: store_word_0_100 0x00001605, MC0_CNTL
4b9c: store_word_0_100 0x00000605, MC0_CNTL
4ba4: %r10_1 = add %r10_1, 0x00000020
4bac: %r10_1 = add %r10_1, 0x00000080
4bb4: return
4bb8: %r10_1 = 0x00001800
4bc0: %r12_0 = 0x0f2c4000
4bc8: %r10_0 = 0x01800180
4bd0: call 0x459c
4bd4: %r10_0 = 0x02400240
4bdc: call 0x459c
4be0: %r10_0 = 0x04200420
4be8: call 0x459c
4bec: %r10_0 = 0x08100810
4bf4: call 0x459c
4bf8: %r10_0 = 0x10081008
4c00: call 0x459c
4c04: %r10_0 = 0x20042004
4c0c: call 0x459c
4c10: %r10_0 = 0x40024002
4c18: call 0x459c
4c1c: %r10_0 = 0x80018001
4c24: call 0x459c
4c28: %r10_1 = 0x00001800
4c30: %r12_0 = 0x0f2c2000
4c38: %r10_0 = 0x01800180
4c40: call 0x459c
4c44: %r10_0 = 0x02400240
4c4c: call 0x459c
4c50: %r10_0 = 0x04200420
4c58: call 0x459c
4c5c: %r10_0 = 0x08100810
4c64: call 0x459c
4c68: %r10_0 = 0x10081008
4c70: call 0x459c
4c74: %r10_0 = 0x20042004
4c7c: call 0x459c
4c80: %r10_0 = 0x40024002
4c88: call 0x459c
4c8c: %r10_0 = 0x80018001
4c94: call 0x459c
4c98: return
4c9c: %r10_0 = load_word -4
4ca0: %r11_1 = xor %r11_1, %r10_0
4ca4: %r12_1 = or %r12_1, %r11_1
4ca8: %r10_1 = add %r10_1, 0x00000008
4cb0: %r10_0 = xor %r10_0, -1
4cb4: %r10_0 = load_word -4
4cb8: %r11_1 = xor %r11_1, %r10_0
4cbc: %r12_1 = or %r12_1, %r11_1
4cc0: %r10_1 = add %r10_1, 0x00000008
4cc8: %r10_0 = xor %r10_0, -1
4ccc: %r10_0 = load_word -4
4cd0: %r11_1 = xor %r11_1, %r10_0
4cd4: %r12_1 = or %r12_1, %r11_1
4cd8: %r10_1 = add %r10_1, 0x00000008
4ce0: %r10_0 = xor %r10_0, -1
4ce4: %r10_0 = load_word -4
4ce8: %r11_1 = xor %r11_1, %r10_0
4cec: %r12_1 = or %r12_1, %r11_1
4cf0: %r10_1 = add %r10_1, 0x00000008
4cf8: %r10_0 = load_word -4
4cfc: %r11_1 = xor %r11_1, %r10_0
4d00: %r12_1 = or %r12_1, %r11_1
4d04: %r10_1 = add %r10_1, 0x00000008
4d0c: %r10_0 = xor %r10_0, -1
4d10: %r10_0 = load_word -4
4d14: %r11_1 = xor %r11_1, %r10_0
4d18: %r12_1 = or %r12_1, %r11_1
4d1c: %r10_1 = add %r10_1, 0x00000008
4d24: %r10_0 = xor %r10_0, -1
4d28: %r10_0 = load_word -4
4d2c: %r11_1 = xor %r11_1, %r10_0
4d30: %r12_1 = or %r12_1, %r11_1
4d34: %r10_1 = add %r10_1, 0x00000008
4d3c: %r10_0 = xor %r10_0, -1
4d40: %r10_0 = load_word -4
4d44: %r11_1 = xor %r11_1, %r10_0
4d48: %r12_1 = or %r12_1, %r11_1
4d4c: %r10_1 = add %r10_1, 0x00000008
4d54: %r10_1 = add %r10_1, 0x000000c0
4d5c: return
4d60: %r12_1 = 0
4d64: store_word_0_100 0x00001605, MC0_CNTL
4d6c: store_word_0_100 0x00000605, MC0_CNTL
4d74: %r10_0 = 0x01800180
4d7c: call 0x4c9c
4d80: %r10_0 = 0x02400240
4d88: call 0x4c9c
4d8c: %r10_0 = 0x04200420
4d94: call 0x4c9c
4d98: %r10_0 = 0x08100810
4da0: call 0x4c9c
4da4: %r10_0 = 0x10081008
4dac: call 0x4c9c
4db0: %r10_0 = 0x20042004
4db8: call 0x4c9c
4dbc: %r10_0 = 0x40024002
4dc4: call 0x4c9c
4dc8: %r10_0 = 0x80018001
4dd0: call 0x4c9c
4dd4: %r12_0 = %r12_1
4dd8: %r12_1 = 0
4ddc: store_word %r10_0, 0xe40015e0
4de0: %r10_0 = *(0xe40015e8)
4de4: %r10_0 = rotlw_by_30_then_and %r10_0, 1
4de8: bne %r10_0, 1 -> 0x4df4 v
4dec: %r10_0 = *(0xe40015e0)
4df0: jmp 0x4e90 v
4df4: %r10_0 = *(0xe40015e0)
4df8: %r10_0 = load_word -4
4dfc: %r11_1 = rotlw_by_31_then_and %r11_1, 0x7fffffff
4e04: %r10_1 = add %r10_1, %r11_1
4e08: %r10_1 = subf %r10_1, 0x00000800
4e10: store_word_0_100 0x00001605, MC0_CNTL
4e18: store_word_0_100 0x00000605, MC0_CNTL
4e20: %r10_0 = 0x01800180
4e28: call 0x4c9c
4e2c: %r10_0 = 0x02400240
4e34: call 0x4c9c
4e38: %r10_0 = 0x04200420
4e40: call 0x4c9c
4e44: %r10_0 = 0x08100810
4e4c: call 0x4c9c
4e50: %r10_0 = 0x10081008
4e58: call 0x4c9c
4e5c: %r10_0 = 0x20042004
4e64: call 0x4c9c
4e68: %r10_0 = 0x40024002
4e70: call 0x4c9c
4e74: %r10_0 = 0x80018001
4e7c: call 0x4c9c
4e80: %r10_0 = load_word -4
4e84: %r11_1 = rotlw_by_31_then_and %r11_1, 0x7fffffff
4e8c: %r10_1 = subf %r10_1, %r11_1
4e90: return
4e94: %r10_0 = xor %r10_0, -1
4e98: %r10_0 = load_word -1
4e9c: %r12_0 = xor %r13_0, %r10_0
4ea0: %r12_1 = or %r12_1, %r13_0
4ea4: %r12_0 = xor %r13_0, -1
4ea8: %r12_0 = or %r12_0, %r13_0
4eac: %r10_1 = add %r10_1, 0x00000008
4eb4: %r10_0 = xor %r10_0, -1
4eb8: %r10_0 = load_word -1
4ebc: %r12_0 = xor %r13_0, %r10_0
4ec0: %r12_1 = or %r12_1, %r13_0
4ec4: %r12_0 = xor %r13_0, -1
4ec8: %r12_0 = or %r12_0, %r13_0
4ecc: %r10_1 = add %r10_1, 0x00000008
4ed4: %r10_0 = xor %r10_0, -1
4ed8: %r10_1 = add %r10_1, 0x00000010
4ee0: %r10_0 = xor %r10_0, -1
4ee4: %r10_0 = load_word -1
4ee8: %r12_0 = xor %r13_0, %r10_0
4eec: %r12_1 = or %r12_1, %r13_0
4ef0: %r12_0 = xor %r13_0, -1
4ef4: %r12_0 = or %r12_0, %r13_0
4ef8: %r10_1 = add %r10_1, 0x00000008
4f00: %r10_0 = xor %r10_0, -1
4f04: %r10_0 = load_word -1
4f08: %r12_0 = xor %r13_0, %r10_0
4f0c: %r12_1 = or %r12_1, %r13_0
4f10: %r12_0 = xor %r13_0, -1
4f14: %r12_0 = or %r12_0, %r13_0
4f18: %r10_1 = add %r10_1, 0x00000008
4f20: %r10_0 = xor %r10_0, -1
4f24: %r10_1 = add %r10_1, 0x00000010
4f2c: %r10_1 = add %r10_1, 0x000000c0
4f34: return
4f38: %r12_0 = 0
4f3c: %r12_1 = 0
4f40: %r10_0 = 0x01800180
4f48: call 0x4e94
4f4c: %r10_0 = 0x02400240
4f54: call 0x4e94
4f58: %r10_0 = 0x04200420
4f60: call 0x4e94
4f64: %r10_0 = 0x08100810
4f6c: call 0x4e94
4f70: %r10_0 = 0x10081008
4f78: call 0x4e94
4f7c: %r10_0 = 0x20042004
4f84: call 0x4e94
4f88: %r10_0 = 0x40024002
4f90: call 0x4e94
4f94: %r10_0 = 0x80018001
4f9c: call 0x4e94
4fa0: %r10_0 = or %r11_0, %r12_0
4fa4: %r11_1 = or %r11_1, %r12_1
4fa8: return
4fac: %r10_0 = xor %r10_0, -1
4fb0: %r10_0 = load_word -1
4fb4: %r12_0 = xor %r13_0, %r10_0
4fb8: %r12_1 = or %r12_1, %r13_0
4fbc: %r12_0 = xor %r13_0, -1
4fc0: %r12_0 = or %r12_0, %r13_0
4fc4: %r10_1 = add %r10_1, 0x00000008
4fcc: %r10_0 = xor %r10_0, -1
4fd0: %r10_0 = load_word -1
4fd4: %r12_0 = xor %r13_0, %r10_0
4fd8: %r12_1 = or %r12_1, %r13_0
4fdc: %r12_0 = xor %r13_0, -1
4fe0: %r12_0 = or %r12_0, %r13_0
4fe4: %r10_1 = add %r10_1, 0x00000008
4fec: %r10_0 = xor %r10_0, -1
4ff0: %r10_1 = add %r10_1, 0x00000010
4ff8: %r10_0 = xor %r10_0, -1
4ffc: %r10_0 = load_word -1
5000: %r12_0 = xor %r13_0, %r10_0
5004: %r12_1 = or %r12_1, %r13_0
5008: %r12_0 = xor %r13_0, -1
500c: %r12_0 = or %r12_0, %r13_0
5010: %r10_1 = add %r10_1, 0x00000008
5018: %r10_0 = xor %r10_0, -1
501c: %r10_0 = load_word -1
5020: %r12_0 = xor %r13_0, %r10_0
5024: %r12_1 = or %r12_1, %r13_0
5028: %r12_0 = xor %r13_0, -1
502c: %r12_0 = or %r12_0, %r13_0
5030: %r10_1 = add %r10_1, 0x00000008
5038: %r10_0 = xor %r10_0, -1
503c: %r10_1 = add %r10_1, 0x00000010
5044: %r10_1 = add %r10_1, 0x00000008
504c: %r10_0 = xor %r10_0, -1
5050: %r10_0 = load_word -1
5054: %r12_0 = xor %r13_0, %r10_0
5058: %r12_1 = or %r12_1, %r13_0
505c: %r12_0 = xor %r13_0, -1
5060: %r12_0 = or %r12_0, %r13_0
5064: %r10_1 = add %r10_1, 0x00000008
506c: %r10_0 = xor %r10_0, -1
5070: %r10_0 = load_word -1
5074: %r12_0 = xor %r13_0, %r10_0
5078: %r12_1 = or %r12_1, %r13_0
507c: %r12_0 = xor %r13_0, -1
5080: %r12_0 = or %r12_0, %r13_0
5084: %r10_1 = add %r10_1, 0x00000008
508c: %r10_0 = xor %r10_0, -1
5090: %r10_1 = add %r10_1, 0x00000010
5098: %r10_0 = xor %r10_0, -1
509c: %r10_0 = load_word -1
50a0: %r12_0 = xor %r13_0, %r10_0
50a4: %r12_1 = or %r12_1, %r13_0
50a8: %r12_0 = xor %r13_0, -1
50ac: %r12_0 = or %r12_0, %r13_0
50b0: %r10_1 = add %r10_1, 0x00000008
50b8: %r10_0 = xor %r10_0, -1
50bc: %r10_0 = load_word -1
50c0: %r12_0 = xor %r13_0, %r10_0
50c4: %r12_1 = or %r12_1, %r13_0
50c8: %r12_0 = xor %r13_0, -1
50cc: %r12_0 = or %r12_0, %r13_0
50d0: %r10_1 = add %r10_1, 0x00000008
50d8: %r10_0 = xor %r10_0, -1
50dc: %r10_1 = add %r10_1, 0x00000010
50e4: %r10_1 = add %r10_1, 0x00000078
50ec: return
50f0: store_word %r12_0, 0xe400001c
50f4: %r12_0 = 0
50f8: %r12_1 = 0
50fc: %r10_0 = 0x01800180
5104: call 0x4fac
5108: %r10_0 = 0x02400240
5110: call 0x4fac
5114: %r10_0 = 0x04200420
511c: call 0x4fac
5120: %r10_0 = 0x08100810
5128: call 0x4fac
512c: %r10_0 = 0x10081008
5134: call 0x4fac
5138: %r10_0 = 0x20042004
5140: call 0x4fac
5144: %r10_0 = 0x40024002
514c: call 0x4fac
5150: %r10_0 = 0x80018001
5158: call 0x4fac
515c: %r10_0 = or %r11_0, %r12_0
5160: %r11_1 = or %r11_1, %r12_1
5164: return
5168: %r10_0 = and %r11_1, 0x000000ff
5170: bne %r10_0, 0 -> 0x5188 v
5174: %r12_0 = *(0xe400001c)
5178: %r10_0 = and %r10_0, 0x000000ff
5180: %r12_0 = add %r12_0, %r10_0
5184: %r12_0 = add %r13_0, 1
5188: %r10_0 = and %r11_1, 0x0000ff00
5190: bne %r10_0, 0 -> 0x51ac v
5194: %r12_0 = *(0xe400001c)
5198: %r10_0 = rotlw_by_8_then_and %r10_0, 0x00ff0000
51a0: %r12_0 = add %r12_0, %r10_0
51a4: %r12_0 = add %r13_0, 0x00000100
51ac: %r10_0 = and %r11_1, 0x00ff0000
51b4: bne %r10_0, 0 -> 0x51d0 v
51b8: %r12_0 = *(0xe400001c)
51bc: %r10_0 = rotlw_by_16_then_and %r10_0, 0x000000ff
51c4: %r12_1 = add %r12_1, %r10_0
51c8: %r12_0 = add %r13_0, 0x00010000
51d0: %r10_0 = and %r11_1, 0xff000000
51d8: bne %r10_0, 0 -> 0x51f4 v
51dc: %r12_0 = *(0xe400001c)
51e0: %r10_0 = rotlw_by_24_then_and %r10_0, 0x00ff0000
51e8: %r12_1 = add %r12_1, %r10_0
51ec: %r12_0 = add %r13_0, 0x01000000
51f4: return
51f8: %r10_0 = and %r11_0, 0x000000ff
5200: bne %r10_0, 0 -> 0x5220 v
5204: %r12_0 = *(0xe400001c)
5208: %r10_0 = and %r10_0, 0x000000ff
5210: %r12_0 = add %r12_0, %r10_0
5214: %r12_0 = subf %r12_0, 0x00000050
521c: %r12_0 = add %r13_0, 1
5220: %r10_0 = and %r11_0, 0x0000ff00
5228: bne %r10_0, 0 -> 0x524c v
522c: %r12_0 = *(0xe400001c)
5230: %r10_0 = rotlw_by_8_then_and %r10_0, 0x00ff0000
5238: %r12_0 = add %r12_0, %r10_0
523c: %r12_0 = subf %r12_0, 0x00500000
5244: %r12_0 = add %r13_0, 0x00000100
524c: %r10_0 = and %r11_0, 0x00ff0000
5254: bne %r10_0, 0 -> 0x5278 v
5258: %r12_0 = *(0xe400001c)
525c: %r10_0 = rotlw_by_16_then_and %r10_0, 0x000000ff
5264: %r12_1 = add %r12_1, %r10_0
5268: %r12_1 = subf %r12_1, 0x00000050
5270: %r12_0 = add %r13_0, 0x00010000
5278: %r10_0 = and %r11_0, 0xff000000
5280: bne %r10_0, 0 -> 0x52a4 v
5284: %r12_0 = *(0xe400001c)
5288: %r10_0 = rotlw_by_24_then_and %r10_0, 0x00ff0000
5290: %r12_1 = add %r12_1, %r10_0
5294: %r12_1 = subf %r12_1, 0x00500000
529c: %r12_0 = add %r13_0, 0x01000000
52a4: return
52a8: %r10_0 = and %r11_1, 0x000000ff
52b0: bne %r10_0, 0 -> 0x52c8 v
52b4: %r10_0 = *(0xe4000018)
52b8: %r10_0 = and %r10_0, 0x000000ff
52c0: %r12_0 = add %r12_0, %r10_0
52c4: %r12_0 = add %r13_0, 1
52c8: %r10_0 = and %r11_1, 0x0000ff00
52d0: bne %r10_0, 0 -> 0x52ec v
52d4: %r10_0 = *(0xe4000018)
52d8: %r10_0 = and %r10_0, 0x00ff0000
52e0: %r12_0 = add %r12_0, %r10_0
52e4: %r12_0 = add %r13_0, 0x00000100
52ec: %r10_0 = and %r11_1, 0x00ff0000
52f4: bne %r10_0, 0 -> 0x5310 v
52f8: %r10_0 = *(0xe4000018)
52fc: %r10_0 = and %r10_0, 0x000000ff
5304: %r12_1 = add %r12_1, %r10_0
5308: %r12_0 = add %r13_0, 0x00010000
5310: %r10_0 = and %r11_1, 0xff000000
5318: bne %r10_0, 0 -> 0x5334 v
531c: %r10_0 = *(0xe4000018)
5320: %r10_0 = and %r10_0, 0x00ff0000
5328: %r12_1 = add %r12_1, %r10_0
532c: %r12_0 = add %r13_0, 0x01000000
5334: return
5338: %r10_0 = and %r11_0, 0x000000ff
5340: bne %r10_0, 0 -> 0x5360 v
5344: %r10_0 = *(0xe4000018)
5348: %r10_0 = and %r10_0, 0x000000ff
5350: %r12_0 = add %r12_0, %r10_0
5354: %r12_0 = subf %r12_0, 0x00000050
535c: %r12_0 = add %r13_0, 1
5360: %r10_0 = and %r11_0, 0x0000ff00
5368: bne %r10_0, 0 -> 0x538c v
536c: %r10_0 = *(0xe4000018)
5370: %r10_0 = and %r10_0, 0x00ff0000
5378: %r12_0 = add %r12_0, %r10_0
537c: %r12_0 = subf %r12_0, 0x00500000
5384: %r12_0 = add %r13_0, 0x00000100
538c: %r10_0 = and %r11_0, 0x00ff0000
5394: bne %r10_0, 0 -> 0x53b8 v
5398: %r10_0 = *(0xe4000018)
539c: %r10_0 = and %r10_0, 0x000000ff
53a4: %r12_1 = add %r12_1, %r10_0
53a8: %r12_1 = subf %r12_1, 0x00000050
53b0: %r12_0 = add %r13_0, 0x00010000
53b8: %r10_0 = and %r11_0, 0xff000000
53c0: bne %r10_0, 0 -> 0x53e4 v
53c4: %r10_0 = *(0xe4000018)
53c8: %r10_0 = and %r10_0, 0x00ff0000
53d0: %r12_1 = add %r12_1, %r10_0
53d4: %r12_1 = subf %r12_1, 0x00500000
53dc: %r12_0 = add %r13_0, 0x01000000
53e4: return
53e8: store_word %r10_0, 0xe40015e0
53ec: %r10_0 = *(0xe40015e8)
53f0: %r10_0 = rotlw_by_31_then_and %r10_0, 1
53f4: bne %r10_0, 1 -> 0x5400 v
53f8: %r10_0 = *(0xe40015e0)
53fc: jmp 0x5408 v
5400: %r10_0 = *(0xe40015e0)
5404: jmp 0x5498 v
5408: %r13_1 = 0x0000000a
5410: jmp 0x3f28 ^
5414: store_word %r10_0, 0xe40015e0
5418: %r10_0 = *(0xe40015e8)
541c: %r10_0 = rotlw_by_31_then_and %r10_0, 1
5420: bne %r10_0, 1 -> 0x542c v
5424: %r10_0 = *(0xe40015e0)
5428: jmp 0x5434 v
542c: %r10_0 = *(0xe40015e0)
5430: jmp 0x5498 v
5434: %r13_1 = or %r13_1, 0x00000a00
543c: jmp 0x3f4c ^
5440: store_word %r10_0, 0xe40015e0
5444: %r10_0 = *(0xe40015e8)
5448: %r10_0 = rotlw_by_31_then_and %r10_0, 1
544c: bne %r10_0, 1 -> 0x5458 v
5450: %r10_0 = *(0xe40015e0)
5454: jmp 0x5460 v
5458: %r10_0 = *(0xe40015e0)
545c: jmp 0x5498 v
5460: %r13_1 = or %r13_1, 0x000a0000
5468: jmp 0x3f70 ^
546c: store_word %r10_0, 0xe40015e0
5470: %r10_0 = *(0xe40015e8)
5474: %r10_0 = rotlw_by_31_then_and %r10_0, 1
5478: bne %r10_0, 1 -> 0x5484 v
547c: %r10_0 = *(0xe40015e0)
5480: jmp 0x548c v
5484: %r10_0 = *(0xe40015e0)
5488: jmp 0x5498 v
548c: %r13_1 = or %r13_1, 0x0a000000
5494: jmp 0x3f94 ^
5498: op_1E %r10_0, -7
549c: op_1E 0, -7
54a0: call 0x1294
54a4: op_1E 0, -7
54a8: op_1E 1, -7
54ac: call 0x1294
54b0: op_1E 1, -7
54b4: op_1E 2, -7
54b8: call 0x1294
54bc: op_1E 2, -7
54c0: op_1E 3, -7
54c4: call 0x1294
54c8: op_1E 3, -7
54cc: store_word 0x0012129a, 0xe4000024
54d4: call 0x11f0
54d8: %r10_0 = 0x0a0a0a0a
54e0: store_word_0_100 %r10_0, MC0_RD_STR_DLY_0
54e4: store_word_0_100 %r10_0, MC0_RD_STR_DLY_1
54e8: %r10_0 = 0x0f0f0f0f
54f0: store_word_0_100 %r10_0, MC0_WR_STR_DLL_0
54f4: store_word_0_100 %r10_0, MC0_WR_STR_DLL_1
54f8: %r12_0 = *(MC1_WR_STR_DLL_1)
54fc: sync
5500: delay -7
5504: jmp 0x38e8 ^
5508: store_word %r10_0, 0xe40015e0
550c: %r10_0 = *(0xe40015e8)
5510: %r10_0 = rotlw_by_31_then_and %r10_0, 1
5514: bne %r10_0, 1 -> 0x5520 v
5518: %r10_0 = *(0xe40015e0)
551c: jmp 0x5534 v
5520: %r10_0 = *(0xe40015e0)
5524: %r10_0 = load_word -4
5528: %r11_1 = and %r11_1, 0x0000000f
5530: bne %r11_1, 0 -> 0x55e8 v
5534: %r13_1 = 0x0000000f
553c: jmp 0x42b0 ^
5540: store_word %r10_0, 0xe40015e0
5544: %r10_0 = *(0xe40015e8)
5548: %r10_0 = rotlw_by_31_then_and %r10_0, 1
554c: bne %r10_0, 1 -> 0x5558 v
5550: %r10_0 = *(0xe40015e0)
5554: jmp 0x556c v
5558: %r10_0 = *(0xe40015e0)
555c: %r10_0 = load_word -4
5560: %r11_1 = and %r11_1, 0x0000000f
5568: bne %r11_1, 0 -> 0x55e8 v
556c: %r13_1 = or %r13_1, 0x00000f00
5574: jmp 0x42d4 ^
5578: store_word %r10_0, 0xe40015e0
557c: %r10_0 = *(0xe40015e8)
5580: %r10_0 = rotlw_by_31_then_and %r10_0, 1
5584: bne %r10_0, 1 -> 0x5590 v
5588: %r10_0 = *(0xe40015e0)
558c: jmp 0x55a4 v
5590: %r10_0 = *(0xe40015e0)
5594: %r10_0 = load_word -4
5598: %r11_1 = and %r11_1, 0x0000000f
55a0: bne %r11_1, 0 -> 0x55e8 v
55a4: %r13_1 = or %r13_1, 0x000f0000
55ac: jmp 0x42f8 ^
55b0: store_word %r10_0, 0xe40015e0
55b4: %r10_0 = *(0xe40015e8)
55b8: %r10_0 = rotlw_by_31_then_and %r10_0, 1
55bc: bne %r10_0, 1 -> 0x55c8 v
55c0: %r10_0 = *(0xe40015e0)
55c4: jmp 0x55dc v
55c8: %r10_0 = *(0xe40015e0)
55cc: %r10_0 = load_word -4
55d0: %r11_1 = and %r11_1, 0x0000000f
55d8: bne %r11_1, 0 -> 0x55e8 v
55dc: %r13_1 = or %r13_1, 0x0f000000
55e4: jmp 0x431c ^
55e8: op_1E %r10_0, -7
55ec: op_1E 0, -7
55f0: call 0x1294
55f4: op_1E 0, -7
55f8: op_1E 1, -7
55fc: call 0x1294
5600: op_1E 1, -7
5604: op_1E 2, -7
5608: call 0x1294
560c: op_1E 2, -7
5610: op_1E 3, -7
5614: call 0x1294
5618: op_1E 3, -7
561c: store_word 0x0013139a, 0xe4000024
5624: call 0x11f0
5628: jmp 0x54d8 ^
562c: store_word 0x00000515, 0xe1020008
5634: store_word 0x00000010, 0xe1060030
563c: %r10_0 = load_word -5
5644: %r10_0 = and %r11_0, 0xffffe3ff
564c: %r10_0 = or %r11_0, 0x00001000
5654: store_word %r11_0, 0xe1060034
565c: %r12_0 = load_word -5
5660: %r10_0 = or %r11_0, 0x08000000
5668: store_word %r11_0, 0xe1040024
566c: %r10_0 = 0x00356ca9
5674: %r10_0 = or %r10_0, 0x02000000
567c: store_word %r10_0, 0xe400001c
5680: %r10_0 = *(0xe40015e8)
5684: %r10_0 = rotlw_by_29_then_and %r10_0, 1
5688: %r10_0 = load_word -6
568c: %r10_1 = rotlw_by_30_then_and %r10_1, 1
5690: %r10_1 = rotlw_by_1_then_and %r10_1, -1
5694: %r10_0 = or %r10_0, %r10_1
5698: %r10_0 = load_word -6
569c: %r10_1 = rotlw_by_28_then_and %r10_1, 1
56a0: %r10_1 = rotlw_by_2_then_and %r10_1, -1
56a4: %r10_0 = or %r10_0, %r10_1
56a8: %r12_0 = load_word -6
56ac: %r10_1 = rotlw_by_0_then_and %r10_1, 0x0000000f
56b4: %r10_1 = rotlw_by_8_then_and %r10_1, -1
56b8: %r10_0 = or %r10_0, %r10_1
56bc: %r12_0 = load_word -6
56c0: %r10_1 = rotlw_by_28_then_and %r10_1, 0x0000000f
56c8: %r10_1 = rotlw_by_12_then_and %r10_1, -1
56cc: %r10_0 = or %r10_0, %r10_1
56d0: store_word %r10_0, 0xe4000020
56d4: return
